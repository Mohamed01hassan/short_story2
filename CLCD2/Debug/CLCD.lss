
CLCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000069e8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  000069e8  00006a5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003e4c  00000000  00000000  00006ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d8e  00000000  00000000  0000a90c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000b69a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000b7da  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000b94a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000d593  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000e47e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000f22c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000f38c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000f619  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000fde7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ee       	ldi	r30, 0xE8	; 232
      68:	f9 e6       	ldi	r31, 0x69	; 105
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3c       	cpi	r26, 0xC2	; 194
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <main>
      7a:	0c 94 f2 34 	jmp	0x69e4	; 0x69e4 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 bb 34 	jmp	0x6976	; 0x6976 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	aa eb       	ldi	r26, 0xBA	; 186
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d7 34 	jmp	0x69ae	; 0x69ae <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c7 34 	jmp	0x698e	; 0x698e <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 e3 34 	jmp	0x69c6	; 0x69c6 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c7 34 	jmp	0x698e	; 0x698e <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 e3 34 	jmp	0x69c6	; 0x69c6 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 bb 34 	jmp	0x6976	; 0x6976 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8a eb       	ldi	r24, 0xBA	; 186
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d7 34 	jmp	0x69ae	; 0x69ae <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c7 34 	jmp	0x698e	; 0x698e <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 e3 34 	jmp	0x69c6	; 0x69c6 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c7 34 	jmp	0x698e	; 0x698e <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 e3 34 	jmp	0x69c6	; 0x69c6 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c7 34 	jmp	0x698e	; 0x698e <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 e3 34 	jmp	0x69c6	; 0x69c6 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 cb 34 	jmp	0x6996	; 0x6996 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 e7 34 	jmp	0x69ce	; 0x69ce <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <CLCD_u8SendCommand>:
#include <util/delay.h>



u8 CLCD_u8SendCommand(u8 Copy_u8Command)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	60 97       	sbiw	r28, 0x10	; 16
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	88 8b       	std	Y+16, r24	; 0x10
	u8 Local_u8ErrorState=0;
     b4c:	1f 86       	std	Y+15, r1	; 0x0f
	/*Set RS pin to low*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_LOW);
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>
	/* Set RW pin to low for write*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	61 e0       	ldi	r22, 0x01	; 1
     b5c:	40 e0       	ldi	r20, 0x00	; 0
     b5e:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>
	/*Send Command*/
	DIO_u8SetPortValue(CLCD_DATA_PORT, Copy_u8Command);
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	68 89       	ldd	r22, Y+16	; 0x10
     b66:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <DIO_u8SetPortValue>

	/*Set high to E pin for 2 sec*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     b6a:	81 e0       	ldi	r24, 0x01	; 1
     b6c:	62 e0       	ldi	r22, 0x02	; 2
     b6e:	41 e0       	ldi	r20, 0x01	; 1
     b70:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	a0 e0       	ldi	r26, 0x00	; 0
     b7a:	b0 e4       	ldi	r27, 0x40	; 64
     b7c:	8b 87       	std	Y+11, r24	; 0x0b
     b7e:	9c 87       	std	Y+12, r25	; 0x0c
     b80:	ad 87       	std	Y+13, r26	; 0x0d
     b82:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b84:	6b 85       	ldd	r22, Y+11	; 0x0b
     b86:	7c 85       	ldd	r23, Y+12	; 0x0c
     b88:	8d 85       	ldd	r24, Y+13	; 0x0d
     b8a:	9e 85       	ldd	r25, Y+14	; 0x0e
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	4a ef       	ldi	r20, 0xFA	; 250
     b92:	54 e4       	ldi	r21, 0x44	; 68
     b94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b98:	dc 01       	movw	r26, r24
     b9a:	cb 01       	movw	r24, r22
     b9c:	8f 83       	std	Y+7, r24	; 0x07
     b9e:	98 87       	std	Y+8, r25	; 0x08
     ba0:	a9 87       	std	Y+9, r26	; 0x09
     ba2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ba4:	6f 81       	ldd	r22, Y+7	; 0x07
     ba6:	78 85       	ldd	r23, Y+8	; 0x08
     ba8:	89 85       	ldd	r24, Y+9	; 0x09
     baa:	9a 85       	ldd	r25, Y+10	; 0x0a
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	40 e8       	ldi	r20, 0x80	; 128
     bb2:	5f e3       	ldi	r21, 0x3F	; 63
     bb4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bb8:	88 23       	and	r24, r24
     bba:	2c f4       	brge	.+10     	; 0xbc6 <CLCD_u8SendCommand+0x90>
		__ticks = 1;
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	9e 83       	std	Y+6, r25	; 0x06
     bc2:	8d 83       	std	Y+5, r24	; 0x05
     bc4:	3f c0       	rjmp	.+126    	; 0xc44 <CLCD_u8SendCommand+0x10e>
	else if (__tmp > 65535)
     bc6:	6f 81       	ldd	r22, Y+7	; 0x07
     bc8:	78 85       	ldd	r23, Y+8	; 0x08
     bca:	89 85       	ldd	r24, Y+9	; 0x09
     bcc:	9a 85       	ldd	r25, Y+10	; 0x0a
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	3f ef       	ldi	r19, 0xFF	; 255
     bd2:	4f e7       	ldi	r20, 0x7F	; 127
     bd4:	57 e4       	ldi	r21, 0x47	; 71
     bd6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bda:	18 16       	cp	r1, r24
     bdc:	4c f5       	brge	.+82     	; 0xc30 <CLCD_u8SendCommand+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bde:	6b 85       	ldd	r22, Y+11	; 0x0b
     be0:	7c 85       	ldd	r23, Y+12	; 0x0c
     be2:	8d 85       	ldd	r24, Y+13	; 0x0d
     be4:	9e 85       	ldd	r25, Y+14	; 0x0e
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	40 e2       	ldi	r20, 0x20	; 32
     bec:	51 e4       	ldi	r21, 0x41	; 65
     bee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     bf2:	dc 01       	movw	r26, r24
     bf4:	cb 01       	movw	r24, r22
     bf6:	bc 01       	movw	r22, r24
     bf8:	cd 01       	movw	r24, r26
     bfa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     bfe:	dc 01       	movw	r26, r24
     c00:	cb 01       	movw	r24, r22
     c02:	9e 83       	std	Y+6, r25	; 0x06
     c04:	8d 83       	std	Y+5, r24	; 0x05
     c06:	0f c0       	rjmp	.+30     	; 0xc26 <CLCD_u8SendCommand+0xf0>
     c08:	88 ec       	ldi	r24, 0xC8	; 200
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	9c 83       	std	Y+4, r25	; 0x04
     c0e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c10:	8b 81       	ldd	r24, Y+3	; 0x03
     c12:	9c 81       	ldd	r25, Y+4	; 0x04
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	f1 f7       	brne	.-4      	; 0xc14 <CLCD_u8SendCommand+0xde>
     c18:	9c 83       	std	Y+4, r25	; 0x04
     c1a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c1c:	8d 81       	ldd	r24, Y+5	; 0x05
     c1e:	9e 81       	ldd	r25, Y+6	; 0x06
     c20:	01 97       	sbiw	r24, 0x01	; 1
     c22:	9e 83       	std	Y+6, r25	; 0x06
     c24:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c26:	8d 81       	ldd	r24, Y+5	; 0x05
     c28:	9e 81       	ldd	r25, Y+6	; 0x06
     c2a:	00 97       	sbiw	r24, 0x00	; 0
     c2c:	69 f7       	brne	.-38     	; 0xc08 <CLCD_u8SendCommand+0xd2>
     c2e:	14 c0       	rjmp	.+40     	; 0xc58 <CLCD_u8SendCommand+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c30:	6f 81       	ldd	r22, Y+7	; 0x07
     c32:	78 85       	ldd	r23, Y+8	; 0x08
     c34:	89 85       	ldd	r24, Y+9	; 0x09
     c36:	9a 85       	ldd	r25, Y+10	; 0x0a
     c38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c3c:	dc 01       	movw	r26, r24
     c3e:	cb 01       	movw	r24, r22
     c40:	9e 83       	std	Y+6, r25	; 0x06
     c42:	8d 83       	std	Y+5, r24	; 0x05
     c44:	8d 81       	ldd	r24, Y+5	; 0x05
     c46:	9e 81       	ldd	r25, Y+6	; 0x06
     c48:	9a 83       	std	Y+2, r25	; 0x02
     c4a:	89 83       	std	Y+1, r24	; 0x01
     c4c:	89 81       	ldd	r24, Y+1	; 0x01
     c4e:	9a 81       	ldd	r25, Y+2	; 0x02
     c50:	01 97       	sbiw	r24, 0x01	; 1
     c52:	f1 f7       	brne	.-4      	; 0xc50 <CLCD_u8SendCommand+0x11a>
     c54:	9a 83       	std	Y+2, r25	; 0x02
     c56:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	62 e0       	ldi	r22, 0x02	; 2
     c5c:	40 e0       	ldi	r20, 0x00	; 0
     c5e:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>

	return Local_u8ErrorState;
     c62:	8f 85       	ldd	r24, Y+15	; 0x0f
}
     c64:	60 96       	adiw	r28, 0x10	; 16
     c66:	0f b6       	in	r0, 0x3f	; 63
     c68:	f8 94       	cli
     c6a:	de bf       	out	0x3e, r29	; 62
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	cd bf       	out	0x3d, r28	; 61
     c70:	cf 91       	pop	r28
     c72:	df 91       	pop	r29
     c74:	08 95       	ret

00000c76 <CLCD_u8SendData>:

u8 CLCD_u8SendData(u8 Copy_u8Data)
{
     c76:	df 93       	push	r29
     c78:	cf 93       	push	r28
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
     c7e:	60 97       	sbiw	r28, 0x10	; 16
     c80:	0f b6       	in	r0, 0x3f	; 63
     c82:	f8 94       	cli
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	0f be       	out	0x3f, r0	; 63
     c88:	cd bf       	out	0x3d, r28	; 61
     c8a:	88 8b       	std	Y+16, r24	; 0x10
	u8 Local_u8ErrorState=0;
     c8c:	1f 86       	std	Y+15, r1	; 0x0f


	/*Set RS pin to High for data*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_HIGH);
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	60 e0       	ldi	r22, 0x00	; 0
     c92:	41 e0       	ldi	r20, 0x01	; 1
     c94:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>
	/* Set RW pin to low for write*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	61 e0       	ldi	r22, 0x01	; 1
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>
	/*Send Data to Data pins*/
	DIO_u8SetPortValue(CLCD_DATA_PORT, Copy_u8Data);
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	68 89       	ldd	r22, Y+16	; 0x10
     ca6:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <DIO_u8SetPortValue>

	/*Set high to E pin for 2 sec*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	62 e0       	ldi	r22, 0x02	; 2
     cae:	41 e0       	ldi	r20, 0x01	; 1
     cb0:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	a0 e0       	ldi	r26, 0x00	; 0
     cba:	b0 e4       	ldi	r27, 0x40	; 64
     cbc:	8b 87       	std	Y+11, r24	; 0x0b
     cbe:	9c 87       	std	Y+12, r25	; 0x0c
     cc0:	ad 87       	std	Y+13, r26	; 0x0d
     cc2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cc4:	6b 85       	ldd	r22, Y+11	; 0x0b
     cc6:	7c 85       	ldd	r23, Y+12	; 0x0c
     cc8:	8d 85       	ldd	r24, Y+13	; 0x0d
     cca:	9e 85       	ldd	r25, Y+14	; 0x0e
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	4a ef       	ldi	r20, 0xFA	; 250
     cd2:	54 e4       	ldi	r21, 0x44	; 68
     cd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cd8:	dc 01       	movw	r26, r24
     cda:	cb 01       	movw	r24, r22
     cdc:	8f 83       	std	Y+7, r24	; 0x07
     cde:	98 87       	std	Y+8, r25	; 0x08
     ce0:	a9 87       	std	Y+9, r26	; 0x09
     ce2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ce4:	6f 81       	ldd	r22, Y+7	; 0x07
     ce6:	78 85       	ldd	r23, Y+8	; 0x08
     ce8:	89 85       	ldd	r24, Y+9	; 0x09
     cea:	9a 85       	ldd	r25, Y+10	; 0x0a
     cec:	20 e0       	ldi	r18, 0x00	; 0
     cee:	30 e0       	ldi	r19, 0x00	; 0
     cf0:	40 e8       	ldi	r20, 0x80	; 128
     cf2:	5f e3       	ldi	r21, 0x3F	; 63
     cf4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     cf8:	88 23       	and	r24, r24
     cfa:	2c f4       	brge	.+10     	; 0xd06 <CLCD_u8SendData+0x90>
		__ticks = 1;
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	9e 83       	std	Y+6, r25	; 0x06
     d02:	8d 83       	std	Y+5, r24	; 0x05
     d04:	3f c0       	rjmp	.+126    	; 0xd84 <CLCD_u8SendData+0x10e>
	else if (__tmp > 65535)
     d06:	6f 81       	ldd	r22, Y+7	; 0x07
     d08:	78 85       	ldd	r23, Y+8	; 0x08
     d0a:	89 85       	ldd	r24, Y+9	; 0x09
     d0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	3f ef       	ldi	r19, 0xFF	; 255
     d12:	4f e7       	ldi	r20, 0x7F	; 127
     d14:	57 e4       	ldi	r21, 0x47	; 71
     d16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d1a:	18 16       	cp	r1, r24
     d1c:	4c f5       	brge	.+82     	; 0xd70 <CLCD_u8SendData+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d1e:	6b 85       	ldd	r22, Y+11	; 0x0b
     d20:	7c 85       	ldd	r23, Y+12	; 0x0c
     d22:	8d 85       	ldd	r24, Y+13	; 0x0d
     d24:	9e 85       	ldd	r25, Y+14	; 0x0e
     d26:	20 e0       	ldi	r18, 0x00	; 0
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	40 e2       	ldi	r20, 0x20	; 32
     d2c:	51 e4       	ldi	r21, 0x41	; 65
     d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d32:	dc 01       	movw	r26, r24
     d34:	cb 01       	movw	r24, r22
     d36:	bc 01       	movw	r22, r24
     d38:	cd 01       	movw	r24, r26
     d3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d3e:	dc 01       	movw	r26, r24
     d40:	cb 01       	movw	r24, r22
     d42:	9e 83       	std	Y+6, r25	; 0x06
     d44:	8d 83       	std	Y+5, r24	; 0x05
     d46:	0f c0       	rjmp	.+30     	; 0xd66 <CLCD_u8SendData+0xf0>
     d48:	88 ec       	ldi	r24, 0xC8	; 200
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	9c 83       	std	Y+4, r25	; 0x04
     d4e:	8b 83       	std	Y+3, r24	; 0x03
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	9c 81       	ldd	r25, Y+4	; 0x04
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	f1 f7       	brne	.-4      	; 0xd54 <CLCD_u8SendData+0xde>
     d58:	9c 83       	std	Y+4, r25	; 0x04
     d5a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d5c:	8d 81       	ldd	r24, Y+5	; 0x05
     d5e:	9e 81       	ldd	r25, Y+6	; 0x06
     d60:	01 97       	sbiw	r24, 0x01	; 1
     d62:	9e 83       	std	Y+6, r25	; 0x06
     d64:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d66:	8d 81       	ldd	r24, Y+5	; 0x05
     d68:	9e 81       	ldd	r25, Y+6	; 0x06
     d6a:	00 97       	sbiw	r24, 0x00	; 0
     d6c:	69 f7       	brne	.-38     	; 0xd48 <CLCD_u8SendData+0xd2>
     d6e:	14 c0       	rjmp	.+40     	; 0xd98 <CLCD_u8SendData+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d70:	6f 81       	ldd	r22, Y+7	; 0x07
     d72:	78 85       	ldd	r23, Y+8	; 0x08
     d74:	89 85       	ldd	r24, Y+9	; 0x09
     d76:	9a 85       	ldd	r25, Y+10	; 0x0a
     d78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	8d 83       	std	Y+5, r24	; 0x05
     d84:	8d 81       	ldd	r24, Y+5	; 0x05
     d86:	9e 81       	ldd	r25, Y+6	; 0x06
     d88:	9a 83       	std	Y+2, r25	; 0x02
     d8a:	89 83       	std	Y+1, r24	; 0x01
     d8c:	89 81       	ldd	r24, Y+1	; 0x01
     d8e:	9a 81       	ldd	r25, Y+2	; 0x02
     d90:	01 97       	sbiw	r24, 0x01	; 1
     d92:	f1 f7       	brne	.-4      	; 0xd90 <CLCD_u8SendData+0x11a>
     d94:	9a 83       	std	Y+2, r25	; 0x02
     d96:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	62 e0       	ldi	r22, 0x02	; 2
     d9c:	40 e0       	ldi	r20, 0x00	; 0
     d9e:	0e 94 46 0b 	call	0x168c	; 0x168c <DIO_u8SetPinValue>

	return Local_u8ErrorState;
     da2:	8f 85       	ldd	r24, Y+15	; 0x0f
}
     da4:	60 96       	adiw	r28, 0x10	; 16
     da6:	0f b6       	in	r0, 0x3f	; 63
     da8:	f8 94       	cli
     daa:	de bf       	out	0x3e, r29	; 62
     dac:	0f be       	out	0x3f, r0	; 63
     dae:	cd bf       	out	0x3d, r28	; 61
     db0:	cf 91       	pop	r28
     db2:	df 91       	pop	r29
     db4:	08 95       	ret

00000db6 <CLCD_u8SendString>:

u8 CLCD_u8SendString(const char* Copy_pcString)
{
     db6:	df 93       	push	r29
     db8:	cf 93       	push	r28
     dba:	00 d0       	rcall	.+0      	; 0xdbc <CLCD_u8SendString+0x6>
     dbc:	00 d0       	rcall	.+0      	; 0xdbe <CLCD_u8SendString+0x8>
     dbe:	cd b7       	in	r28, 0x3d	; 61
     dc0:	de b7       	in	r29, 0x3e	; 62
     dc2:	9c 83       	std	Y+4, r25	; 0x04
     dc4:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8Counter=0;
     dc6:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8ErrorState=0;
     dc8:	19 82       	std	Y+1, r1	; 0x01
     dca:	0e c0       	rjmp	.+28     	; 0xde8 <CLCD_u8SendString+0x32>

	while (Copy_pcString[Local_u8Counter] != '\0') // still looping until finishing all index of array
	{
		CLCD_u8SendData(Copy_pcString[Local_u8Counter]); // display string
     dcc:	8a 81       	ldd	r24, Y+2	; 0x02
     dce:	28 2f       	mov	r18, r24
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	8b 81       	ldd	r24, Y+3	; 0x03
     dd4:	9c 81       	ldd	r25, Y+4	; 0x04
     dd6:	fc 01       	movw	r30, r24
     dd8:	e2 0f       	add	r30, r18
     dda:	f3 1f       	adc	r31, r19
     ddc:	80 81       	ld	r24, Z
     dde:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>

		Local_u8Counter++;
     de2:	8a 81       	ldd	r24, Y+2	; 0x02
     de4:	8f 5f       	subi	r24, 0xFF	; 255
     de6:	8a 83       	std	Y+2, r24	; 0x02
u8 CLCD_u8SendString(const char* Copy_pcString)
{
	u8 Local_u8Counter=0;
	u8 Local_u8ErrorState=0;

	while (Copy_pcString[Local_u8Counter] != '\0') // still looping until finishing all index of array
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	28 2f       	mov	r18, r24
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	8b 81       	ldd	r24, Y+3	; 0x03
     df0:	9c 81       	ldd	r25, Y+4	; 0x04
     df2:	fc 01       	movw	r30, r24
     df4:	e2 0f       	add	r30, r18
     df6:	f3 1f       	adc	r31, r19
     df8:	80 81       	ld	r24, Z
     dfa:	88 23       	and	r24, r24
     dfc:	39 f7       	brne	.-50     	; 0xdcc <CLCD_u8SendString+0x16>

		Local_u8Counter++;
	}


	return Local_u8ErrorState;
     dfe:	89 81       	ldd	r24, Y+1	; 0x01
}
     e00:	0f 90       	pop	r0
     e02:	0f 90       	pop	r0
     e04:	0f 90       	pop	r0
     e06:	0f 90       	pop	r0
     e08:	cf 91       	pop	r28
     e0a:	df 91       	pop	r29
     e0c:	08 95       	ret

00000e0e <CLCD_u8GoToXY>:


u8 CLCD_u8GoToXY(u8 Copy_u8XPos ,u8 Copy_u8YPos)
{
     e0e:	df 93       	push	r29
     e10:	cf 93       	push	r28
     e12:	00 d0       	rcall	.+0      	; 0xe14 <CLCD_u8GoToXY+0x6>
     e14:	00 d0       	rcall	.+0      	; 0xe16 <CLCD_u8GoToXY+0x8>
     e16:	cd b7       	in	r28, 0x3d	; 61
     e18:	de b7       	in	r29, 0x3e	; 62
     e1a:	8b 83       	std	Y+3, r24	; 0x03
     e1c:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8ErrorState=0;
     e1e:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Address;

	if (Copy_u8XPos==0)
     e20:	8b 81       	ldd	r24, Y+3	; 0x03
     e22:	88 23       	and	r24, r24
     e24:	19 f4       	brne	.+6      	; 0xe2c <CLCD_u8GoToXY+0x1e>
	{
		/*Location is at first line*/
		Local_u8Address=Copy_u8YPos;
     e26:	8c 81       	ldd	r24, Y+4	; 0x04
     e28:	89 83       	std	Y+1, r24	; 0x01
     e2a:	09 c0       	rjmp	.+18     	; 0xe3e <CLCD_u8GoToXY+0x30>
	}
	else if (Copy_u8XPos==1)
     e2c:	8b 81       	ldd	r24, Y+3	; 0x03
     e2e:	81 30       	cpi	r24, 0x01	; 1
     e30:	21 f4       	brne	.+8      	; 0xe3a <CLCD_u8GoToXY+0x2c>
	{
		/*Location is at second line*/
		Local_u8Address=Copy_u8YPos+0x40;
     e32:	8c 81       	ldd	r24, Y+4	; 0x04
     e34:	80 5c       	subi	r24, 0xC0	; 192
     e36:	89 83       	std	Y+1, r24	; 0x01
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <CLCD_u8GoToXY+0x30>
	}
	else Local_u8ErrorState=1;
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	8a 83       	std	Y+2, r24	; 0x02

	CLCD_u8SendCommand(Local_u8Address+128);
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	80 58       	subi	r24, 0x80	; 128
     e42:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	return Local_u8ErrorState;
     e46:	8a 81       	ldd	r24, Y+2	; 0x02
}
     e48:	0f 90       	pop	r0
     e4a:	0f 90       	pop	r0
     e4c:	0f 90       	pop	r0
     e4e:	0f 90       	pop	r0
     e50:	cf 91       	pop	r28
     e52:	df 91       	pop	r29
     e54:	08 95       	ret

00000e56 <CLCD_u8WriteSpecialCharacter>:

u8 CLCD_u8WriteSpecialCharacter(u8* Copy_pu8Pattern, u8 Copy_u8BlockNumber,u8 Copy_u8XPos ,u8 Copy_u8YPos)
{
     e56:	df 93       	push	r29
     e58:	cf 93       	push	r28
     e5a:	cd b7       	in	r28, 0x3d	; 61
     e5c:	de b7       	in	r29, 0x3e	; 62
     e5e:	28 97       	sbiw	r28, 0x08	; 8
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	de bf       	out	0x3e, r29	; 62
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	cd bf       	out	0x3d, r28	; 61
     e6a:	9d 83       	std	Y+5, r25	; 0x05
     e6c:	8c 83       	std	Y+4, r24	; 0x04
     e6e:	6e 83       	std	Y+6, r22	; 0x06
     e70:	4f 83       	std	Y+7, r20	; 0x07
     e72:	28 87       	std	Y+8, r18	; 0x08
	u8 Local_u8ErrorState=0;
     e74:	1b 82       	std	Y+3, r1	; 0x03
	u8 Local_u8CGRAMAddress=0;
     e76:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8BlockNumber*8; //Calculate CGRAM Address whose each block is 8 bytes
     e78:	8e 81       	ldd	r24, Y+6	; 0x06
     e7a:	88 2f       	mov	r24, r24
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	88 0f       	add	r24, r24
     e80:	99 1f       	adc	r25, r25
     e82:	88 0f       	add	r24, r24
     e84:	99 1f       	adc	r25, r25
     e86:	88 0f       	add	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	8a 83       	std	Y+2, r24	; 0x02

	CLCD_u8SendCommand(Local_u8CGRAMAddress+64);  // from datasheet send CGRAM Address to LCD with the sixth digit should be one
     e8c:	8a 81       	ldd	r24, Y+2	; 0x02
     e8e:	80 5c       	subi	r24, 0xC0	; 192
     e90:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	for (Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
     e94:	19 82       	std	Y+1, r1	; 0x01
     e96:	0e c0       	rjmp	.+28     	; 0xeb4 <CLCD_u8WriteSpecialCharacter+0x5e>
	{
		CLCD_u8SendData(Copy_pu8Pattern[Local_u8Counter]);  // write the pattern into CGRAM
     e98:	89 81       	ldd	r24, Y+1	; 0x01
     e9a:	28 2f       	mov	r18, r24
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	8c 81       	ldd	r24, Y+4	; 0x04
     ea0:	9d 81       	ldd	r25, Y+5	; 0x05
     ea2:	fc 01       	movw	r30, r24
     ea4:	e2 0f       	add	r30, r18
     ea6:	f3 1f       	adc	r31, r19
     ea8:	80 81       	ld	r24, Z
     eaa:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>
	u8 Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8BlockNumber*8; //Calculate CGRAM Address whose each block is 8 bytes

	CLCD_u8SendCommand(Local_u8CGRAMAddress+64);  // from datasheet send CGRAM Address to LCD with the sixth digit should be one

	for (Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
     eae:	89 81       	ldd	r24, Y+1	; 0x01
     eb0:	8f 5f       	subi	r24, 0xFF	; 255
     eb2:	89 83       	std	Y+1, r24	; 0x01
     eb4:	89 81       	ldd	r24, Y+1	; 0x01
     eb6:	88 30       	cpi	r24, 0x08	; 8
     eb8:	78 f3       	brcs	.-34     	; 0xe98 <CLCD_u8WriteSpecialCharacter+0x42>
	{
		CLCD_u8SendData(Copy_pu8Pattern[Local_u8Counter]);  // write the pattern into CGRAM
	}

	CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos); //Go back to DDRAM to display
     eba:	8f 81       	ldd	r24, Y+7	; 0x07
     ebc:	68 85       	ldd	r22, Y+8	; 0x08
     ebe:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>

	CLCD_u8SendData(Copy_u8BlockNumber);  //Display the pattern
     ec2:	8e 81       	ldd	r24, Y+6	; 0x06
     ec4:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>


	return Local_u8ErrorState;
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
}
     eca:	28 96       	adiw	r28, 0x08	; 8
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	de bf       	out	0x3e, r29	; 62
     ed2:	0f be       	out	0x3f, r0	; 63
     ed4:	cd bf       	out	0x3d, r28	; 61
     ed6:	cf 91       	pop	r28
     ed8:	df 91       	pop	r29
     eda:	08 95       	ret

00000edc <CLCD_voidShiftingStrLeft>:

void CLCD_voidShiftingStrLeft(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting )
{
     edc:	df 93       	push	r29
     ede:	cf 93       	push	r28
     ee0:	00 d0       	rcall	.+0      	; 0xee2 <CLCD_voidShiftingStrLeft+0x6>
     ee2:	00 d0       	rcall	.+0      	; 0xee4 <CLCD_voidShiftingStrLeft+0x8>
     ee4:	00 d0       	rcall	.+0      	; 0xee6 <CLCD_voidShiftingStrLeft+0xa>
     ee6:	cd b7       	in	r28, 0x3d	; 61
     ee8:	de b7       	in	r29, 0x3e	; 62
     eea:	9b 83       	std	Y+3, r25	; 0x03
     eec:	8a 83       	std	Y+2, r24	; 0x02
     eee:	6c 83       	std	Y+4, r22	; 0x04
     ef0:	4d 83       	std	Y+5, r20	; 0x05
     ef2:	2e 83       	std	Y+6, r18	; 0x06
	u8 Local_u8Iteration;
	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     ef4:	19 82       	std	Y+1, r1	; 0x01
     ef6:	11 c0       	rjmp	.+34     	; 0xf1a <CLCD_voidShiftingStrLeft+0x3e>
	{
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos-Local_u8Iteration);
     ef8:	9d 81       	ldd	r25, Y+5	; 0x05
     efa:	89 81       	ldd	r24, Y+1	; 0x01
     efc:	98 1b       	sub	r25, r24
     efe:	8c 81       	ldd	r24, Y+4	; 0x04
     f00:	69 2f       	mov	r22, r25
     f02:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(&Copy_pcString);
     f06:	ce 01       	movw	r24, r28
     f08:	02 96       	adiw	r24, 0x02	; 2
     f0a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8SendCommand(0b00011000);		//To Shifting left
     f0e:	88 e1       	ldi	r24, 0x18	; 24
     f10:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
}

void CLCD_voidShiftingStrLeft(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting )
{
	u8 Local_u8Iteration;
	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     f14:	89 81       	ldd	r24, Y+1	; 0x01
     f16:	8f 5f       	subi	r24, 0xFF	; 255
     f18:	89 83       	std	Y+1, r24	; 0x01
     f1a:	99 81       	ldd	r25, Y+1	; 0x01
     f1c:	8e 81       	ldd	r24, Y+6	; 0x06
     f1e:	89 17       	cp	r24, r25
     f20:	58 f7       	brcc	.-42     	; 0xef8 <CLCD_voidShiftingStrLeft+0x1c>
	{
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos-Local_u8Iteration);
		CLCD_u8SendString(&Copy_pcString);
		CLCD_u8SendCommand(0b00011000);		//To Shifting left
	}
}
     f22:	26 96       	adiw	r28, 0x06	; 6
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	de bf       	out	0x3e, r29	; 62
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	cd bf       	out	0x3d, r28	; 61
     f2e:	cf 91       	pop	r28
     f30:	df 91       	pop	r29
     f32:	08 95       	ret

00000f34 <CLCD_voidShiftingStrRight>:

void CLCD_voidShiftingStrRight(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting)
{
     f34:	df 93       	push	r29
     f36:	cf 93       	push	r28
     f38:	00 d0       	rcall	.+0      	; 0xf3a <CLCD_voidShiftingStrRight+0x6>
     f3a:	00 d0       	rcall	.+0      	; 0xf3c <CLCD_voidShiftingStrRight+0x8>
     f3c:	00 d0       	rcall	.+0      	; 0xf3e <CLCD_voidShiftingStrRight+0xa>
     f3e:	cd b7       	in	r28, 0x3d	; 61
     f40:	de b7       	in	r29, 0x3e	; 62
     f42:	9b 83       	std	Y+3, r25	; 0x03
     f44:	8a 83       	std	Y+2, r24	; 0x02
     f46:	6c 83       	std	Y+4, r22	; 0x04
     f48:	4d 83       	std	Y+5, r20	; 0x05
     f4a:	2e 83       	std	Y+6, r18	; 0x06
	u8 Local_u8Iteration;

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     f4c:	19 82       	std	Y+1, r1	; 0x01
     f4e:	11 c0       	rjmp	.+34     	; 0xf72 <CLCD_voidShiftingStrRight+0x3e>
	{
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos+Local_u8Iteration);
     f50:	9d 81       	ldd	r25, Y+5	; 0x05
     f52:	89 81       	ldd	r24, Y+1	; 0x01
     f54:	98 0f       	add	r25, r24
     f56:	8c 81       	ldd	r24, Y+4	; 0x04
     f58:	69 2f       	mov	r22, r25
     f5a:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(&Copy_pcString);
     f5e:	ce 01       	movw	r24, r28
     f60:	02 96       	adiw	r24, 0x02	; 2
     f62:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8SendCommand(0b00011100);		//To Shifting right
     f66:	8c e1       	ldi	r24, 0x1C	; 28
     f68:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

void CLCD_voidShiftingStrRight(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting)
{
	u8 Local_u8Iteration;

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     f6c:	89 81       	ldd	r24, Y+1	; 0x01
     f6e:	8f 5f       	subi	r24, 0xFF	; 255
     f70:	89 83       	std	Y+1, r24	; 0x01
     f72:	99 81       	ldd	r25, Y+1	; 0x01
     f74:	8e 81       	ldd	r24, Y+6	; 0x06
     f76:	89 17       	cp	r24, r25
     f78:	58 f7       	brcc	.-42     	; 0xf50 <CLCD_voidShiftingStrRight+0x1c>
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos+Local_u8Iteration);
		CLCD_u8SendString(&Copy_pcString);
		CLCD_u8SendCommand(0b00011100);		//To Shifting right

	}
}
     f7a:	26 96       	adiw	r28, 0x06	; 6
     f7c:	0f b6       	in	r0, 0x3f	; 63
     f7e:	f8 94       	cli
     f80:	de bf       	out	0x3e, r29	; 62
     f82:	0f be       	out	0x3f, r0	; 63
     f84:	cd bf       	out	0x3d, r28	; 61
     f86:	cf 91       	pop	r28
     f88:	df 91       	pop	r29
     f8a:	08 95       	ret

00000f8c <CLCD_voidWriteNumber>:
void CLCD_voidWriteNumber(u32 Copy_u32Number)
{
     f8c:	0f 93       	push	r16
     f8e:	1f 93       	push	r17
     f90:	df 93       	push	r29
     f92:	cf 93       	push	r28
     f94:	cd b7       	in	r28, 0x3d	; 61
     f96:	de b7       	in	r29, 0x3e	; 62
     f98:	66 97       	sbiw	r28, 0x16	; 22
     f9a:	0f b6       	in	r0, 0x3f	; 63
     f9c:	f8 94       	cli
     f9e:	de bf       	out	0x3e, r29	; 62
     fa0:	0f be       	out	0x3f, r0	; 63
     fa2:	cd bf       	out	0x3d, r28	; 61
     fa4:	6b 8b       	std	Y+19, r22	; 0x13
     fa6:	7c 8b       	std	Y+20, r23	; 0x14
     fa8:	8d 8b       	std	Y+21, r24	; 0x15
     faa:	9e 8b       	std	Y+22, r25	; 0x16

	u8 Local_u8Counter1=0;
     fac:	1b 82       	std	Y+3, r1	; 0x03
     fae:	2d c0       	rjmp	.+90     	; 0x100a <CLCD_voidWriteNumber+0x7e>

	char NUM[15];		//Max No. of Characters in one row on LMB161A LCD

	while(Copy_u32Number != 0)
	{
		NUM[Local_u8Counter1]=Copy_u32Number % 10 ;  // To Get only Last digit
     fb0:	8b 81       	ldd	r24, Y+3	; 0x03
     fb2:	08 2f       	mov	r16, r24
     fb4:	10 e0       	ldi	r17, 0x00	; 0
     fb6:	8b 89       	ldd	r24, Y+19	; 0x13
     fb8:	9c 89       	ldd	r25, Y+20	; 0x14
     fba:	ad 89       	ldd	r26, Y+21	; 0x15
     fbc:	be 89       	ldd	r27, Y+22	; 0x16
     fbe:	2a e0       	ldi	r18, 0x0A	; 10
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	40 e0       	ldi	r20, 0x00	; 0
     fc4:	50 e0       	ldi	r21, 0x00	; 0
     fc6:	bc 01       	movw	r22, r24
     fc8:	cd 01       	movw	r24, r26
     fca:	0e 94 99 34 	call	0x6932	; 0x6932 <__udivmodsi4>
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	28 2f       	mov	r18, r24
     fd4:	ce 01       	movw	r24, r28
     fd6:	04 96       	adiw	r24, 0x04	; 4
     fd8:	fc 01       	movw	r30, r24
     fda:	e0 0f       	add	r30, r16
     fdc:	f1 1f       	adc	r31, r17
     fde:	20 83       	st	Z, r18
		Copy_u32Number/=10;   // new number is previous number without last digit
     fe0:	8b 89       	ldd	r24, Y+19	; 0x13
     fe2:	9c 89       	ldd	r25, Y+20	; 0x14
     fe4:	ad 89       	ldd	r26, Y+21	; 0x15
     fe6:	be 89       	ldd	r27, Y+22	; 0x16
     fe8:	2a e0       	ldi	r18, 0x0A	; 10
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	40 e0       	ldi	r20, 0x00	; 0
     fee:	50 e0       	ldi	r21, 0x00	; 0
     ff0:	bc 01       	movw	r22, r24
     ff2:	cd 01       	movw	r24, r26
     ff4:	0e 94 99 34 	call	0x6932	; 0x6932 <__udivmodsi4>
     ff8:	da 01       	movw	r26, r20
     ffa:	c9 01       	movw	r24, r18
     ffc:	8b 8b       	std	Y+19, r24	; 0x13
     ffe:	9c 8b       	std	Y+20, r25	; 0x14
    1000:	ad 8b       	std	Y+21, r26	; 0x15
    1002:	be 8b       	std	Y+22, r27	; 0x16
		Local_u8Counter1++;
    1004:	8b 81       	ldd	r24, Y+3	; 0x03
    1006:	8f 5f       	subi	r24, 0xFF	; 255
    1008:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8Counter1=0;
	u8 Local_u8Counter2;

	char NUM[15];		//Max No. of Characters in one row on LMB161A LCD

	while(Copy_u32Number != 0)
    100a:	8b 89       	ldd	r24, Y+19	; 0x13
    100c:	9c 89       	ldd	r25, Y+20	; 0x14
    100e:	ad 89       	ldd	r26, Y+21	; 0x15
    1010:	be 89       	ldd	r27, Y+22	; 0x16
    1012:	00 97       	sbiw	r24, 0x00	; 0
    1014:	a1 05       	cpc	r26, r1
    1016:	b1 05       	cpc	r27, r1
    1018:	59 f6       	brne	.-106    	; 0xfb0 <CLCD_voidWriteNumber+0x24>
		NUM[Local_u8Counter1]=Copy_u32Number % 10 ;  // To Get only Last digit
		Copy_u32Number/=10;   // new number is previous number without last digit
		Local_u8Counter1++;
	}

	u8 Local_u8ArrSize=Local_u8Counter1;  // To identify the size of  our Array
    101a:	8b 81       	ldd	r24, Y+3	; 0x03
    101c:	89 83       	std	Y+1, r24	; 0x01

	for (Local_u8Counter2=Local_u8ArrSize;Local_u8Counter2>0;Local_u8Counter2--)
    101e:	89 81       	ldd	r24, Y+1	; 0x01
    1020:	8a 83       	std	Y+2, r24	; 0x02
    1022:	12 c0       	rjmp	.+36     	; 0x1048 <CLCD_voidWriteNumber+0xbc>
	{
		CLCD_u8SendData(NUM[Local_u8Counter2-1]+'0');  // To print The correct Number
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	88 2f       	mov	r24, r24
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	9c 01       	movw	r18, r24
    102c:	21 50       	subi	r18, 0x01	; 1
    102e:	30 40       	sbci	r19, 0x00	; 0
    1030:	ce 01       	movw	r24, r28
    1032:	04 96       	adiw	r24, 0x04	; 4
    1034:	fc 01       	movw	r30, r24
    1036:	e2 0f       	add	r30, r18
    1038:	f3 1f       	adc	r31, r19
    103a:	80 81       	ld	r24, Z
    103c:	80 5d       	subi	r24, 0xD0	; 208
    103e:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>
		Local_u8Counter1++;
	}

	u8 Local_u8ArrSize=Local_u8Counter1;  // To identify the size of  our Array

	for (Local_u8Counter2=Local_u8ArrSize;Local_u8Counter2>0;Local_u8Counter2--)
    1042:	8a 81       	ldd	r24, Y+2	; 0x02
    1044:	81 50       	subi	r24, 0x01	; 1
    1046:	8a 83       	std	Y+2, r24	; 0x02
    1048:	8a 81       	ldd	r24, Y+2	; 0x02
    104a:	88 23       	and	r24, r24
    104c:	59 f7       	brne	.-42     	; 0x1024 <CLCD_voidWriteNumber+0x98>
	{
		CLCD_u8SendData(NUM[Local_u8Counter2-1]+'0');  // To print The correct Number
	}

}
    104e:	66 96       	adiw	r28, 0x16	; 22
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	cf 91       	pop	r28
    105c:	df 91       	pop	r29
    105e:	1f 91       	pop	r17
    1060:	0f 91       	pop	r16
    1062:	08 95       	ret

00001064 <CLCD_voidShiftingSpecialChar>:


void CLCD_voidShiftingSpecialChar(u8* Copy_pu8Pattern, u8 Copy_u8BlockNum, u8 Copy_u8XPos ,u8 Copy_u8YPos , u8 Copy_u8NumOfShiting ,u8 Copy_u8TypeOfShifting)
{
    1064:	ef 92       	push	r14
    1066:	0f 93       	push	r16
    1068:	df 93       	push	r29
    106a:	cf 93       	push	r28
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	a4 97       	sbiw	r28, 0x24	; 36
    1072:	0f b6       	in	r0, 0x3f	; 63
    1074:	f8 94       	cli
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	cd bf       	out	0x3d, r28	; 61
    107c:	9f 8f       	std	Y+31, r25	; 0x1f
    107e:	8e 8f       	std	Y+30, r24	; 0x1e
    1080:	68 a3       	std	Y+32, r22	; 0x20
    1082:	49 a3       	std	Y+33, r20	; 0x21
    1084:	2a a3       	std	Y+34, r18	; 0x22
    1086:	0b a3       	std	Y+35, r16	; 0x23
    1088:	ec a2       	std	Y+36, r14	; 0x24
	u8 Local_u8Iteration;
	CLCD_u8WriteSpecialCharacter(Copy_pu8Pattern,Copy_u8BlockNum,Copy_u8XPos,Copy_u8YPos);
    108a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    108c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    108e:	68 a1       	ldd	r22, Y+32	; 0x20
    1090:	49 a1       	ldd	r20, Y+33	; 0x21
    1092:	2a a1       	ldd	r18, Y+34	; 0x22
    1094:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
	if(Copy_u8TypeOfShifting==CLCD_SHIFTING_LEFT)
    1098:	8c a1       	ldd	r24, Y+36	; 0x24
    109a:	88 23       	and	r24, r24
    109c:	09 f0       	breq	.+2      	; 0x10a0 <CLCD_voidShiftingSpecialChar+0x3c>
    109e:	80 c0       	rjmp	.+256    	; 0x11a0 <CLCD_voidShiftingSpecialChar+0x13c>

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    10a0:	1d 8e       	std	Y+29, r1	; 0x1d
    10a2:	78 c0       	rjmp	.+240    	; 0x1194 <CLCD_voidShiftingSpecialChar+0x130>
	{

		CLCD_u8SendCommand(0b00011000);		//To Shifting left
    10a4:	88 e1       	ldi	r24, 0x18	; 24
    10a6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
    10aa:	80 e0       	ldi	r24, 0x00	; 0
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	a8 e4       	ldi	r26, 0x48	; 72
    10b0:	b2 e4       	ldi	r27, 0x42	; 66
    10b2:	89 8f       	std	Y+25, r24	; 0x19
    10b4:	9a 8f       	std	Y+26, r25	; 0x1a
    10b6:	ab 8f       	std	Y+27, r26	; 0x1b
    10b8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ba:	69 8d       	ldd	r22, Y+25	; 0x19
    10bc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10c2:	20 e0       	ldi	r18, 0x00	; 0
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	4a ef       	ldi	r20, 0xFA	; 250
    10c8:	54 e4       	ldi	r21, 0x44	; 68
    10ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10ce:	dc 01       	movw	r26, r24
    10d0:	cb 01       	movw	r24, r22
    10d2:	8d 8b       	std	Y+21, r24	; 0x15
    10d4:	9e 8b       	std	Y+22, r25	; 0x16
    10d6:	af 8b       	std	Y+23, r26	; 0x17
    10d8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    10da:	6d 89       	ldd	r22, Y+21	; 0x15
    10dc:	7e 89       	ldd	r23, Y+22	; 0x16
    10de:	8f 89       	ldd	r24, Y+23	; 0x17
    10e0:	98 8d       	ldd	r25, Y+24	; 0x18
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	40 e8       	ldi	r20, 0x80	; 128
    10e8:	5f e3       	ldi	r21, 0x3F	; 63
    10ea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    10ee:	88 23       	and	r24, r24
    10f0:	2c f4       	brge	.+10     	; 0x10fc <CLCD_voidShiftingSpecialChar+0x98>
		__ticks = 1;
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	9c 8b       	std	Y+20, r25	; 0x14
    10f8:	8b 8b       	std	Y+19, r24	; 0x13
    10fa:	3f c0       	rjmp	.+126    	; 0x117a <CLCD_voidShiftingSpecialChar+0x116>
	else if (__tmp > 65535)
    10fc:	6d 89       	ldd	r22, Y+21	; 0x15
    10fe:	7e 89       	ldd	r23, Y+22	; 0x16
    1100:	8f 89       	ldd	r24, Y+23	; 0x17
    1102:	98 8d       	ldd	r25, Y+24	; 0x18
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	3f ef       	ldi	r19, 0xFF	; 255
    1108:	4f e7       	ldi	r20, 0x7F	; 127
    110a:	57 e4       	ldi	r21, 0x47	; 71
    110c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1110:	18 16       	cp	r1, r24
    1112:	4c f5       	brge	.+82     	; 0x1166 <CLCD_voidShiftingSpecialChar+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1114:	69 8d       	ldd	r22, Y+25	; 0x19
    1116:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1118:	8b 8d       	ldd	r24, Y+27	; 0x1b
    111a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 e2       	ldi	r20, 0x20	; 32
    1122:	51 e4       	ldi	r21, 0x41	; 65
    1124:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	bc 01       	movw	r22, r24
    112e:	cd 01       	movw	r24, r26
    1130:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	9c 8b       	std	Y+20, r25	; 0x14
    113a:	8b 8b       	std	Y+19, r24	; 0x13
    113c:	0f c0       	rjmp	.+30     	; 0x115c <CLCD_voidShiftingSpecialChar+0xf8>
    113e:	88 ec       	ldi	r24, 0xC8	; 200
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	9a 8b       	std	Y+18, r25	; 0x12
    1144:	89 8b       	std	Y+17, r24	; 0x11
    1146:	89 89       	ldd	r24, Y+17	; 0x11
    1148:	9a 89       	ldd	r25, Y+18	; 0x12
    114a:	01 97       	sbiw	r24, 0x01	; 1
    114c:	f1 f7       	brne	.-4      	; 0x114a <CLCD_voidShiftingSpecialChar+0xe6>
    114e:	9a 8b       	std	Y+18, r25	; 0x12
    1150:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1152:	8b 89       	ldd	r24, Y+19	; 0x13
    1154:	9c 89       	ldd	r25, Y+20	; 0x14
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	9c 8b       	std	Y+20, r25	; 0x14
    115a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    115c:	8b 89       	ldd	r24, Y+19	; 0x13
    115e:	9c 89       	ldd	r25, Y+20	; 0x14
    1160:	00 97       	sbiw	r24, 0x00	; 0
    1162:	69 f7       	brne	.-38     	; 0x113e <CLCD_voidShiftingSpecialChar+0xda>
    1164:	14 c0       	rjmp	.+40     	; 0x118e <CLCD_voidShiftingSpecialChar+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1166:	6d 89       	ldd	r22, Y+21	; 0x15
    1168:	7e 89       	ldd	r23, Y+22	; 0x16
    116a:	8f 89       	ldd	r24, Y+23	; 0x17
    116c:	98 8d       	ldd	r25, Y+24	; 0x18
    116e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1172:	dc 01       	movw	r26, r24
    1174:	cb 01       	movw	r24, r22
    1176:	9c 8b       	std	Y+20, r25	; 0x14
    1178:	8b 8b       	std	Y+19, r24	; 0x13
    117a:	8b 89       	ldd	r24, Y+19	; 0x13
    117c:	9c 89       	ldd	r25, Y+20	; 0x14
    117e:	98 8b       	std	Y+16, r25	; 0x10
    1180:	8f 87       	std	Y+15, r24	; 0x0f
    1182:	8f 85       	ldd	r24, Y+15	; 0x0f
    1184:	98 89       	ldd	r25, Y+16	; 0x10
    1186:	01 97       	sbiw	r24, 0x01	; 1
    1188:	f1 f7       	brne	.-4      	; 0x1186 <CLCD_voidShiftingSpecialChar+0x122>
    118a:	98 8b       	std	Y+16, r25	; 0x10
    118c:	8f 87       	std	Y+15, r24	; 0x0f
{
	u8 Local_u8Iteration;
	CLCD_u8WriteSpecialCharacter(Copy_pu8Pattern,Copy_u8BlockNum,Copy_u8XPos,Copy_u8YPos);
	if(Copy_u8TypeOfShifting==CLCD_SHIFTING_LEFT)

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    118e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1190:	8f 5f       	subi	r24, 0xFF	; 255
    1192:	8d 8f       	std	Y+29, r24	; 0x1d
    1194:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1196:	8b a1       	ldd	r24, Y+35	; 0x23
    1198:	89 17       	cp	r24, r25
    119a:	08 f0       	brcs	.+2      	; 0x119e <CLCD_voidShiftingSpecialChar+0x13a>
    119c:	83 cf       	rjmp	.-250    	; 0x10a4 <CLCD_voidShiftingSpecialChar+0x40>
    119e:	83 c0       	rjmp	.+262    	; 0x12a6 <CLCD_voidShiftingSpecialChar+0x242>
	{

		CLCD_u8SendCommand(0b00011000);		//To Shifting left
		_delay_ms(50);
	}
	else if (Copy_u8TypeOfShifting==CLCD_SHIFTING_RIGHT)
    11a0:	8c a1       	ldd	r24, Y+36	; 0x24
    11a2:	81 30       	cpi	r24, 0x01	; 1
    11a4:	09 f0       	breq	.+2      	; 0x11a8 <CLCD_voidShiftingSpecialChar+0x144>
    11a6:	7f c0       	rjmp	.+254    	; 0x12a6 <CLCD_voidShiftingSpecialChar+0x242>
		for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    11a8:	1d 8e       	std	Y+29, r1	; 0x1d
    11aa:	78 c0       	rjmp	.+240    	; 0x129c <CLCD_voidShiftingSpecialChar+0x238>
		{

			CLCD_u8SendCommand(0b00011100);		//To Shifting left
    11ac:	8c e1       	ldi	r24, 0x1C	; 28
    11ae:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	a8 e4       	ldi	r26, 0x48	; 72
    11b8:	b2 e4       	ldi	r27, 0x42	; 66
    11ba:	8b 87       	std	Y+11, r24	; 0x0b
    11bc:	9c 87       	std	Y+12, r25	; 0x0c
    11be:	ad 87       	std	Y+13, r26	; 0x0d
    11c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    11c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    11c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    11c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	4a ef       	ldi	r20, 0xFA	; 250
    11d0:	54 e4       	ldi	r21, 0x44	; 68
    11d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	8f 83       	std	Y+7, r24	; 0x07
    11dc:	98 87       	std	Y+8, r25	; 0x08
    11de:	a9 87       	std	Y+9, r26	; 0x09
    11e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11e2:	6f 81       	ldd	r22, Y+7	; 0x07
    11e4:	78 85       	ldd	r23, Y+8	; 0x08
    11e6:	89 85       	ldd	r24, Y+9	; 0x09
    11e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ea:	20 e0       	ldi	r18, 0x00	; 0
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	40 e8       	ldi	r20, 0x80	; 128
    11f0:	5f e3       	ldi	r21, 0x3F	; 63
    11f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11f6:	88 23       	and	r24, r24
    11f8:	2c f4       	brge	.+10     	; 0x1204 <CLCD_voidShiftingSpecialChar+0x1a0>
		__ticks = 1;
    11fa:	81 e0       	ldi	r24, 0x01	; 1
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	9e 83       	std	Y+6, r25	; 0x06
    1200:	8d 83       	std	Y+5, r24	; 0x05
    1202:	3f c0       	rjmp	.+126    	; 0x1282 <CLCD_voidShiftingSpecialChar+0x21e>
	else if (__tmp > 65535)
    1204:	6f 81       	ldd	r22, Y+7	; 0x07
    1206:	78 85       	ldd	r23, Y+8	; 0x08
    1208:	89 85       	ldd	r24, Y+9	; 0x09
    120a:	9a 85       	ldd	r25, Y+10	; 0x0a
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	3f ef       	ldi	r19, 0xFF	; 255
    1210:	4f e7       	ldi	r20, 0x7F	; 127
    1212:	57 e4       	ldi	r21, 0x47	; 71
    1214:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1218:	18 16       	cp	r1, r24
    121a:	4c f5       	brge	.+82     	; 0x126e <CLCD_voidShiftingSpecialChar+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    121c:	6b 85       	ldd	r22, Y+11	; 0x0b
    121e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1220:	8d 85       	ldd	r24, Y+13	; 0x0d
    1222:	9e 85       	ldd	r25, Y+14	; 0x0e
    1224:	20 e0       	ldi	r18, 0x00	; 0
    1226:	30 e0       	ldi	r19, 0x00	; 0
    1228:	40 e2       	ldi	r20, 0x20	; 32
    122a:	51 e4       	ldi	r21, 0x41	; 65
    122c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1230:	dc 01       	movw	r26, r24
    1232:	cb 01       	movw	r24, r22
    1234:	bc 01       	movw	r22, r24
    1236:	cd 01       	movw	r24, r26
    1238:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	9e 83       	std	Y+6, r25	; 0x06
    1242:	8d 83       	std	Y+5, r24	; 0x05
    1244:	0f c0       	rjmp	.+30     	; 0x1264 <CLCD_voidShiftingSpecialChar+0x200>
    1246:	88 ec       	ldi	r24, 0xC8	; 200
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	9c 83       	std	Y+4, r25	; 0x04
    124c:	8b 83       	std	Y+3, r24	; 0x03
    124e:	8b 81       	ldd	r24, Y+3	; 0x03
    1250:	9c 81       	ldd	r25, Y+4	; 0x04
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	f1 f7       	brne	.-4      	; 0x1252 <CLCD_voidShiftingSpecialChar+0x1ee>
    1256:	9c 83       	std	Y+4, r25	; 0x04
    1258:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    125a:	8d 81       	ldd	r24, Y+5	; 0x05
    125c:	9e 81       	ldd	r25, Y+6	; 0x06
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	9e 83       	std	Y+6, r25	; 0x06
    1262:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1264:	8d 81       	ldd	r24, Y+5	; 0x05
    1266:	9e 81       	ldd	r25, Y+6	; 0x06
    1268:	00 97       	sbiw	r24, 0x00	; 0
    126a:	69 f7       	brne	.-38     	; 0x1246 <CLCD_voidShiftingSpecialChar+0x1e2>
    126c:	14 c0       	rjmp	.+40     	; 0x1296 <CLCD_voidShiftingSpecialChar+0x232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    126e:	6f 81       	ldd	r22, Y+7	; 0x07
    1270:	78 85       	ldd	r23, Y+8	; 0x08
    1272:	89 85       	ldd	r24, Y+9	; 0x09
    1274:	9a 85       	ldd	r25, Y+10	; 0x0a
    1276:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    127a:	dc 01       	movw	r26, r24
    127c:	cb 01       	movw	r24, r22
    127e:	9e 83       	std	Y+6, r25	; 0x06
    1280:	8d 83       	std	Y+5, r24	; 0x05
    1282:	8d 81       	ldd	r24, Y+5	; 0x05
    1284:	9e 81       	ldd	r25, Y+6	; 0x06
    1286:	9a 83       	std	Y+2, r25	; 0x02
    1288:	89 83       	std	Y+1, r24	; 0x01
    128a:	89 81       	ldd	r24, Y+1	; 0x01
    128c:	9a 81       	ldd	r25, Y+2	; 0x02
    128e:	01 97       	sbiw	r24, 0x01	; 1
    1290:	f1 f7       	brne	.-4      	; 0x128e <CLCD_voidShiftingSpecialChar+0x22a>
    1292:	9a 83       	std	Y+2, r25	; 0x02
    1294:	89 83       	std	Y+1, r24	; 0x01

		CLCD_u8SendCommand(0b00011000);		//To Shifting left
		_delay_ms(50);
	}
	else if (Copy_u8TypeOfShifting==CLCD_SHIFTING_RIGHT)
		for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    1296:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1298:	8f 5f       	subi	r24, 0xFF	; 255
    129a:	8d 8f       	std	Y+29, r24	; 0x1d
    129c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    129e:	8b a1       	ldd	r24, Y+35	; 0x23
    12a0:	89 17       	cp	r24, r25
    12a2:	08 f0       	brcs	.+2      	; 0x12a6 <CLCD_voidShiftingSpecialChar+0x242>
    12a4:	83 cf       	rjmp	.-250    	; 0x11ac <CLCD_voidShiftingSpecialChar+0x148>

			CLCD_u8SendCommand(0b00011100);		//To Shifting left
			_delay_ms(50);
		}

}
    12a6:	a4 96       	adiw	r28, 0x24	; 36
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	f8 94       	cli
    12ac:	de bf       	out	0x3e, r29	; 62
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	cd bf       	out	0x3d, r28	; 61
    12b2:	cf 91       	pop	r28
    12b4:	df 91       	pop	r29
    12b6:	0f 91       	pop	r16
    12b8:	ef 90       	pop	r14
    12ba:	08 95       	ret

000012bc <CLCD_voidIntialization>:

void CLCD_voidIntialization(void)
{
    12bc:	df 93       	push	r29
    12be:	cf 93       	push	r28
    12c0:	cd b7       	in	r28, 0x3d	; 61
    12c2:	de b7       	in	r29, 0x3e	; 62
    12c4:	2e 97       	sbiw	r28, 0x0e	; 14
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	80 e0       	ldi	r24, 0x00	; 0
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	a0 e2       	ldi	r26, 0x20	; 32
    12d6:	b2 e4       	ldi	r27, 0x42	; 66
    12d8:	8b 87       	std	Y+11, r24	; 0x0b
    12da:	9c 87       	std	Y+12, r25	; 0x0c
    12dc:	ad 87       	std	Y+13, r26	; 0x0d
    12de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    12e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    12e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    12e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	4a ef       	ldi	r20, 0xFA	; 250
    12ee:	54 e4       	ldi	r21, 0x44	; 68
    12f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12f4:	dc 01       	movw	r26, r24
    12f6:	cb 01       	movw	r24, r22
    12f8:	8f 83       	std	Y+7, r24	; 0x07
    12fa:	98 87       	std	Y+8, r25	; 0x08
    12fc:	a9 87       	std	Y+9, r26	; 0x09
    12fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1300:	6f 81       	ldd	r22, Y+7	; 0x07
    1302:	78 85       	ldd	r23, Y+8	; 0x08
    1304:	89 85       	ldd	r24, Y+9	; 0x09
    1306:	9a 85       	ldd	r25, Y+10	; 0x0a
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	40 e8       	ldi	r20, 0x80	; 128
    130e:	5f e3       	ldi	r21, 0x3F	; 63
    1310:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1314:	88 23       	and	r24, r24
    1316:	2c f4       	brge	.+10     	; 0x1322 <CLCD_voidIntialization+0x66>
		__ticks = 1;
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	9e 83       	std	Y+6, r25	; 0x06
    131e:	8d 83       	std	Y+5, r24	; 0x05
    1320:	3f c0       	rjmp	.+126    	; 0x13a0 <CLCD_voidIntialization+0xe4>
	else if (__tmp > 65535)
    1322:	6f 81       	ldd	r22, Y+7	; 0x07
    1324:	78 85       	ldd	r23, Y+8	; 0x08
    1326:	89 85       	ldd	r24, Y+9	; 0x09
    1328:	9a 85       	ldd	r25, Y+10	; 0x0a
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	3f ef       	ldi	r19, 0xFF	; 255
    132e:	4f e7       	ldi	r20, 0x7F	; 127
    1330:	57 e4       	ldi	r21, 0x47	; 71
    1332:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1336:	18 16       	cp	r1, r24
    1338:	4c f5       	brge	.+82     	; 0x138c <CLCD_voidIntialization+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    133a:	6b 85       	ldd	r22, Y+11	; 0x0b
    133c:	7c 85       	ldd	r23, Y+12	; 0x0c
    133e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1340:	9e 85       	ldd	r25, Y+14	; 0x0e
    1342:	20 e0       	ldi	r18, 0x00	; 0
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	40 e2       	ldi	r20, 0x20	; 32
    1348:	51 e4       	ldi	r21, 0x41	; 65
    134a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    134e:	dc 01       	movw	r26, r24
    1350:	cb 01       	movw	r24, r22
    1352:	bc 01       	movw	r22, r24
    1354:	cd 01       	movw	r24, r26
    1356:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    135a:	dc 01       	movw	r26, r24
    135c:	cb 01       	movw	r24, r22
    135e:	9e 83       	std	Y+6, r25	; 0x06
    1360:	8d 83       	std	Y+5, r24	; 0x05
    1362:	0f c0       	rjmp	.+30     	; 0x1382 <CLCD_voidIntialization+0xc6>
    1364:	88 ec       	ldi	r24, 0xC8	; 200
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	9c 83       	std	Y+4, r25	; 0x04
    136a:	8b 83       	std	Y+3, r24	; 0x03
    136c:	8b 81       	ldd	r24, Y+3	; 0x03
    136e:	9c 81       	ldd	r25, Y+4	; 0x04
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <CLCD_voidIntialization+0xb4>
    1374:	9c 83       	std	Y+4, r25	; 0x04
    1376:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1378:	8d 81       	ldd	r24, Y+5	; 0x05
    137a:	9e 81       	ldd	r25, Y+6	; 0x06
    137c:	01 97       	sbiw	r24, 0x01	; 1
    137e:	9e 83       	std	Y+6, r25	; 0x06
    1380:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1382:	8d 81       	ldd	r24, Y+5	; 0x05
    1384:	9e 81       	ldd	r25, Y+6	; 0x06
    1386:	00 97       	sbiw	r24, 0x00	; 0
    1388:	69 f7       	brne	.-38     	; 0x1364 <CLCD_voidIntialization+0xa8>
    138a:	14 c0       	rjmp	.+40     	; 0x13b4 <CLCD_voidIntialization+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    138c:	6f 81       	ldd	r22, Y+7	; 0x07
    138e:	78 85       	ldd	r23, Y+8	; 0x08
    1390:	89 85       	ldd	r24, Y+9	; 0x09
    1392:	9a 85       	ldd	r25, Y+10	; 0x0a
    1394:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1398:	dc 01       	movw	r26, r24
    139a:	cb 01       	movw	r24, r22
    139c:	9e 83       	std	Y+6, r25	; 0x06
    139e:	8d 83       	std	Y+5, r24	; 0x05
    13a0:	8d 81       	ldd	r24, Y+5	; 0x05
    13a2:	9e 81       	ldd	r25, Y+6	; 0x06
    13a4:	9a 83       	std	Y+2, r25	; 0x02
    13a6:	89 83       	std	Y+1, r24	; 0x01
    13a8:	89 81       	ldd	r24, Y+1	; 0x01
    13aa:	9a 81       	ldd	r25, Y+2	; 0x02
    13ac:	01 97       	sbiw	r24, 0x01	; 1
    13ae:	f1 f7       	brne	.-4      	; 0x13ac <CLCD_voidIntialization+0xf0>
    13b0:	9a 83       	std	Y+2, r25	; 0x02
    13b2:	89 83       	std	Y+1, r24	; 0x01
	/*wait for 40 ms*/
	_delay_ms(40);
	/*command func set*/
	CLCD_u8SendCommand(0b00111100);
    13b4:	8c e3       	ldi	r24, 0x3C	; 60
    13b6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	/*wait for 39 micro second
 we made delay already on the implementation of SendCommand func */

	/*display on off control : display enable,disable cursor & no blink cursor */
	CLCD_u8SendCommand(0b00001100);
    13ba:	8c e0       	ldi	r24, 0x0C	; 12
    13bc:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	/*wait for 39 micro second
 we made delay already on the implementation of SendCommand func */

	/*Clear display*/
	CLCD_u8SendCommand(0b00000001);
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>


}
    13c6:	2e 96       	adiw	r28, 0x0e	; 14
    13c8:	0f b6       	in	r0, 0x3f	; 63
    13ca:	f8 94       	cli
    13cc:	de bf       	out	0x3e, r29	; 62
    13ce:	0f be       	out	0x3f, r0	; 63
    13d0:	cd bf       	out	0x3d, r28	; 61
    13d2:	cf 91       	pop	r28
    13d4:	df 91       	pop	r29
    13d6:	08 95       	ret

000013d8 <DIO_u8SetPinDirection>:




u8 DIO_u8SetPinDirection(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Direction)
{
    13d8:	df 93       	push	r29
    13da:	cf 93       	push	r28
    13dc:	cd b7       	in	r28, 0x3d	; 61
    13de:	de b7       	in	r29, 0x3e	; 62
    13e0:	28 97       	sbiw	r28, 0x08	; 8
    13e2:	0f b6       	in	r0, 0x3f	; 63
    13e4:	f8 94       	cli
    13e6:	de bf       	out	0x3e, r29	; 62
    13e8:	0f be       	out	0x3f, r0	; 63
    13ea:	cd bf       	out	0x3d, r28	; 61
    13ec:	8a 83       	std	Y+2, r24	; 0x02
    13ee:	6b 83       	std	Y+3, r22	; 0x03
    13f0:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    13f2:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_u8Pin<=DIO_u8PIN7)
    13f4:	8b 81       	ldd	r24, Y+3	; 0x03
    13f6:	88 30       	cpi	r24, 0x08	; 8
    13f8:	08 f0       	brcs	.+2      	; 0x13fc <DIO_u8SetPinDirection+0x24>
    13fa:	f4 c0       	rjmp	.+488    	; 0x15e4 <DIO_u8SetPinDirection+0x20c>
	{
		if (Copy_u8Direction==DIO_u8PIN_INPUT)
    13fc:	8c 81       	ldd	r24, Y+4	; 0x04
    13fe:	88 23       	and	r24, r24
    1400:	09 f0       	breq	.+2      	; 0x1404 <DIO_u8SetPinDirection+0x2c>
    1402:	77 c0       	rjmp	.+238    	; 0x14f2 <DIO_u8SetPinDirection+0x11a>
		{
			switch(Copy_u8Port)
    1404:	8a 81       	ldd	r24, Y+2	; 0x02
    1406:	28 2f       	mov	r18, r24
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	38 87       	std	Y+8, r19	; 0x08
    140c:	2f 83       	std	Y+7, r18	; 0x07
    140e:	8f 81       	ldd	r24, Y+7	; 0x07
    1410:	98 85       	ldd	r25, Y+8	; 0x08
    1412:	81 30       	cpi	r24, 0x01	; 1
    1414:	91 05       	cpc	r25, r1
    1416:	59 f1       	breq	.+86     	; 0x146e <DIO_u8SetPinDirection+0x96>
    1418:	2f 81       	ldd	r18, Y+7	; 0x07
    141a:	38 85       	ldd	r19, Y+8	; 0x08
    141c:	22 30       	cpi	r18, 0x02	; 2
    141e:	31 05       	cpc	r19, r1
    1420:	2c f4       	brge	.+10     	; 0x142c <DIO_u8SetPinDirection+0x54>
    1422:	8f 81       	ldd	r24, Y+7	; 0x07
    1424:	98 85       	ldd	r25, Y+8	; 0x08
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	69 f0       	breq	.+26     	; 0x1444 <DIO_u8SetPinDirection+0x6c>
    142a:	60 c0       	rjmp	.+192    	; 0x14ec <DIO_u8SetPinDirection+0x114>
    142c:	2f 81       	ldd	r18, Y+7	; 0x07
    142e:	38 85       	ldd	r19, Y+8	; 0x08
    1430:	22 30       	cpi	r18, 0x02	; 2
    1432:	31 05       	cpc	r19, r1
    1434:	89 f1       	breq	.+98     	; 0x1498 <DIO_u8SetPinDirection+0xc0>
    1436:	8f 81       	ldd	r24, Y+7	; 0x07
    1438:	98 85       	ldd	r25, Y+8	; 0x08
    143a:	83 30       	cpi	r24, 0x03	; 3
    143c:	91 05       	cpc	r25, r1
    143e:	09 f4       	brne	.+2      	; 0x1442 <DIO_u8SetPinDirection+0x6a>
    1440:	40 c0       	rjmp	.+128    	; 0x14c2 <DIO_u8SetPinDirection+0xea>
    1442:	54 c0       	rjmp	.+168    	; 0x14ec <DIO_u8SetPinDirection+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(DDRA,Copy_u8Pin); break;
    1444:	aa e3       	ldi	r26, 0x3A	; 58
    1446:	b0 e0       	ldi	r27, 0x00	; 0
    1448:	ea e3       	ldi	r30, 0x3A	; 58
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	80 81       	ld	r24, Z
    144e:	48 2f       	mov	r20, r24
    1450:	8b 81       	ldd	r24, Y+3	; 0x03
    1452:	28 2f       	mov	r18, r24
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	81 e0       	ldi	r24, 0x01	; 1
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	02 2e       	mov	r0, r18
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <DIO_u8SetPinDirection+0x8a>
    145e:	88 0f       	add	r24, r24
    1460:	99 1f       	adc	r25, r25
    1462:	0a 94       	dec	r0
    1464:	e2 f7       	brpl	.-8      	; 0x145e <DIO_u8SetPinDirection+0x86>
    1466:	80 95       	com	r24
    1468:	84 23       	and	r24, r20
    146a:	8c 93       	st	X, r24
    146c:	bd c0       	rjmp	.+378    	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTB: CLR_BIT(DDRB,Copy_u8Pin); break;
    146e:	a7 e3       	ldi	r26, 0x37	; 55
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	e7 e3       	ldi	r30, 0x37	; 55
    1474:	f0 e0       	ldi	r31, 0x00	; 0
    1476:	80 81       	ld	r24, Z
    1478:	48 2f       	mov	r20, r24
    147a:	8b 81       	ldd	r24, Y+3	; 0x03
    147c:	28 2f       	mov	r18, r24
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	02 2e       	mov	r0, r18
    1486:	02 c0       	rjmp	.+4      	; 0x148c <DIO_u8SetPinDirection+0xb4>
    1488:	88 0f       	add	r24, r24
    148a:	99 1f       	adc	r25, r25
    148c:	0a 94       	dec	r0
    148e:	e2 f7       	brpl	.-8      	; 0x1488 <DIO_u8SetPinDirection+0xb0>
    1490:	80 95       	com	r24
    1492:	84 23       	and	r24, r20
    1494:	8c 93       	st	X, r24
    1496:	a8 c0       	rjmp	.+336    	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTC: CLR_BIT(DDRC,Copy_u8Pin); break;
    1498:	a4 e3       	ldi	r26, 0x34	; 52
    149a:	b0 e0       	ldi	r27, 0x00	; 0
    149c:	e4 e3       	ldi	r30, 0x34	; 52
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	80 81       	ld	r24, Z
    14a2:	48 2f       	mov	r20, r24
    14a4:	8b 81       	ldd	r24, Y+3	; 0x03
    14a6:	28 2f       	mov	r18, r24
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	02 2e       	mov	r0, r18
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <DIO_u8SetPinDirection+0xde>
    14b2:	88 0f       	add	r24, r24
    14b4:	99 1f       	adc	r25, r25
    14b6:	0a 94       	dec	r0
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <DIO_u8SetPinDirection+0xda>
    14ba:	80 95       	com	r24
    14bc:	84 23       	and	r24, r20
    14be:	8c 93       	st	X, r24
    14c0:	93 c0       	rjmp	.+294    	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTD: CLR_BIT(DDRD,Copy_u8Pin); break;
    14c2:	a1 e3       	ldi	r26, 0x31	; 49
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	e1 e3       	ldi	r30, 0x31	; 49
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	48 2f       	mov	r20, r24
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	28 2f       	mov	r18, r24
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	02 2e       	mov	r0, r18
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <DIO_u8SetPinDirection+0x108>
    14dc:	88 0f       	add	r24, r24
    14de:	99 1f       	adc	r25, r25
    14e0:	0a 94       	dec	r0
    14e2:	e2 f7       	brpl	.-8      	; 0x14dc <DIO_u8SetPinDirection+0x104>
    14e4:	80 95       	com	r24
    14e6:	84 23       	and	r24, r20
    14e8:	8c 93       	st	X, r24
    14ea:	7e c0       	rjmp	.+252    	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			default: Local_u8ErrorState=1;
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	89 83       	std	Y+1, r24	; 0x01
    14f0:	7b c0       	rjmp	.+246    	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			}
		}
		else if (Copy_u8Direction==DIO_u8PIN_OUTPUT)
    14f2:	8c 81       	ldd	r24, Y+4	; 0x04
    14f4:	81 30       	cpi	r24, 0x01	; 1
    14f6:	09 f0       	breq	.+2      	; 0x14fa <DIO_u8SetPinDirection+0x122>
    14f8:	72 c0       	rjmp	.+228    	; 0x15de <DIO_u8SetPinDirection+0x206>
		{
			switch(Copy_u8Port)
    14fa:	8a 81       	ldd	r24, Y+2	; 0x02
    14fc:	28 2f       	mov	r18, r24
    14fe:	30 e0       	ldi	r19, 0x00	; 0
    1500:	3e 83       	std	Y+6, r19	; 0x06
    1502:	2d 83       	std	Y+5, r18	; 0x05
    1504:	8d 81       	ldd	r24, Y+5	; 0x05
    1506:	9e 81       	ldd	r25, Y+6	; 0x06
    1508:	81 30       	cpi	r24, 0x01	; 1
    150a:	91 05       	cpc	r25, r1
    150c:	49 f1       	breq	.+82     	; 0x1560 <DIO_u8SetPinDirection+0x188>
    150e:	2d 81       	ldd	r18, Y+5	; 0x05
    1510:	3e 81       	ldd	r19, Y+6	; 0x06
    1512:	22 30       	cpi	r18, 0x02	; 2
    1514:	31 05       	cpc	r19, r1
    1516:	2c f4       	brge	.+10     	; 0x1522 <DIO_u8SetPinDirection+0x14a>
    1518:	8d 81       	ldd	r24, Y+5	; 0x05
    151a:	9e 81       	ldd	r25, Y+6	; 0x06
    151c:	00 97       	sbiw	r24, 0x00	; 0
    151e:	61 f0       	breq	.+24     	; 0x1538 <DIO_u8SetPinDirection+0x160>
    1520:	5b c0       	rjmp	.+182    	; 0x15d8 <DIO_u8SetPinDirection+0x200>
    1522:	2d 81       	ldd	r18, Y+5	; 0x05
    1524:	3e 81       	ldd	r19, Y+6	; 0x06
    1526:	22 30       	cpi	r18, 0x02	; 2
    1528:	31 05       	cpc	r19, r1
    152a:	71 f1       	breq	.+92     	; 0x1588 <DIO_u8SetPinDirection+0x1b0>
    152c:	8d 81       	ldd	r24, Y+5	; 0x05
    152e:	9e 81       	ldd	r25, Y+6	; 0x06
    1530:	83 30       	cpi	r24, 0x03	; 3
    1532:	91 05       	cpc	r25, r1
    1534:	e9 f1       	breq	.+122    	; 0x15b0 <DIO_u8SetPinDirection+0x1d8>
    1536:	50 c0       	rjmp	.+160    	; 0x15d8 <DIO_u8SetPinDirection+0x200>
			{
			case DIO_u8PORTA : SET_BIT(DDRA,Copy_u8Pin); break;
    1538:	aa e3       	ldi	r26, 0x3A	; 58
    153a:	b0 e0       	ldi	r27, 0x00	; 0
    153c:	ea e3       	ldi	r30, 0x3A	; 58
    153e:	f0 e0       	ldi	r31, 0x00	; 0
    1540:	80 81       	ld	r24, Z
    1542:	48 2f       	mov	r20, r24
    1544:	8b 81       	ldd	r24, Y+3	; 0x03
    1546:	28 2f       	mov	r18, r24
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	81 e0       	ldi	r24, 0x01	; 1
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	02 2e       	mov	r0, r18
    1550:	02 c0       	rjmp	.+4      	; 0x1556 <DIO_u8SetPinDirection+0x17e>
    1552:	88 0f       	add	r24, r24
    1554:	99 1f       	adc	r25, r25
    1556:	0a 94       	dec	r0
    1558:	e2 f7       	brpl	.-8      	; 0x1552 <DIO_u8SetPinDirection+0x17a>
    155a:	84 2b       	or	r24, r20
    155c:	8c 93       	st	X, r24
    155e:	44 c0       	rjmp	.+136    	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTB : SET_BIT(DDRB,Copy_u8Pin); break;
    1560:	a7 e3       	ldi	r26, 0x37	; 55
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e7 e3       	ldi	r30, 0x37	; 55
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	80 81       	ld	r24, Z
    156a:	48 2f       	mov	r20, r24
    156c:	8b 81       	ldd	r24, Y+3	; 0x03
    156e:	28 2f       	mov	r18, r24
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	81 e0       	ldi	r24, 0x01	; 1
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	02 2e       	mov	r0, r18
    1578:	02 c0       	rjmp	.+4      	; 0x157e <DIO_u8SetPinDirection+0x1a6>
    157a:	88 0f       	add	r24, r24
    157c:	99 1f       	adc	r25, r25
    157e:	0a 94       	dec	r0
    1580:	e2 f7       	brpl	.-8      	; 0x157a <DIO_u8SetPinDirection+0x1a2>
    1582:	84 2b       	or	r24, r20
    1584:	8c 93       	st	X, r24
    1586:	30 c0       	rjmp	.+96     	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTC : SET_BIT(DDRC,Copy_u8Pin); break;
    1588:	a4 e3       	ldi	r26, 0x34	; 52
    158a:	b0 e0       	ldi	r27, 0x00	; 0
    158c:	e4 e3       	ldi	r30, 0x34	; 52
    158e:	f0 e0       	ldi	r31, 0x00	; 0
    1590:	80 81       	ld	r24, Z
    1592:	48 2f       	mov	r20, r24
    1594:	8b 81       	ldd	r24, Y+3	; 0x03
    1596:	28 2f       	mov	r18, r24
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	02 2e       	mov	r0, r18
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <DIO_u8SetPinDirection+0x1ce>
    15a2:	88 0f       	add	r24, r24
    15a4:	99 1f       	adc	r25, r25
    15a6:	0a 94       	dec	r0
    15a8:	e2 f7       	brpl	.-8      	; 0x15a2 <DIO_u8SetPinDirection+0x1ca>
    15aa:	84 2b       	or	r24, r20
    15ac:	8c 93       	st	X, r24
    15ae:	1c c0       	rjmp	.+56     	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTD : SET_BIT(DDRD,Copy_u8Pin); break;
    15b0:	a1 e3       	ldi	r26, 0x31	; 49
    15b2:	b0 e0       	ldi	r27, 0x00	; 0
    15b4:	e1 e3       	ldi	r30, 0x31	; 49
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	80 81       	ld	r24, Z
    15ba:	48 2f       	mov	r20, r24
    15bc:	8b 81       	ldd	r24, Y+3	; 0x03
    15be:	28 2f       	mov	r18, r24
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	02 2e       	mov	r0, r18
    15c8:	02 c0       	rjmp	.+4      	; 0x15ce <DIO_u8SetPinDirection+0x1f6>
    15ca:	88 0f       	add	r24, r24
    15cc:	99 1f       	adc	r25, r25
    15ce:	0a 94       	dec	r0
    15d0:	e2 f7       	brpl	.-8      	; 0x15ca <DIO_u8SetPinDirection+0x1f2>
    15d2:	84 2b       	or	r24, r20
    15d4:	8c 93       	st	X, r24
    15d6:	08 c0       	rjmp	.+16     	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			default: Local_u8ErrorState=1;
    15d8:	81 e0       	ldi	r24, 0x01	; 1
    15da:	89 83       	std	Y+1, r24	; 0x01
    15dc:	05 c0       	rjmp	.+10     	; 0x15e8 <DIO_u8SetPinDirection+0x210>
			}
		}
		else
		{
			Local_u8ErrorState=1;
    15de:	81 e0       	ldi	r24, 0x01	; 1
    15e0:	89 83       	std	Y+1, r24	; 0x01
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <DIO_u8SetPinDirection+0x210>
		}
	}
	else
	{
		Local_u8ErrorState=1;
    15e4:	81 e0       	ldi	r24, 0x01	; 1
    15e6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    15e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    15ea:	28 96       	adiw	r28, 0x08	; 8
    15ec:	0f b6       	in	r0, 0x3f	; 63
    15ee:	f8 94       	cli
    15f0:	de bf       	out	0x3e, r29	; 62
    15f2:	0f be       	out	0x3f, r0	; 63
    15f4:	cd bf       	out	0x3d, r28	; 61
    15f6:	cf 91       	pop	r28
    15f8:	df 91       	pop	r29
    15fa:	08 95       	ret

000015fc <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection(u8 Copy_u8Port , u8 Copy_u8Direction)
{
    15fc:	df 93       	push	r29
    15fe:	cf 93       	push	r28
    1600:	00 d0       	rcall	.+0      	; 0x1602 <DIO_u8SetPortDirection+0x6>
    1602:	00 d0       	rcall	.+0      	; 0x1604 <DIO_u8SetPortDirection+0x8>
    1604:	0f 92       	push	r0
    1606:	cd b7       	in	r28, 0x3d	; 61
    1608:	de b7       	in	r29, 0x3e	; 62
    160a:	8a 83       	std	Y+2, r24	; 0x02
    160c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
    160e:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    1610:	8a 81       	ldd	r24, Y+2	; 0x02
    1612:	28 2f       	mov	r18, r24
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	3d 83       	std	Y+5, r19	; 0x05
    1618:	2c 83       	std	Y+4, r18	; 0x04
    161a:	8c 81       	ldd	r24, Y+4	; 0x04
    161c:	9d 81       	ldd	r25, Y+5	; 0x05
    161e:	81 30       	cpi	r24, 0x01	; 1
    1620:	91 05       	cpc	r25, r1
    1622:	d1 f0       	breq	.+52     	; 0x1658 <DIO_u8SetPortDirection+0x5c>
    1624:	2c 81       	ldd	r18, Y+4	; 0x04
    1626:	3d 81       	ldd	r19, Y+5	; 0x05
    1628:	22 30       	cpi	r18, 0x02	; 2
    162a:	31 05       	cpc	r19, r1
    162c:	2c f4       	brge	.+10     	; 0x1638 <DIO_u8SetPortDirection+0x3c>
    162e:	8c 81       	ldd	r24, Y+4	; 0x04
    1630:	9d 81       	ldd	r25, Y+5	; 0x05
    1632:	00 97       	sbiw	r24, 0x00	; 0
    1634:	61 f0       	breq	.+24     	; 0x164e <DIO_u8SetPortDirection+0x52>
    1636:	1f c0       	rjmp	.+62     	; 0x1676 <DIO_u8SetPortDirection+0x7a>
    1638:	2c 81       	ldd	r18, Y+4	; 0x04
    163a:	3d 81       	ldd	r19, Y+5	; 0x05
    163c:	22 30       	cpi	r18, 0x02	; 2
    163e:	31 05       	cpc	r19, r1
    1640:	81 f0       	breq	.+32     	; 0x1662 <DIO_u8SetPortDirection+0x66>
    1642:	8c 81       	ldd	r24, Y+4	; 0x04
    1644:	9d 81       	ldd	r25, Y+5	; 0x05
    1646:	83 30       	cpi	r24, 0x03	; 3
    1648:	91 05       	cpc	r25, r1
    164a:	81 f0       	breq	.+32     	; 0x166c <DIO_u8SetPortDirection+0x70>
    164c:	14 c0       	rjmp	.+40     	; 0x1676 <DIO_u8SetPortDirection+0x7a>
	{
	case DIO_u8PORTA: DDRA=Copy_u8Direction; break;
    164e:	ea e3       	ldi	r30, 0x3A	; 58
    1650:	f0 e0       	ldi	r31, 0x00	; 0
    1652:	8b 81       	ldd	r24, Y+3	; 0x03
    1654:	80 83       	st	Z, r24
    1656:	11 c0       	rjmp	.+34     	; 0x167a <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTB: DDRB=Copy_u8Direction; break;
    1658:	e7 e3       	ldi	r30, 0x37	; 55
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	8b 81       	ldd	r24, Y+3	; 0x03
    165e:	80 83       	st	Z, r24
    1660:	0c c0       	rjmp	.+24     	; 0x167a <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTC: DDRC=Copy_u8Direction; break;
    1662:	e4 e3       	ldi	r30, 0x34	; 52
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	80 83       	st	Z, r24
    166a:	07 c0       	rjmp	.+14     	; 0x167a <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTD: DDRD=Copy_u8Direction; break;
    166c:	e1 e3       	ldi	r30, 0x31	; 49
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	8b 81       	ldd	r24, Y+3	; 0x03
    1672:	80 83       	st	Z, r24
    1674:	02 c0       	rjmp	.+4      	; 0x167a <DIO_u8SetPortDirection+0x7e>
	default : Local_u8ErrorState=1;
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    167a:	89 81       	ldd	r24, Y+1	; 0x01
}
    167c:	0f 90       	pop	r0
    167e:	0f 90       	pop	r0
    1680:	0f 90       	pop	r0
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	cf 91       	pop	r28
    1688:	df 91       	pop	r29
    168a:	08 95       	ret

0000168c <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)
{
    168c:	df 93       	push	r29
    168e:	cf 93       	push	r28
    1690:	cd b7       	in	r28, 0x3d	; 61
    1692:	de b7       	in	r29, 0x3e	; 62
    1694:	28 97       	sbiw	r28, 0x08	; 8
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	f8 94       	cli
    169a:	de bf       	out	0x3e, r29	; 62
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	cd bf       	out	0x3d, r28	; 61
    16a0:	8a 83       	std	Y+2, r24	; 0x02
    16a2:	6b 83       	std	Y+3, r22	; 0x03
    16a4:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    16a6:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_u8Pin<=DIO_u8PIN7)
    16a8:	8b 81       	ldd	r24, Y+3	; 0x03
    16aa:	88 30       	cpi	r24, 0x08	; 8
    16ac:	08 f0       	brcs	.+2      	; 0x16b0 <DIO_u8SetPinValue+0x24>
    16ae:	f4 c0       	rjmp	.+488    	; 0x1898 <DIO_u8SetPinValue+0x20c>
	{
		if (Copy_u8Value==DIO_u8PIN_LOW)
    16b0:	8c 81       	ldd	r24, Y+4	; 0x04
    16b2:	88 23       	and	r24, r24
    16b4:	09 f0       	breq	.+2      	; 0x16b8 <DIO_u8SetPinValue+0x2c>
    16b6:	77 c0       	rjmp	.+238    	; 0x17a6 <DIO_u8SetPinValue+0x11a>
		{
			switch(Copy_u8Port)
    16b8:	8a 81       	ldd	r24, Y+2	; 0x02
    16ba:	28 2f       	mov	r18, r24
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	38 87       	std	Y+8, r19	; 0x08
    16c0:	2f 83       	std	Y+7, r18	; 0x07
    16c2:	8f 81       	ldd	r24, Y+7	; 0x07
    16c4:	98 85       	ldd	r25, Y+8	; 0x08
    16c6:	81 30       	cpi	r24, 0x01	; 1
    16c8:	91 05       	cpc	r25, r1
    16ca:	59 f1       	breq	.+86     	; 0x1722 <DIO_u8SetPinValue+0x96>
    16cc:	2f 81       	ldd	r18, Y+7	; 0x07
    16ce:	38 85       	ldd	r19, Y+8	; 0x08
    16d0:	22 30       	cpi	r18, 0x02	; 2
    16d2:	31 05       	cpc	r19, r1
    16d4:	2c f4       	brge	.+10     	; 0x16e0 <DIO_u8SetPinValue+0x54>
    16d6:	8f 81       	ldd	r24, Y+7	; 0x07
    16d8:	98 85       	ldd	r25, Y+8	; 0x08
    16da:	00 97       	sbiw	r24, 0x00	; 0
    16dc:	69 f0       	breq	.+26     	; 0x16f8 <DIO_u8SetPinValue+0x6c>
    16de:	60 c0       	rjmp	.+192    	; 0x17a0 <DIO_u8SetPinValue+0x114>
    16e0:	2f 81       	ldd	r18, Y+7	; 0x07
    16e2:	38 85       	ldd	r19, Y+8	; 0x08
    16e4:	22 30       	cpi	r18, 0x02	; 2
    16e6:	31 05       	cpc	r19, r1
    16e8:	89 f1       	breq	.+98     	; 0x174c <DIO_u8SetPinValue+0xc0>
    16ea:	8f 81       	ldd	r24, Y+7	; 0x07
    16ec:	98 85       	ldd	r25, Y+8	; 0x08
    16ee:	83 30       	cpi	r24, 0x03	; 3
    16f0:	91 05       	cpc	r25, r1
    16f2:	09 f4       	brne	.+2      	; 0x16f6 <DIO_u8SetPinValue+0x6a>
    16f4:	40 c0       	rjmp	.+128    	; 0x1776 <DIO_u8SetPinValue+0xea>
    16f6:	54 c0       	rjmp	.+168    	; 0x17a0 <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA : CLR_BIT(PORTA,Copy_u8Pin); break;
    16f8:	ab e3       	ldi	r26, 0x3B	; 59
    16fa:	b0 e0       	ldi	r27, 0x00	; 0
    16fc:	eb e3       	ldi	r30, 0x3B	; 59
    16fe:	f0 e0       	ldi	r31, 0x00	; 0
    1700:	80 81       	ld	r24, Z
    1702:	48 2f       	mov	r20, r24
    1704:	8b 81       	ldd	r24, Y+3	; 0x03
    1706:	28 2f       	mov	r18, r24
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	02 2e       	mov	r0, r18
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <DIO_u8SetPinValue+0x8a>
    1712:	88 0f       	add	r24, r24
    1714:	99 1f       	adc	r25, r25
    1716:	0a 94       	dec	r0
    1718:	e2 f7       	brpl	.-8      	; 0x1712 <DIO_u8SetPinValue+0x86>
    171a:	80 95       	com	r24
    171c:	84 23       	and	r24, r20
    171e:	8c 93       	st	X, r24
    1720:	bd c0       	rjmp	.+378    	; 0x189c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : CLR_BIT(PORTB,Copy_u8Pin); break;
    1722:	a8 e3       	ldi	r26, 0x38	; 56
    1724:	b0 e0       	ldi	r27, 0x00	; 0
    1726:	e8 e3       	ldi	r30, 0x38	; 56
    1728:	f0 e0       	ldi	r31, 0x00	; 0
    172a:	80 81       	ld	r24, Z
    172c:	48 2f       	mov	r20, r24
    172e:	8b 81       	ldd	r24, Y+3	; 0x03
    1730:	28 2f       	mov	r18, r24
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	81 e0       	ldi	r24, 0x01	; 1
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	02 2e       	mov	r0, r18
    173a:	02 c0       	rjmp	.+4      	; 0x1740 <DIO_u8SetPinValue+0xb4>
    173c:	88 0f       	add	r24, r24
    173e:	99 1f       	adc	r25, r25
    1740:	0a 94       	dec	r0
    1742:	e2 f7       	brpl	.-8      	; 0x173c <DIO_u8SetPinValue+0xb0>
    1744:	80 95       	com	r24
    1746:	84 23       	and	r24, r20
    1748:	8c 93       	st	X, r24
    174a:	a8 c0       	rjmp	.+336    	; 0x189c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : CLR_BIT(PORTC,Copy_u8Pin); break;
    174c:	a5 e3       	ldi	r26, 0x35	; 53
    174e:	b0 e0       	ldi	r27, 0x00	; 0
    1750:	e5 e3       	ldi	r30, 0x35	; 53
    1752:	f0 e0       	ldi	r31, 0x00	; 0
    1754:	80 81       	ld	r24, Z
    1756:	48 2f       	mov	r20, r24
    1758:	8b 81       	ldd	r24, Y+3	; 0x03
    175a:	28 2f       	mov	r18, r24
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	81 e0       	ldi	r24, 0x01	; 1
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	02 2e       	mov	r0, r18
    1764:	02 c0       	rjmp	.+4      	; 0x176a <DIO_u8SetPinValue+0xde>
    1766:	88 0f       	add	r24, r24
    1768:	99 1f       	adc	r25, r25
    176a:	0a 94       	dec	r0
    176c:	e2 f7       	brpl	.-8      	; 0x1766 <DIO_u8SetPinValue+0xda>
    176e:	80 95       	com	r24
    1770:	84 23       	and	r24, r20
    1772:	8c 93       	st	X, r24
    1774:	93 c0       	rjmp	.+294    	; 0x189c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : CLR_BIT(PORTD,Copy_u8Pin); break;
    1776:	a2 e3       	ldi	r26, 0x32	; 50
    1778:	b0 e0       	ldi	r27, 0x00	; 0
    177a:	e2 e3       	ldi	r30, 0x32	; 50
    177c:	f0 e0       	ldi	r31, 0x00	; 0
    177e:	80 81       	ld	r24, Z
    1780:	48 2f       	mov	r20, r24
    1782:	8b 81       	ldd	r24, Y+3	; 0x03
    1784:	28 2f       	mov	r18, r24
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	02 2e       	mov	r0, r18
    178e:	02 c0       	rjmp	.+4      	; 0x1794 <DIO_u8SetPinValue+0x108>
    1790:	88 0f       	add	r24, r24
    1792:	99 1f       	adc	r25, r25
    1794:	0a 94       	dec	r0
    1796:	e2 f7       	brpl	.-8      	; 0x1790 <DIO_u8SetPinValue+0x104>
    1798:	80 95       	com	r24
    179a:	84 23       	and	r24, r20
    179c:	8c 93       	st	X, r24
    179e:	7e c0       	rjmp	.+252    	; 0x189c <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1;
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	89 83       	std	Y+1, r24	; 0x01
    17a4:	7b c0       	rjmp	.+246    	; 0x189c <DIO_u8SetPinValue+0x210>
			}
		}
		else if (Copy_u8Value==DIO_u8PIN_HIGH)
    17a6:	8c 81       	ldd	r24, Y+4	; 0x04
    17a8:	81 30       	cpi	r24, 0x01	; 1
    17aa:	09 f0       	breq	.+2      	; 0x17ae <DIO_u8SetPinValue+0x122>
    17ac:	72 c0       	rjmp	.+228    	; 0x1892 <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
    17ae:	8a 81       	ldd	r24, Y+2	; 0x02
    17b0:	28 2f       	mov	r18, r24
    17b2:	30 e0       	ldi	r19, 0x00	; 0
    17b4:	3e 83       	std	Y+6, r19	; 0x06
    17b6:	2d 83       	std	Y+5, r18	; 0x05
    17b8:	8d 81       	ldd	r24, Y+5	; 0x05
    17ba:	9e 81       	ldd	r25, Y+6	; 0x06
    17bc:	81 30       	cpi	r24, 0x01	; 1
    17be:	91 05       	cpc	r25, r1
    17c0:	49 f1       	breq	.+82     	; 0x1814 <DIO_u8SetPinValue+0x188>
    17c2:	2d 81       	ldd	r18, Y+5	; 0x05
    17c4:	3e 81       	ldd	r19, Y+6	; 0x06
    17c6:	22 30       	cpi	r18, 0x02	; 2
    17c8:	31 05       	cpc	r19, r1
    17ca:	2c f4       	brge	.+10     	; 0x17d6 <DIO_u8SetPinValue+0x14a>
    17cc:	8d 81       	ldd	r24, Y+5	; 0x05
    17ce:	9e 81       	ldd	r25, Y+6	; 0x06
    17d0:	00 97       	sbiw	r24, 0x00	; 0
    17d2:	61 f0       	breq	.+24     	; 0x17ec <DIO_u8SetPinValue+0x160>
    17d4:	5b c0       	rjmp	.+182    	; 0x188c <DIO_u8SetPinValue+0x200>
    17d6:	2d 81       	ldd	r18, Y+5	; 0x05
    17d8:	3e 81       	ldd	r19, Y+6	; 0x06
    17da:	22 30       	cpi	r18, 0x02	; 2
    17dc:	31 05       	cpc	r19, r1
    17de:	71 f1       	breq	.+92     	; 0x183c <DIO_u8SetPinValue+0x1b0>
    17e0:	8d 81       	ldd	r24, Y+5	; 0x05
    17e2:	9e 81       	ldd	r25, Y+6	; 0x06
    17e4:	83 30       	cpi	r24, 0x03	; 3
    17e6:	91 05       	cpc	r25, r1
    17e8:	e9 f1       	breq	.+122    	; 0x1864 <DIO_u8SetPinValue+0x1d8>
    17ea:	50 c0       	rjmp	.+160    	; 0x188c <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA : SET_BIT(PORTA,Copy_u8Pin); break;
    17ec:	ab e3       	ldi	r26, 0x3B	; 59
    17ee:	b0 e0       	ldi	r27, 0x00	; 0
    17f0:	eb e3       	ldi	r30, 0x3B	; 59
    17f2:	f0 e0       	ldi	r31, 0x00	; 0
    17f4:	80 81       	ld	r24, Z
    17f6:	48 2f       	mov	r20, r24
    17f8:	8b 81       	ldd	r24, Y+3	; 0x03
    17fa:	28 2f       	mov	r18, r24
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	02 2e       	mov	r0, r18
    1804:	02 c0       	rjmp	.+4      	; 0x180a <DIO_u8SetPinValue+0x17e>
    1806:	88 0f       	add	r24, r24
    1808:	99 1f       	adc	r25, r25
    180a:	0a 94       	dec	r0
    180c:	e2 f7       	brpl	.-8      	; 0x1806 <DIO_u8SetPinValue+0x17a>
    180e:	84 2b       	or	r24, r20
    1810:	8c 93       	st	X, r24
    1812:	44 c0       	rjmp	.+136    	; 0x189c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : SET_BIT(PORTB,Copy_u8Pin); break;
    1814:	a8 e3       	ldi	r26, 0x38	; 56
    1816:	b0 e0       	ldi	r27, 0x00	; 0
    1818:	e8 e3       	ldi	r30, 0x38	; 56
    181a:	f0 e0       	ldi	r31, 0x00	; 0
    181c:	80 81       	ld	r24, Z
    181e:	48 2f       	mov	r20, r24
    1820:	8b 81       	ldd	r24, Y+3	; 0x03
    1822:	28 2f       	mov	r18, r24
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	81 e0       	ldi	r24, 0x01	; 1
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	02 2e       	mov	r0, r18
    182c:	02 c0       	rjmp	.+4      	; 0x1832 <DIO_u8SetPinValue+0x1a6>
    182e:	88 0f       	add	r24, r24
    1830:	99 1f       	adc	r25, r25
    1832:	0a 94       	dec	r0
    1834:	e2 f7       	brpl	.-8      	; 0x182e <DIO_u8SetPinValue+0x1a2>
    1836:	84 2b       	or	r24, r20
    1838:	8c 93       	st	X, r24
    183a:	30 c0       	rjmp	.+96     	; 0x189c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : SET_BIT(PORTC,Copy_u8Pin); break;
    183c:	a5 e3       	ldi	r26, 0x35	; 53
    183e:	b0 e0       	ldi	r27, 0x00	; 0
    1840:	e5 e3       	ldi	r30, 0x35	; 53
    1842:	f0 e0       	ldi	r31, 0x00	; 0
    1844:	80 81       	ld	r24, Z
    1846:	48 2f       	mov	r20, r24
    1848:	8b 81       	ldd	r24, Y+3	; 0x03
    184a:	28 2f       	mov	r18, r24
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	81 e0       	ldi	r24, 0x01	; 1
    1850:	90 e0       	ldi	r25, 0x00	; 0
    1852:	02 2e       	mov	r0, r18
    1854:	02 c0       	rjmp	.+4      	; 0x185a <DIO_u8SetPinValue+0x1ce>
    1856:	88 0f       	add	r24, r24
    1858:	99 1f       	adc	r25, r25
    185a:	0a 94       	dec	r0
    185c:	e2 f7       	brpl	.-8      	; 0x1856 <DIO_u8SetPinValue+0x1ca>
    185e:	84 2b       	or	r24, r20
    1860:	8c 93       	st	X, r24
    1862:	1c c0       	rjmp	.+56     	; 0x189c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : SET_BIT(PORTD,Copy_u8Pin); break;
    1864:	a2 e3       	ldi	r26, 0x32	; 50
    1866:	b0 e0       	ldi	r27, 0x00	; 0
    1868:	e2 e3       	ldi	r30, 0x32	; 50
    186a:	f0 e0       	ldi	r31, 0x00	; 0
    186c:	80 81       	ld	r24, Z
    186e:	48 2f       	mov	r20, r24
    1870:	8b 81       	ldd	r24, Y+3	; 0x03
    1872:	28 2f       	mov	r18, r24
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	81 e0       	ldi	r24, 0x01	; 1
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	02 2e       	mov	r0, r18
    187c:	02 c0       	rjmp	.+4      	; 0x1882 <DIO_u8SetPinValue+0x1f6>
    187e:	88 0f       	add	r24, r24
    1880:	99 1f       	adc	r25, r25
    1882:	0a 94       	dec	r0
    1884:	e2 f7       	brpl	.-8      	; 0x187e <DIO_u8SetPinValue+0x1f2>
    1886:	84 2b       	or	r24, r20
    1888:	8c 93       	st	X, r24
    188a:	08 c0       	rjmp	.+16     	; 0x189c <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1;
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	89 83       	std	Y+1, r24	; 0x01
    1890:	05 c0       	rjmp	.+10     	; 0x189c <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8ErrorState=1;
    1892:	81 e0       	ldi	r24, 0x01	; 1
    1894:	89 83       	std	Y+1, r24	; 0x01
    1896:	02 c0       	rjmp	.+4      	; 0x189c <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8ErrorState=1;
    1898:	81 e0       	ldi	r24, 0x01	; 1
    189a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    189c:	89 81       	ldd	r24, Y+1	; 0x01
}
    189e:	28 96       	adiw	r28, 0x08	; 8
    18a0:	0f b6       	in	r0, 0x3f	; 63
    18a2:	f8 94       	cli
    18a4:	de bf       	out	0x3e, r29	; 62
    18a6:	0f be       	out	0x3f, r0	; 63
    18a8:	cd bf       	out	0x3d, r28	; 61
    18aa:	cf 91       	pop	r28
    18ac:	df 91       	pop	r29
    18ae:	08 95       	ret

000018b0 <DIO_u8SetPortValue>:
u8 DIO_u8SetPortValue(u8 Copy_u8Port , u8 Copy_u8Value)
{
    18b0:	df 93       	push	r29
    18b2:	cf 93       	push	r28
    18b4:	00 d0       	rcall	.+0      	; 0x18b6 <DIO_u8SetPortValue+0x6>
    18b6:	00 d0       	rcall	.+0      	; 0x18b8 <DIO_u8SetPortValue+0x8>
    18b8:	0f 92       	push	r0
    18ba:	cd b7       	in	r28, 0x3d	; 61
    18bc:	de b7       	in	r29, 0x3e	; 62
    18be:	8a 83       	std	Y+2, r24	; 0x02
    18c0:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
    18c2:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    18c4:	8a 81       	ldd	r24, Y+2	; 0x02
    18c6:	28 2f       	mov	r18, r24
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	3d 83       	std	Y+5, r19	; 0x05
    18cc:	2c 83       	std	Y+4, r18	; 0x04
    18ce:	8c 81       	ldd	r24, Y+4	; 0x04
    18d0:	9d 81       	ldd	r25, Y+5	; 0x05
    18d2:	81 30       	cpi	r24, 0x01	; 1
    18d4:	91 05       	cpc	r25, r1
    18d6:	d1 f0       	breq	.+52     	; 0x190c <DIO_u8SetPortValue+0x5c>
    18d8:	2c 81       	ldd	r18, Y+4	; 0x04
    18da:	3d 81       	ldd	r19, Y+5	; 0x05
    18dc:	22 30       	cpi	r18, 0x02	; 2
    18de:	31 05       	cpc	r19, r1
    18e0:	2c f4       	brge	.+10     	; 0x18ec <DIO_u8SetPortValue+0x3c>
    18e2:	8c 81       	ldd	r24, Y+4	; 0x04
    18e4:	9d 81       	ldd	r25, Y+5	; 0x05
    18e6:	00 97       	sbiw	r24, 0x00	; 0
    18e8:	61 f0       	breq	.+24     	; 0x1902 <DIO_u8SetPortValue+0x52>
    18ea:	1f c0       	rjmp	.+62     	; 0x192a <DIO_u8SetPortValue+0x7a>
    18ec:	2c 81       	ldd	r18, Y+4	; 0x04
    18ee:	3d 81       	ldd	r19, Y+5	; 0x05
    18f0:	22 30       	cpi	r18, 0x02	; 2
    18f2:	31 05       	cpc	r19, r1
    18f4:	81 f0       	breq	.+32     	; 0x1916 <DIO_u8SetPortValue+0x66>
    18f6:	8c 81       	ldd	r24, Y+4	; 0x04
    18f8:	9d 81       	ldd	r25, Y+5	; 0x05
    18fa:	83 30       	cpi	r24, 0x03	; 3
    18fc:	91 05       	cpc	r25, r1
    18fe:	81 f0       	breq	.+32     	; 0x1920 <DIO_u8SetPortValue+0x70>
    1900:	14 c0       	rjmp	.+40     	; 0x192a <DIO_u8SetPortValue+0x7a>
	{
	case DIO_u8PORTA: PORTA=Copy_u8Value; break;
    1902:	eb e3       	ldi	r30, 0x3B	; 59
    1904:	f0 e0       	ldi	r31, 0x00	; 0
    1906:	8b 81       	ldd	r24, Y+3	; 0x03
    1908:	80 83       	st	Z, r24
    190a:	11 c0       	rjmp	.+34     	; 0x192e <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTB: PORTB=Copy_u8Value; break;
    190c:	e8 e3       	ldi	r30, 0x38	; 56
    190e:	f0 e0       	ldi	r31, 0x00	; 0
    1910:	8b 81       	ldd	r24, Y+3	; 0x03
    1912:	80 83       	st	Z, r24
    1914:	0c c0       	rjmp	.+24     	; 0x192e <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTC: PORTC=Copy_u8Value; break;
    1916:	e5 e3       	ldi	r30, 0x35	; 53
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	8b 81       	ldd	r24, Y+3	; 0x03
    191c:	80 83       	st	Z, r24
    191e:	07 c0       	rjmp	.+14     	; 0x192e <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTD: PORTD=Copy_u8Value; break;
    1920:	e2 e3       	ldi	r30, 0x32	; 50
    1922:	f0 e0       	ldi	r31, 0x00	; 0
    1924:	8b 81       	ldd	r24, Y+3	; 0x03
    1926:	80 83       	st	Z, r24
    1928:	02 c0       	rjmp	.+4      	; 0x192e <DIO_u8SetPortValue+0x7e>
	default : Local_u8ErrorState=1;
    192a:	81 e0       	ldi	r24, 0x01	; 1
    192c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    192e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1930:	0f 90       	pop	r0
    1932:	0f 90       	pop	r0
    1934:	0f 90       	pop	r0
    1936:	0f 90       	pop	r0
    1938:	0f 90       	pop	r0
    193a:	cf 91       	pop	r28
    193c:	df 91       	pop	r29
    193e:	08 95       	ret

00001940 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8* Copy_pu8Value)
{
    1940:	df 93       	push	r29
    1942:	cf 93       	push	r28
    1944:	cd b7       	in	r28, 0x3d	; 61
    1946:	de b7       	in	r29, 0x3e	; 62
    1948:	27 97       	sbiw	r28, 0x07	; 7
    194a:	0f b6       	in	r0, 0x3f	; 63
    194c:	f8 94       	cli
    194e:	de bf       	out	0x3e, r29	; 62
    1950:	0f be       	out	0x3f, r0	; 63
    1952:	cd bf       	out	0x3d, r28	; 61
    1954:	8a 83       	std	Y+2, r24	; 0x02
    1956:	6b 83       	std	Y+3, r22	; 0x03
    1958:	5d 83       	std	Y+5, r21	; 0x05
    195a:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    195c:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_pu8Value!=NULL)&&(Copy_u8Pin<=DIO_u8PIN7))
    195e:	8c 81       	ldd	r24, Y+4	; 0x04
    1960:	9d 81       	ldd	r25, Y+5	; 0x05
    1962:	00 97       	sbiw	r24, 0x00	; 0
    1964:	09 f4       	brne	.+2      	; 0x1968 <DIO_u8GetPinValue+0x28>
    1966:	78 c0       	rjmp	.+240    	; 0x1a58 <DIO_u8GetPinValue+0x118>
    1968:	8b 81       	ldd	r24, Y+3	; 0x03
    196a:	88 30       	cpi	r24, 0x08	; 8
    196c:	08 f0       	brcs	.+2      	; 0x1970 <DIO_u8GetPinValue+0x30>
    196e:	74 c0       	rjmp	.+232    	; 0x1a58 <DIO_u8GetPinValue+0x118>
	{
		switch(Copy_u8Port)
    1970:	8a 81       	ldd	r24, Y+2	; 0x02
    1972:	28 2f       	mov	r18, r24
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	3f 83       	std	Y+7, r19	; 0x07
    1978:	2e 83       	std	Y+6, r18	; 0x06
    197a:	4e 81       	ldd	r20, Y+6	; 0x06
    197c:	5f 81       	ldd	r21, Y+7	; 0x07
    197e:	41 30       	cpi	r20, 0x01	; 1
    1980:	51 05       	cpc	r21, r1
    1982:	59 f1       	breq	.+86     	; 0x19da <DIO_u8GetPinValue+0x9a>
    1984:	8e 81       	ldd	r24, Y+6	; 0x06
    1986:	9f 81       	ldd	r25, Y+7	; 0x07
    1988:	82 30       	cpi	r24, 0x02	; 2
    198a:	91 05       	cpc	r25, r1
    198c:	34 f4       	brge	.+12     	; 0x199a <DIO_u8GetPinValue+0x5a>
    198e:	2e 81       	ldd	r18, Y+6	; 0x06
    1990:	3f 81       	ldd	r19, Y+7	; 0x07
    1992:	21 15       	cp	r18, r1
    1994:	31 05       	cpc	r19, r1
    1996:	69 f0       	breq	.+26     	; 0x19b2 <DIO_u8GetPinValue+0x72>
    1998:	5c c0       	rjmp	.+184    	; 0x1a52 <DIO_u8GetPinValue+0x112>
    199a:	4e 81       	ldd	r20, Y+6	; 0x06
    199c:	5f 81       	ldd	r21, Y+7	; 0x07
    199e:	42 30       	cpi	r20, 0x02	; 2
    19a0:	51 05       	cpc	r21, r1
    19a2:	79 f1       	breq	.+94     	; 0x1a02 <DIO_u8GetPinValue+0xc2>
    19a4:	8e 81       	ldd	r24, Y+6	; 0x06
    19a6:	9f 81       	ldd	r25, Y+7	; 0x07
    19a8:	83 30       	cpi	r24, 0x03	; 3
    19aa:	91 05       	cpc	r25, r1
    19ac:	09 f4       	brne	.+2      	; 0x19b0 <DIO_u8GetPinValue+0x70>
    19ae:	3d c0       	rjmp	.+122    	; 0x1a2a <DIO_u8GetPinValue+0xea>
    19b0:	50 c0       	rjmp	.+160    	; 0x1a52 <DIO_u8GetPinValue+0x112>
		{
		case DIO_u8PORTA: *Copy_pu8Value=GET_BIT(PINA,Copy_u8Pin); break;
    19b2:	e9 e3       	ldi	r30, 0x39	; 57
    19b4:	f0 e0       	ldi	r31, 0x00	; 0
    19b6:	80 81       	ld	r24, Z
    19b8:	28 2f       	mov	r18, r24
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	8b 81       	ldd	r24, Y+3	; 0x03
    19be:	88 2f       	mov	r24, r24
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	a9 01       	movw	r20, r18
    19c4:	02 c0       	rjmp	.+4      	; 0x19ca <DIO_u8GetPinValue+0x8a>
    19c6:	55 95       	asr	r21
    19c8:	47 95       	ror	r20
    19ca:	8a 95       	dec	r24
    19cc:	e2 f7       	brpl	.-8      	; 0x19c6 <DIO_u8GetPinValue+0x86>
    19ce:	ca 01       	movw	r24, r20
    19d0:	81 70       	andi	r24, 0x01	; 1
    19d2:	ec 81       	ldd	r30, Y+4	; 0x04
    19d4:	fd 81       	ldd	r31, Y+5	; 0x05
    19d6:	80 83       	st	Z, r24
    19d8:	41 c0       	rjmp	.+130    	; 0x1a5c <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTB: *Copy_pu8Value=GET_BIT(PINB,Copy_u8Pin); break;
    19da:	e6 e3       	ldi	r30, 0x36	; 54
    19dc:	f0 e0       	ldi	r31, 0x00	; 0
    19de:	80 81       	ld	r24, Z
    19e0:	28 2f       	mov	r18, r24
    19e2:	30 e0       	ldi	r19, 0x00	; 0
    19e4:	8b 81       	ldd	r24, Y+3	; 0x03
    19e6:	88 2f       	mov	r24, r24
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	a9 01       	movw	r20, r18
    19ec:	02 c0       	rjmp	.+4      	; 0x19f2 <DIO_u8GetPinValue+0xb2>
    19ee:	55 95       	asr	r21
    19f0:	47 95       	ror	r20
    19f2:	8a 95       	dec	r24
    19f4:	e2 f7       	brpl	.-8      	; 0x19ee <DIO_u8GetPinValue+0xae>
    19f6:	ca 01       	movw	r24, r20
    19f8:	81 70       	andi	r24, 0x01	; 1
    19fa:	ec 81       	ldd	r30, Y+4	; 0x04
    19fc:	fd 81       	ldd	r31, Y+5	; 0x05
    19fe:	80 83       	st	Z, r24
    1a00:	2d c0       	rjmp	.+90     	; 0x1a5c <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTC: *Copy_pu8Value=GET_BIT(PINC,Copy_u8Pin); break;
    1a02:	e3 e3       	ldi	r30, 0x33	; 51
    1a04:	f0 e0       	ldi	r31, 0x00	; 0
    1a06:	80 81       	ld	r24, Z
    1a08:	28 2f       	mov	r18, r24
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a0e:	88 2f       	mov	r24, r24
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	a9 01       	movw	r20, r18
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <DIO_u8GetPinValue+0xda>
    1a16:	55 95       	asr	r21
    1a18:	47 95       	ror	r20
    1a1a:	8a 95       	dec	r24
    1a1c:	e2 f7       	brpl	.-8      	; 0x1a16 <DIO_u8GetPinValue+0xd6>
    1a1e:	ca 01       	movw	r24, r20
    1a20:	81 70       	andi	r24, 0x01	; 1
    1a22:	ec 81       	ldd	r30, Y+4	; 0x04
    1a24:	fd 81       	ldd	r31, Y+5	; 0x05
    1a26:	80 83       	st	Z, r24
    1a28:	19 c0       	rjmp	.+50     	; 0x1a5c <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTD: *Copy_pu8Value=GET_BIT(PIND,Copy_u8Pin); break;
    1a2a:	e0 e3       	ldi	r30, 0x30	; 48
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	80 81       	ld	r24, Z
    1a30:	28 2f       	mov	r18, r24
    1a32:	30 e0       	ldi	r19, 0x00	; 0
    1a34:	8b 81       	ldd	r24, Y+3	; 0x03
    1a36:	88 2f       	mov	r24, r24
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	a9 01       	movw	r20, r18
    1a3c:	02 c0       	rjmp	.+4      	; 0x1a42 <DIO_u8GetPinValue+0x102>
    1a3e:	55 95       	asr	r21
    1a40:	47 95       	ror	r20
    1a42:	8a 95       	dec	r24
    1a44:	e2 f7       	brpl	.-8      	; 0x1a3e <DIO_u8GetPinValue+0xfe>
    1a46:	ca 01       	movw	r24, r20
    1a48:	81 70       	andi	r24, 0x01	; 1
    1a4a:	ec 81       	ldd	r30, Y+4	; 0x04
    1a4c:	fd 81       	ldd	r31, Y+5	; 0x05
    1a4e:	80 83       	st	Z, r24
    1a50:	05 c0       	rjmp	.+10     	; 0x1a5c <DIO_u8GetPinValue+0x11c>
		default : Local_u8ErrorState=1;
    1a52:	81 e0       	ldi	r24, 0x01	; 1
    1a54:	89 83       	std	Y+1, r24	; 0x01
    1a56:	02 c0       	rjmp	.+4      	; 0x1a5c <DIO_u8GetPinValue+0x11c>
		}
	}
	else Local_u8ErrorState=1;
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	89 83       	std	Y+1, r24	; 0x01

	return Local_u8ErrorState;
    1a5c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a5e:	27 96       	adiw	r28, 0x07	; 7
    1a60:	0f b6       	in	r0, 0x3f	; 63
    1a62:	f8 94       	cli
    1a64:	de bf       	out	0x3e, r29	; 62
    1a66:	0f be       	out	0x3f, r0	; 63
    1a68:	cd bf       	out	0x3d, r28	; 61
    1a6a:	cf 91       	pop	r28
    1a6c:	df 91       	pop	r29
    1a6e:	08 95       	ret

00001a70 <main>:

#include"DIO_interface.h"
#include"CLCD_interface.h"
#include<util/delay.h>
void main (void)
{
    1a70:	0f 93       	push	r16
    1a72:	1f 93       	push	r17
    1a74:	df 93       	push	r29
    1a76:	cf 93       	push	r28
    1a78:	cd b7       	in	r28, 0x3d	; 61
    1a7a:	de b7       	in	r29, 0x3e	; 62
    1a7c:	c5 57       	subi	r28, 0x75	; 117
    1a7e:	d3 40       	sbci	r29, 0x03	; 3
    1a80:	0f b6       	in	r0, 0x3f	; 63
    1a82:	f8 94       	cli
    1a84:	de bf       	out	0x3e, r29	; 62
    1a86:	0f be       	out	0x3f, r0	; 63
    1a88:	cd bf       	out	0x3d, r28	; 61

	DIO_u8SetPortDirection(DIO_u8PORTA,DIO_u8PORT_OUTPUT);
    1a8a:	80 e0       	ldi	r24, 0x00	; 0
    1a8c:	6f ef       	ldi	r22, 0xFF	; 255
    1a8e:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <DIO_u8SetPortDirection>
	DIO_u8SetPinDirection(DIO_u8PORTB,DIO_u8PIN0,DIO_u8PIN_OUTPUT);
    1a92:	81 e0       	ldi	r24, 0x01	; 1
    1a94:	60 e0       	ldi	r22, 0x00	; 0
    1a96:	41 e0       	ldi	r20, 0x01	; 1
    1a98:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_u8PORTB,DIO_u8PIN1,DIO_u8PIN_OUTPUT);
    1a9c:	81 e0       	ldi	r24, 0x01	; 1
    1a9e:	61 e0       	ldi	r22, 0x01	; 1
    1aa0:	41 e0       	ldi	r20, 0x01	; 1
    1aa2:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinDirection>
	DIO_u8SetPinDirection(DIO_u8PORTB,DIO_u8PIN2,DIO_u8PIN_OUTPUT);
    1aa6:	81 e0       	ldi	r24, 0x01	; 1
    1aa8:	62 e0       	ldi	r22, 0x02	; 2
    1aaa:	41 e0       	ldi	r20, 0x01	; 1
    1aac:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinDirection>
	CLCD_voidIntialization();
    1ab0:	0e 94 5e 09 	call	0x12bc	; 0x12bc <CLCD_voidIntialization>

	char Hello[]={"Hello"};
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	8c 56       	subi	r24, 0x6C	; 108
    1ab8:	9d 4f       	sbci	r25, 0xFD	; 253
    1aba:	c2 5b       	subi	r28, 0xB2	; 178
    1abc:	dc 4f       	sbci	r29, 0xFC	; 252
    1abe:	99 83       	std	Y+1, r25	; 0x01
    1ac0:	88 83       	st	Y, r24
    1ac2:	ce 54       	subi	r28, 0x4E	; 78
    1ac4:	d3 40       	sbci	r29, 0x03	; 3
    1ac6:	80 e6       	ldi	r24, 0x60	; 96
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	c0 5b       	subi	r28, 0xB0	; 176
    1acc:	dc 4f       	sbci	r29, 0xFC	; 252
    1ace:	99 83       	std	Y+1, r25	; 0x01
    1ad0:	88 83       	st	Y, r24
    1ad2:	c0 55       	subi	r28, 0x50	; 80
    1ad4:	d3 40       	sbci	r29, 0x03	; 3
    1ad6:	96 e0       	ldi	r25, 0x06	; 6
    1ad8:	ce 5a       	subi	r28, 0xAE	; 174
    1ada:	dc 4f       	sbci	r29, 0xFC	; 252
    1adc:	98 83       	st	Y, r25
    1ade:	c2 55       	subi	r28, 0x52	; 82
    1ae0:	d3 40       	sbci	r29, 0x03	; 3
    1ae2:	c0 5b       	subi	r28, 0xB0	; 176
    1ae4:	dc 4f       	sbci	r29, 0xFC	; 252
    1ae6:	a8 81       	ld	r26, Y
    1ae8:	b9 81       	ldd	r27, Y+1	; 0x01
    1aea:	c0 55       	subi	r28, 0x50	; 80
    1aec:	d3 40       	sbci	r29, 0x03	; 3
    1aee:	0c 90       	ld	r0, X
    1af0:	c0 5b       	subi	r28, 0xB0	; 176
    1af2:	dc 4f       	sbci	r29, 0xFC	; 252
    1af4:	e8 81       	ld	r30, Y
    1af6:	f9 81       	ldd	r31, Y+1	; 0x01
    1af8:	c0 55       	subi	r28, 0x50	; 80
    1afa:	d3 40       	sbci	r29, 0x03	; 3
    1afc:	31 96       	adiw	r30, 0x01	; 1
    1afe:	c0 5b       	subi	r28, 0xB0	; 176
    1b00:	dc 4f       	sbci	r29, 0xFC	; 252
    1b02:	f9 83       	std	Y+1, r31	; 0x01
    1b04:	e8 83       	st	Y, r30
    1b06:	c0 55       	subi	r28, 0x50	; 80
    1b08:	d3 40       	sbci	r29, 0x03	; 3
    1b0a:	c2 5b       	subi	r28, 0xB2	; 178
    1b0c:	dc 4f       	sbci	r29, 0xFC	; 252
    1b0e:	a8 81       	ld	r26, Y
    1b10:	b9 81       	ldd	r27, Y+1	; 0x01
    1b12:	ce 54       	subi	r28, 0x4E	; 78
    1b14:	d3 40       	sbci	r29, 0x03	; 3
    1b16:	0c 92       	st	X, r0
    1b18:	c2 5b       	subi	r28, 0xB2	; 178
    1b1a:	dc 4f       	sbci	r29, 0xFC	; 252
    1b1c:	e8 81       	ld	r30, Y
    1b1e:	f9 81       	ldd	r31, Y+1	; 0x01
    1b20:	ce 54       	subi	r28, 0x4E	; 78
    1b22:	d3 40       	sbci	r29, 0x03	; 3
    1b24:	31 96       	adiw	r30, 0x01	; 1
    1b26:	c2 5b       	subi	r28, 0xB2	; 178
    1b28:	dc 4f       	sbci	r29, 0xFC	; 252
    1b2a:	f9 83       	std	Y+1, r31	; 0x01
    1b2c:	e8 83       	st	Y, r30
    1b2e:	ce 54       	subi	r28, 0x4E	; 78
    1b30:	d3 40       	sbci	r29, 0x03	; 3
    1b32:	ce 5a       	subi	r28, 0xAE	; 174
    1b34:	dc 4f       	sbci	r29, 0xFC	; 252
    1b36:	f8 81       	ld	r31, Y
    1b38:	c2 55       	subi	r28, 0x52	; 82
    1b3a:	d3 40       	sbci	r29, 0x03	; 3
    1b3c:	f1 50       	subi	r31, 0x01	; 1
    1b3e:	ce 5a       	subi	r28, 0xAE	; 174
    1b40:	dc 4f       	sbci	r29, 0xFC	; 252
    1b42:	f8 83       	st	Y, r31
    1b44:	c2 55       	subi	r28, 0x52	; 82
    1b46:	d3 40       	sbci	r29, 0x03	; 3
    1b48:	ce 5a       	subi	r28, 0xAE	; 174
    1b4a:	dc 4f       	sbci	r29, 0xFC	; 252
    1b4c:	88 81       	ld	r24, Y
    1b4e:	c2 55       	subi	r28, 0x52	; 82
    1b50:	d3 40       	sbci	r29, 0x03	; 3
    1b52:	88 23       	and	r24, r24
    1b54:	31 f6       	brne	.-116    	; 0x1ae2 <main+0x72>
	char statement1[]={"I'm"};
    1b56:	fe 01       	movw	r30, r28
    1b58:	e6 56       	subi	r30, 0x66	; 102
    1b5a:	fd 4f       	sbci	r31, 0xFD	; 253
    1b5c:	80 91 66 00 	lds	r24, 0x0066
    1b60:	90 91 67 00 	lds	r25, 0x0067
    1b64:	a0 91 68 00 	lds	r26, 0x0068
    1b68:	b0 91 69 00 	lds	r27, 0x0069
    1b6c:	80 83       	st	Z, r24
    1b6e:	91 83       	std	Z+1, r25	; 0x01
    1b70:	a2 83       	std	Z+2, r26	; 0x02
    1b72:	b3 83       	std	Z+3, r27	; 0x03
	char statement2[]={"Rokba"};
    1b74:	ce 01       	movw	r24, r28
    1b76:	82 56       	subi	r24, 0x62	; 98
    1b78:	9d 4f       	sbci	r25, 0xFD	; 253
    1b7a:	cd 5a       	subi	r28, 0xAD	; 173
    1b7c:	dc 4f       	sbci	r29, 0xFC	; 252
    1b7e:	99 83       	std	Y+1, r25	; 0x01
    1b80:	88 83       	st	Y, r24
    1b82:	c3 55       	subi	r28, 0x53	; 83
    1b84:	d3 40       	sbci	r29, 0x03	; 3
    1b86:	aa e6       	ldi	r26, 0x6A	; 106
    1b88:	b0 e0       	ldi	r27, 0x00	; 0
    1b8a:	cb 5a       	subi	r28, 0xAB	; 171
    1b8c:	dc 4f       	sbci	r29, 0xFC	; 252
    1b8e:	b9 83       	std	Y+1, r27	; 0x01
    1b90:	a8 83       	st	Y, r26
    1b92:	c5 55       	subi	r28, 0x55	; 85
    1b94:	d3 40       	sbci	r29, 0x03	; 3
    1b96:	b6 e0       	ldi	r27, 0x06	; 6
    1b98:	c9 5a       	subi	r28, 0xA9	; 169
    1b9a:	dc 4f       	sbci	r29, 0xFC	; 252
    1b9c:	b8 83       	st	Y, r27
    1b9e:	c7 55       	subi	r28, 0x57	; 87
    1ba0:	d3 40       	sbci	r29, 0x03	; 3
    1ba2:	cb 5a       	subi	r28, 0xAB	; 171
    1ba4:	dc 4f       	sbci	r29, 0xFC	; 252
    1ba6:	e8 81       	ld	r30, Y
    1ba8:	f9 81       	ldd	r31, Y+1	; 0x01
    1baa:	c5 55       	subi	r28, 0x55	; 85
    1bac:	d3 40       	sbci	r29, 0x03	; 3
    1bae:	00 80       	ld	r0, Z
    1bb0:	cb 5a       	subi	r28, 0xAB	; 171
    1bb2:	dc 4f       	sbci	r29, 0xFC	; 252
    1bb4:	88 81       	ld	r24, Y
    1bb6:	99 81       	ldd	r25, Y+1	; 0x01
    1bb8:	c5 55       	subi	r28, 0x55	; 85
    1bba:	d3 40       	sbci	r29, 0x03	; 3
    1bbc:	01 96       	adiw	r24, 0x01	; 1
    1bbe:	cb 5a       	subi	r28, 0xAB	; 171
    1bc0:	dc 4f       	sbci	r29, 0xFC	; 252
    1bc2:	99 83       	std	Y+1, r25	; 0x01
    1bc4:	88 83       	st	Y, r24
    1bc6:	c5 55       	subi	r28, 0x55	; 85
    1bc8:	d3 40       	sbci	r29, 0x03	; 3
    1bca:	cd 5a       	subi	r28, 0xAD	; 173
    1bcc:	dc 4f       	sbci	r29, 0xFC	; 252
    1bce:	a8 81       	ld	r26, Y
    1bd0:	b9 81       	ldd	r27, Y+1	; 0x01
    1bd2:	c3 55       	subi	r28, 0x53	; 83
    1bd4:	d3 40       	sbci	r29, 0x03	; 3
    1bd6:	0c 92       	st	X, r0
    1bd8:	cd 5a       	subi	r28, 0xAD	; 173
    1bda:	dc 4f       	sbci	r29, 0xFC	; 252
    1bdc:	e8 81       	ld	r30, Y
    1bde:	f9 81       	ldd	r31, Y+1	; 0x01
    1be0:	c3 55       	subi	r28, 0x53	; 83
    1be2:	d3 40       	sbci	r29, 0x03	; 3
    1be4:	31 96       	adiw	r30, 0x01	; 1
    1be6:	cd 5a       	subi	r28, 0xAD	; 173
    1be8:	dc 4f       	sbci	r29, 0xFC	; 252
    1bea:	f9 83       	std	Y+1, r31	; 0x01
    1bec:	e8 83       	st	Y, r30
    1bee:	c3 55       	subi	r28, 0x53	; 83
    1bf0:	d3 40       	sbci	r29, 0x03	; 3
    1bf2:	c9 5a       	subi	r28, 0xA9	; 169
    1bf4:	dc 4f       	sbci	r29, 0xFC	; 252
    1bf6:	f8 81       	ld	r31, Y
    1bf8:	c7 55       	subi	r28, 0x57	; 87
    1bfa:	d3 40       	sbci	r29, 0x03	; 3
    1bfc:	f1 50       	subi	r31, 0x01	; 1
    1bfe:	c9 5a       	subi	r28, 0xA9	; 169
    1c00:	dc 4f       	sbci	r29, 0xFC	; 252
    1c02:	f8 83       	st	Y, r31
    1c04:	c7 55       	subi	r28, 0x57	; 87
    1c06:	d3 40       	sbci	r29, 0x03	; 3
    1c08:	c9 5a       	subi	r28, 0xA9	; 169
    1c0a:	dc 4f       	sbci	r29, 0xFC	; 252
    1c0c:	88 81       	ld	r24, Y
    1c0e:	c7 55       	subi	r28, 0x57	; 87
    1c10:	d3 40       	sbci	r29, 0x03	; 3
    1c12:	88 23       	and	r24, r24
    1c14:	31 f6       	brne	.-116    	; 0x1ba2 <main+0x132>
	char play[]={"I can play "};
    1c16:	ce 01       	movw	r24, r28
    1c18:	8c 55       	subi	r24, 0x5C	; 92
    1c1a:	9d 4f       	sbci	r25, 0xFD	; 253
    1c1c:	c8 5a       	subi	r28, 0xA8	; 168
    1c1e:	dc 4f       	sbci	r29, 0xFC	; 252
    1c20:	99 83       	std	Y+1, r25	; 0x01
    1c22:	88 83       	st	Y, r24
    1c24:	c8 55       	subi	r28, 0x58	; 88
    1c26:	d3 40       	sbci	r29, 0x03	; 3
    1c28:	a0 e7       	ldi	r26, 0x70	; 112
    1c2a:	b0 e0       	ldi	r27, 0x00	; 0
    1c2c:	c6 5a       	subi	r28, 0xA6	; 166
    1c2e:	dc 4f       	sbci	r29, 0xFC	; 252
    1c30:	b9 83       	std	Y+1, r27	; 0x01
    1c32:	a8 83       	st	Y, r26
    1c34:	ca 55       	subi	r28, 0x5A	; 90
    1c36:	d3 40       	sbci	r29, 0x03	; 3
    1c38:	bc e0       	ldi	r27, 0x0C	; 12
    1c3a:	c4 5a       	subi	r28, 0xA4	; 164
    1c3c:	dc 4f       	sbci	r29, 0xFC	; 252
    1c3e:	b8 83       	st	Y, r27
    1c40:	cc 55       	subi	r28, 0x5C	; 92
    1c42:	d3 40       	sbci	r29, 0x03	; 3
    1c44:	c6 5a       	subi	r28, 0xA6	; 166
    1c46:	dc 4f       	sbci	r29, 0xFC	; 252
    1c48:	e8 81       	ld	r30, Y
    1c4a:	f9 81       	ldd	r31, Y+1	; 0x01
    1c4c:	ca 55       	subi	r28, 0x5A	; 90
    1c4e:	d3 40       	sbci	r29, 0x03	; 3
    1c50:	00 80       	ld	r0, Z
    1c52:	c6 5a       	subi	r28, 0xA6	; 166
    1c54:	dc 4f       	sbci	r29, 0xFC	; 252
    1c56:	88 81       	ld	r24, Y
    1c58:	99 81       	ldd	r25, Y+1	; 0x01
    1c5a:	ca 55       	subi	r28, 0x5A	; 90
    1c5c:	d3 40       	sbci	r29, 0x03	; 3
    1c5e:	01 96       	adiw	r24, 0x01	; 1
    1c60:	c6 5a       	subi	r28, 0xA6	; 166
    1c62:	dc 4f       	sbci	r29, 0xFC	; 252
    1c64:	99 83       	std	Y+1, r25	; 0x01
    1c66:	88 83       	st	Y, r24
    1c68:	ca 55       	subi	r28, 0x5A	; 90
    1c6a:	d3 40       	sbci	r29, 0x03	; 3
    1c6c:	c8 5a       	subi	r28, 0xA8	; 168
    1c6e:	dc 4f       	sbci	r29, 0xFC	; 252
    1c70:	a8 81       	ld	r26, Y
    1c72:	b9 81       	ldd	r27, Y+1	; 0x01
    1c74:	c8 55       	subi	r28, 0x58	; 88
    1c76:	d3 40       	sbci	r29, 0x03	; 3
    1c78:	0c 92       	st	X, r0
    1c7a:	c8 5a       	subi	r28, 0xA8	; 168
    1c7c:	dc 4f       	sbci	r29, 0xFC	; 252
    1c7e:	e8 81       	ld	r30, Y
    1c80:	f9 81       	ldd	r31, Y+1	; 0x01
    1c82:	c8 55       	subi	r28, 0x58	; 88
    1c84:	d3 40       	sbci	r29, 0x03	; 3
    1c86:	31 96       	adiw	r30, 0x01	; 1
    1c88:	c8 5a       	subi	r28, 0xA8	; 168
    1c8a:	dc 4f       	sbci	r29, 0xFC	; 252
    1c8c:	f9 83       	std	Y+1, r31	; 0x01
    1c8e:	e8 83       	st	Y, r30
    1c90:	c8 55       	subi	r28, 0x58	; 88
    1c92:	d3 40       	sbci	r29, 0x03	; 3
    1c94:	c4 5a       	subi	r28, 0xA4	; 164
    1c96:	dc 4f       	sbci	r29, 0xFC	; 252
    1c98:	f8 81       	ld	r31, Y
    1c9a:	cc 55       	subi	r28, 0x5C	; 92
    1c9c:	d3 40       	sbci	r29, 0x03	; 3
    1c9e:	f1 50       	subi	r31, 0x01	; 1
    1ca0:	c4 5a       	subi	r28, 0xA4	; 164
    1ca2:	dc 4f       	sbci	r29, 0xFC	; 252
    1ca4:	f8 83       	st	Y, r31
    1ca6:	cc 55       	subi	r28, 0x5C	; 92
    1ca8:	d3 40       	sbci	r29, 0x03	; 3
    1caa:	c4 5a       	subi	r28, 0xA4	; 164
    1cac:	dc 4f       	sbci	r29, 0xFC	; 252
    1cae:	88 81       	ld	r24, Y
    1cb0:	cc 55       	subi	r28, 0x5C	; 92
    1cb2:	d3 40       	sbci	r29, 0x03	; 3
    1cb4:	88 23       	and	r24, r24
    1cb6:	31 f6       	brne	.-116    	; 0x1c44 <main+0x1d4>
	char football[]={"football"};
    1cb8:	ce 01       	movw	r24, r28
    1cba:	80 55       	subi	r24, 0x50	; 80
    1cbc:	9d 4f       	sbci	r25, 0xFD	; 253
    1cbe:	c3 5a       	subi	r28, 0xA3	; 163
    1cc0:	dc 4f       	sbci	r29, 0xFC	; 252
    1cc2:	99 83       	std	Y+1, r25	; 0x01
    1cc4:	88 83       	st	Y, r24
    1cc6:	cd 55       	subi	r28, 0x5D	; 93
    1cc8:	d3 40       	sbci	r29, 0x03	; 3
    1cca:	ac e7       	ldi	r26, 0x7C	; 124
    1ccc:	b0 e0       	ldi	r27, 0x00	; 0
    1cce:	c1 5a       	subi	r28, 0xA1	; 161
    1cd0:	dc 4f       	sbci	r29, 0xFC	; 252
    1cd2:	b9 83       	std	Y+1, r27	; 0x01
    1cd4:	a8 83       	st	Y, r26
    1cd6:	cf 55       	subi	r28, 0x5F	; 95
    1cd8:	d3 40       	sbci	r29, 0x03	; 3
    1cda:	b9 e0       	ldi	r27, 0x09	; 9
    1cdc:	cf 59       	subi	r28, 0x9F	; 159
    1cde:	dc 4f       	sbci	r29, 0xFC	; 252
    1ce0:	b8 83       	st	Y, r27
    1ce2:	c1 56       	subi	r28, 0x61	; 97
    1ce4:	d3 40       	sbci	r29, 0x03	; 3
    1ce6:	c1 5a       	subi	r28, 0xA1	; 161
    1ce8:	dc 4f       	sbci	r29, 0xFC	; 252
    1cea:	e8 81       	ld	r30, Y
    1cec:	f9 81       	ldd	r31, Y+1	; 0x01
    1cee:	cf 55       	subi	r28, 0x5F	; 95
    1cf0:	d3 40       	sbci	r29, 0x03	; 3
    1cf2:	00 80       	ld	r0, Z
    1cf4:	c1 5a       	subi	r28, 0xA1	; 161
    1cf6:	dc 4f       	sbci	r29, 0xFC	; 252
    1cf8:	88 81       	ld	r24, Y
    1cfa:	99 81       	ldd	r25, Y+1	; 0x01
    1cfc:	cf 55       	subi	r28, 0x5F	; 95
    1cfe:	d3 40       	sbci	r29, 0x03	; 3
    1d00:	01 96       	adiw	r24, 0x01	; 1
    1d02:	c1 5a       	subi	r28, 0xA1	; 161
    1d04:	dc 4f       	sbci	r29, 0xFC	; 252
    1d06:	99 83       	std	Y+1, r25	; 0x01
    1d08:	88 83       	st	Y, r24
    1d0a:	cf 55       	subi	r28, 0x5F	; 95
    1d0c:	d3 40       	sbci	r29, 0x03	; 3
    1d0e:	c3 5a       	subi	r28, 0xA3	; 163
    1d10:	dc 4f       	sbci	r29, 0xFC	; 252
    1d12:	a8 81       	ld	r26, Y
    1d14:	b9 81       	ldd	r27, Y+1	; 0x01
    1d16:	cd 55       	subi	r28, 0x5D	; 93
    1d18:	d3 40       	sbci	r29, 0x03	; 3
    1d1a:	0c 92       	st	X, r0
    1d1c:	c3 5a       	subi	r28, 0xA3	; 163
    1d1e:	dc 4f       	sbci	r29, 0xFC	; 252
    1d20:	e8 81       	ld	r30, Y
    1d22:	f9 81       	ldd	r31, Y+1	; 0x01
    1d24:	cd 55       	subi	r28, 0x5D	; 93
    1d26:	d3 40       	sbci	r29, 0x03	; 3
    1d28:	31 96       	adiw	r30, 0x01	; 1
    1d2a:	c3 5a       	subi	r28, 0xA3	; 163
    1d2c:	dc 4f       	sbci	r29, 0xFC	; 252
    1d2e:	f9 83       	std	Y+1, r31	; 0x01
    1d30:	e8 83       	st	Y, r30
    1d32:	cd 55       	subi	r28, 0x5D	; 93
    1d34:	d3 40       	sbci	r29, 0x03	; 3
    1d36:	cf 59       	subi	r28, 0x9F	; 159
    1d38:	dc 4f       	sbci	r29, 0xFC	; 252
    1d3a:	f8 81       	ld	r31, Y
    1d3c:	c1 56       	subi	r28, 0x61	; 97
    1d3e:	d3 40       	sbci	r29, 0x03	; 3
    1d40:	f1 50       	subi	r31, 0x01	; 1
    1d42:	cf 59       	subi	r28, 0x9F	; 159
    1d44:	dc 4f       	sbci	r29, 0xFC	; 252
    1d46:	f8 83       	st	Y, r31
    1d48:	c1 56       	subi	r28, 0x61	; 97
    1d4a:	d3 40       	sbci	r29, 0x03	; 3
    1d4c:	cf 59       	subi	r28, 0x9F	; 159
    1d4e:	dc 4f       	sbci	r29, 0xFC	; 252
    1d50:	88 81       	ld	r24, Y
    1d52:	c1 56       	subi	r28, 0x61	; 97
    1d54:	d3 40       	sbci	r29, 0x03	; 3
    1d56:	88 23       	and	r24, r24
    1d58:	31 f6       	brne	.-116    	; 0x1ce6 <main+0x276>
	char dance[]={"I can dance "};
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	87 54       	subi	r24, 0x47	; 71
    1d5e:	9d 4f       	sbci	r25, 0xFD	; 253
    1d60:	ce 59       	subi	r28, 0x9E	; 158
    1d62:	dc 4f       	sbci	r29, 0xFC	; 252
    1d64:	99 83       	std	Y+1, r25	; 0x01
    1d66:	88 83       	st	Y, r24
    1d68:	c2 56       	subi	r28, 0x62	; 98
    1d6a:	d3 40       	sbci	r29, 0x03	; 3
    1d6c:	a5 e8       	ldi	r26, 0x85	; 133
    1d6e:	b0 e0       	ldi	r27, 0x00	; 0
    1d70:	cc 59       	subi	r28, 0x9C	; 156
    1d72:	dc 4f       	sbci	r29, 0xFC	; 252
    1d74:	b9 83       	std	Y+1, r27	; 0x01
    1d76:	a8 83       	st	Y, r26
    1d78:	c4 56       	subi	r28, 0x64	; 100
    1d7a:	d3 40       	sbci	r29, 0x03	; 3
    1d7c:	bd e0       	ldi	r27, 0x0D	; 13
    1d7e:	ca 59       	subi	r28, 0x9A	; 154
    1d80:	dc 4f       	sbci	r29, 0xFC	; 252
    1d82:	b8 83       	st	Y, r27
    1d84:	c6 56       	subi	r28, 0x66	; 102
    1d86:	d3 40       	sbci	r29, 0x03	; 3
    1d88:	cc 59       	subi	r28, 0x9C	; 156
    1d8a:	dc 4f       	sbci	r29, 0xFC	; 252
    1d8c:	e8 81       	ld	r30, Y
    1d8e:	f9 81       	ldd	r31, Y+1	; 0x01
    1d90:	c4 56       	subi	r28, 0x64	; 100
    1d92:	d3 40       	sbci	r29, 0x03	; 3
    1d94:	00 80       	ld	r0, Z
    1d96:	cc 59       	subi	r28, 0x9C	; 156
    1d98:	dc 4f       	sbci	r29, 0xFC	; 252
    1d9a:	88 81       	ld	r24, Y
    1d9c:	99 81       	ldd	r25, Y+1	; 0x01
    1d9e:	c4 56       	subi	r28, 0x64	; 100
    1da0:	d3 40       	sbci	r29, 0x03	; 3
    1da2:	01 96       	adiw	r24, 0x01	; 1
    1da4:	cc 59       	subi	r28, 0x9C	; 156
    1da6:	dc 4f       	sbci	r29, 0xFC	; 252
    1da8:	99 83       	std	Y+1, r25	; 0x01
    1daa:	88 83       	st	Y, r24
    1dac:	c4 56       	subi	r28, 0x64	; 100
    1dae:	d3 40       	sbci	r29, 0x03	; 3
    1db0:	ce 59       	subi	r28, 0x9E	; 158
    1db2:	dc 4f       	sbci	r29, 0xFC	; 252
    1db4:	a8 81       	ld	r26, Y
    1db6:	b9 81       	ldd	r27, Y+1	; 0x01
    1db8:	c2 56       	subi	r28, 0x62	; 98
    1dba:	d3 40       	sbci	r29, 0x03	; 3
    1dbc:	0c 92       	st	X, r0
    1dbe:	ce 59       	subi	r28, 0x9E	; 158
    1dc0:	dc 4f       	sbci	r29, 0xFC	; 252
    1dc2:	e8 81       	ld	r30, Y
    1dc4:	f9 81       	ldd	r31, Y+1	; 0x01
    1dc6:	c2 56       	subi	r28, 0x62	; 98
    1dc8:	d3 40       	sbci	r29, 0x03	; 3
    1dca:	31 96       	adiw	r30, 0x01	; 1
    1dcc:	ce 59       	subi	r28, 0x9E	; 158
    1dce:	dc 4f       	sbci	r29, 0xFC	; 252
    1dd0:	f9 83       	std	Y+1, r31	; 0x01
    1dd2:	e8 83       	st	Y, r30
    1dd4:	c2 56       	subi	r28, 0x62	; 98
    1dd6:	d3 40       	sbci	r29, 0x03	; 3
    1dd8:	ca 59       	subi	r28, 0x9A	; 154
    1dda:	dc 4f       	sbci	r29, 0xFC	; 252
    1ddc:	f8 81       	ld	r31, Y
    1dde:	c6 56       	subi	r28, 0x66	; 102
    1de0:	d3 40       	sbci	r29, 0x03	; 3
    1de2:	f1 50       	subi	r31, 0x01	; 1
    1de4:	ca 59       	subi	r28, 0x9A	; 154
    1de6:	dc 4f       	sbci	r29, 0xFC	; 252
    1de8:	f8 83       	st	Y, r31
    1dea:	c6 56       	subi	r28, 0x66	; 102
    1dec:	d3 40       	sbci	r29, 0x03	; 3
    1dee:	ca 59       	subi	r28, 0x9A	; 154
    1df0:	dc 4f       	sbci	r29, 0xFC	; 252
    1df2:	88 81       	ld	r24, Y
    1df4:	c6 56       	subi	r28, 0x66	; 102
    1df6:	d3 40       	sbci	r29, 0x03	; 3
    1df8:	88 23       	and	r24, r24
    1dfa:	31 f6       	brne	.-116    	; 0x1d88 <main+0x318>
	char roadblock[]={"jump roadblocks"};
    1dfc:	ce 01       	movw	r24, r28
    1dfe:	8a 53       	subi	r24, 0x3A	; 58
    1e00:	9d 4f       	sbci	r25, 0xFD	; 253
    1e02:	c9 59       	subi	r28, 0x99	; 153
    1e04:	dc 4f       	sbci	r29, 0xFC	; 252
    1e06:	99 83       	std	Y+1, r25	; 0x01
    1e08:	88 83       	st	Y, r24
    1e0a:	c7 56       	subi	r28, 0x67	; 103
    1e0c:	d3 40       	sbci	r29, 0x03	; 3
    1e0e:	a2 e9       	ldi	r26, 0x92	; 146
    1e10:	b0 e0       	ldi	r27, 0x00	; 0
    1e12:	c7 59       	subi	r28, 0x97	; 151
    1e14:	dc 4f       	sbci	r29, 0xFC	; 252
    1e16:	b9 83       	std	Y+1, r27	; 0x01
    1e18:	a8 83       	st	Y, r26
    1e1a:	c9 56       	subi	r28, 0x69	; 105
    1e1c:	d3 40       	sbci	r29, 0x03	; 3
    1e1e:	b0 e1       	ldi	r27, 0x10	; 16
    1e20:	c5 59       	subi	r28, 0x95	; 149
    1e22:	dc 4f       	sbci	r29, 0xFC	; 252
    1e24:	b8 83       	st	Y, r27
    1e26:	cb 56       	subi	r28, 0x6B	; 107
    1e28:	d3 40       	sbci	r29, 0x03	; 3
    1e2a:	c7 59       	subi	r28, 0x97	; 151
    1e2c:	dc 4f       	sbci	r29, 0xFC	; 252
    1e2e:	e8 81       	ld	r30, Y
    1e30:	f9 81       	ldd	r31, Y+1	; 0x01
    1e32:	c9 56       	subi	r28, 0x69	; 105
    1e34:	d3 40       	sbci	r29, 0x03	; 3
    1e36:	00 80       	ld	r0, Z
    1e38:	c7 59       	subi	r28, 0x97	; 151
    1e3a:	dc 4f       	sbci	r29, 0xFC	; 252
    1e3c:	88 81       	ld	r24, Y
    1e3e:	99 81       	ldd	r25, Y+1	; 0x01
    1e40:	c9 56       	subi	r28, 0x69	; 105
    1e42:	d3 40       	sbci	r29, 0x03	; 3
    1e44:	01 96       	adiw	r24, 0x01	; 1
    1e46:	c7 59       	subi	r28, 0x97	; 151
    1e48:	dc 4f       	sbci	r29, 0xFC	; 252
    1e4a:	99 83       	std	Y+1, r25	; 0x01
    1e4c:	88 83       	st	Y, r24
    1e4e:	c9 56       	subi	r28, 0x69	; 105
    1e50:	d3 40       	sbci	r29, 0x03	; 3
    1e52:	c9 59       	subi	r28, 0x99	; 153
    1e54:	dc 4f       	sbci	r29, 0xFC	; 252
    1e56:	a8 81       	ld	r26, Y
    1e58:	b9 81       	ldd	r27, Y+1	; 0x01
    1e5a:	c7 56       	subi	r28, 0x67	; 103
    1e5c:	d3 40       	sbci	r29, 0x03	; 3
    1e5e:	0c 92       	st	X, r0
    1e60:	c9 59       	subi	r28, 0x99	; 153
    1e62:	dc 4f       	sbci	r29, 0xFC	; 252
    1e64:	e8 81       	ld	r30, Y
    1e66:	f9 81       	ldd	r31, Y+1	; 0x01
    1e68:	c7 56       	subi	r28, 0x67	; 103
    1e6a:	d3 40       	sbci	r29, 0x03	; 3
    1e6c:	31 96       	adiw	r30, 0x01	; 1
    1e6e:	c9 59       	subi	r28, 0x99	; 153
    1e70:	dc 4f       	sbci	r29, 0xFC	; 252
    1e72:	f9 83       	std	Y+1, r31	; 0x01
    1e74:	e8 83       	st	Y, r30
    1e76:	c7 56       	subi	r28, 0x67	; 103
    1e78:	d3 40       	sbci	r29, 0x03	; 3
    1e7a:	c5 59       	subi	r28, 0x95	; 149
    1e7c:	dc 4f       	sbci	r29, 0xFC	; 252
    1e7e:	f8 81       	ld	r31, Y
    1e80:	cb 56       	subi	r28, 0x6B	; 107
    1e82:	d3 40       	sbci	r29, 0x03	; 3
    1e84:	f1 50       	subi	r31, 0x01	; 1
    1e86:	c5 59       	subi	r28, 0x95	; 149
    1e88:	dc 4f       	sbci	r29, 0xFC	; 252
    1e8a:	f8 83       	st	Y, r31
    1e8c:	cb 56       	subi	r28, 0x6B	; 107
    1e8e:	d3 40       	sbci	r29, 0x03	; 3
    1e90:	c5 59       	subi	r28, 0x95	; 149
    1e92:	dc 4f       	sbci	r29, 0xFC	; 252
    1e94:	88 81       	ld	r24, Y
    1e96:	cb 56       	subi	r28, 0x6B	; 107
    1e98:	d3 40       	sbci	r29, 0x03	; 3
    1e9a:	88 23       	and	r24, r24
    1e9c:	31 f6       	brne	.-116    	; 0x1e2a <main+0x3ba>
	char kill[]={"Don't Kill me"};
    1e9e:	ce 01       	movw	r24, r28
    1ea0:	8a 52       	subi	r24, 0x2A	; 42
    1ea2:	9d 4f       	sbci	r25, 0xFD	; 253
    1ea4:	c4 59       	subi	r28, 0x94	; 148
    1ea6:	dc 4f       	sbci	r29, 0xFC	; 252
    1ea8:	99 83       	std	Y+1, r25	; 0x01
    1eaa:	88 83       	st	Y, r24
    1eac:	cc 56       	subi	r28, 0x6C	; 108
    1eae:	d3 40       	sbci	r29, 0x03	; 3
    1eb0:	a2 ea       	ldi	r26, 0xA2	; 162
    1eb2:	b0 e0       	ldi	r27, 0x00	; 0
    1eb4:	c2 59       	subi	r28, 0x92	; 146
    1eb6:	dc 4f       	sbci	r29, 0xFC	; 252
    1eb8:	b9 83       	std	Y+1, r27	; 0x01
    1eba:	a8 83       	st	Y, r26
    1ebc:	ce 56       	subi	r28, 0x6E	; 110
    1ebe:	d3 40       	sbci	r29, 0x03	; 3
    1ec0:	be e0       	ldi	r27, 0x0E	; 14
    1ec2:	c0 59       	subi	r28, 0x90	; 144
    1ec4:	dc 4f       	sbci	r29, 0xFC	; 252
    1ec6:	b8 83       	st	Y, r27
    1ec8:	c0 57       	subi	r28, 0x70	; 112
    1eca:	d3 40       	sbci	r29, 0x03	; 3
    1ecc:	c2 59       	subi	r28, 0x92	; 146
    1ece:	dc 4f       	sbci	r29, 0xFC	; 252
    1ed0:	e8 81       	ld	r30, Y
    1ed2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ed4:	ce 56       	subi	r28, 0x6E	; 110
    1ed6:	d3 40       	sbci	r29, 0x03	; 3
    1ed8:	00 80       	ld	r0, Z
    1eda:	c2 59       	subi	r28, 0x92	; 146
    1edc:	dc 4f       	sbci	r29, 0xFC	; 252
    1ede:	88 81       	ld	r24, Y
    1ee0:	99 81       	ldd	r25, Y+1	; 0x01
    1ee2:	ce 56       	subi	r28, 0x6E	; 110
    1ee4:	d3 40       	sbci	r29, 0x03	; 3
    1ee6:	01 96       	adiw	r24, 0x01	; 1
    1ee8:	c2 59       	subi	r28, 0x92	; 146
    1eea:	dc 4f       	sbci	r29, 0xFC	; 252
    1eec:	99 83       	std	Y+1, r25	; 0x01
    1eee:	88 83       	st	Y, r24
    1ef0:	ce 56       	subi	r28, 0x6E	; 110
    1ef2:	d3 40       	sbci	r29, 0x03	; 3
    1ef4:	c4 59       	subi	r28, 0x94	; 148
    1ef6:	dc 4f       	sbci	r29, 0xFC	; 252
    1ef8:	a8 81       	ld	r26, Y
    1efa:	b9 81       	ldd	r27, Y+1	; 0x01
    1efc:	cc 56       	subi	r28, 0x6C	; 108
    1efe:	d3 40       	sbci	r29, 0x03	; 3
    1f00:	0c 92       	st	X, r0
    1f02:	c4 59       	subi	r28, 0x94	; 148
    1f04:	dc 4f       	sbci	r29, 0xFC	; 252
    1f06:	e8 81       	ld	r30, Y
    1f08:	f9 81       	ldd	r31, Y+1	; 0x01
    1f0a:	cc 56       	subi	r28, 0x6C	; 108
    1f0c:	d3 40       	sbci	r29, 0x03	; 3
    1f0e:	31 96       	adiw	r30, 0x01	; 1
    1f10:	c4 59       	subi	r28, 0x94	; 148
    1f12:	dc 4f       	sbci	r29, 0xFC	; 252
    1f14:	f9 83       	std	Y+1, r31	; 0x01
    1f16:	e8 83       	st	Y, r30
    1f18:	cc 56       	subi	r28, 0x6C	; 108
    1f1a:	d3 40       	sbci	r29, 0x03	; 3
    1f1c:	c0 59       	subi	r28, 0x90	; 144
    1f1e:	dc 4f       	sbci	r29, 0xFC	; 252
    1f20:	f8 81       	ld	r31, Y
    1f22:	c0 57       	subi	r28, 0x70	; 112
    1f24:	d3 40       	sbci	r29, 0x03	; 3
    1f26:	f1 50       	subi	r31, 0x01	; 1
    1f28:	c0 59       	subi	r28, 0x90	; 144
    1f2a:	dc 4f       	sbci	r29, 0xFC	; 252
    1f2c:	f8 83       	st	Y, r31
    1f2e:	c0 57       	subi	r28, 0x70	; 112
    1f30:	d3 40       	sbci	r29, 0x03	; 3
    1f32:	c0 59       	subi	r28, 0x90	; 144
    1f34:	dc 4f       	sbci	r29, 0xFC	; 252
    1f36:	88 81       	ld	r24, Y
    1f38:	c0 57       	subi	r28, 0x70	; 112
    1f3a:	d3 40       	sbci	r29, 0x03	; 3
    1f3c:	88 23       	and	r24, r24
    1f3e:	31 f6       	brne	.-116    	; 0x1ecc <main+0x45c>
	char RIP[]={"RIP Rokba"};
    1f40:	ce 01       	movw	r24, r28
    1f42:	8c 51       	subi	r24, 0x1C	; 28
    1f44:	9d 4f       	sbci	r25, 0xFD	; 253
    1f46:	cf 58       	subi	r28, 0x8F	; 143
    1f48:	dc 4f       	sbci	r29, 0xFC	; 252
    1f4a:	99 83       	std	Y+1, r25	; 0x01
    1f4c:	88 83       	st	Y, r24
    1f4e:	c1 57       	subi	r28, 0x71	; 113
    1f50:	d3 40       	sbci	r29, 0x03	; 3
    1f52:	a0 eb       	ldi	r26, 0xB0	; 176
    1f54:	b0 e0       	ldi	r27, 0x00	; 0
    1f56:	cd 58       	subi	r28, 0x8D	; 141
    1f58:	dc 4f       	sbci	r29, 0xFC	; 252
    1f5a:	b9 83       	std	Y+1, r27	; 0x01
    1f5c:	a8 83       	st	Y, r26
    1f5e:	c3 57       	subi	r28, 0x73	; 115
    1f60:	d3 40       	sbci	r29, 0x03	; 3
    1f62:	ba e0       	ldi	r27, 0x0A	; 10
    1f64:	cb 58       	subi	r28, 0x8B	; 139
    1f66:	dc 4f       	sbci	r29, 0xFC	; 252
    1f68:	b8 83       	st	Y, r27
    1f6a:	c5 57       	subi	r28, 0x75	; 117
    1f6c:	d3 40       	sbci	r29, 0x03	; 3
    1f6e:	cd 58       	subi	r28, 0x8D	; 141
    1f70:	dc 4f       	sbci	r29, 0xFC	; 252
    1f72:	e8 81       	ld	r30, Y
    1f74:	f9 81       	ldd	r31, Y+1	; 0x01
    1f76:	c3 57       	subi	r28, 0x73	; 115
    1f78:	d3 40       	sbci	r29, 0x03	; 3
    1f7a:	00 80       	ld	r0, Z
    1f7c:	cd 58       	subi	r28, 0x8D	; 141
    1f7e:	dc 4f       	sbci	r29, 0xFC	; 252
    1f80:	88 81       	ld	r24, Y
    1f82:	99 81       	ldd	r25, Y+1	; 0x01
    1f84:	c3 57       	subi	r28, 0x73	; 115
    1f86:	d3 40       	sbci	r29, 0x03	; 3
    1f88:	01 96       	adiw	r24, 0x01	; 1
    1f8a:	cd 58       	subi	r28, 0x8D	; 141
    1f8c:	dc 4f       	sbci	r29, 0xFC	; 252
    1f8e:	99 83       	std	Y+1, r25	; 0x01
    1f90:	88 83       	st	Y, r24
    1f92:	c3 57       	subi	r28, 0x73	; 115
    1f94:	d3 40       	sbci	r29, 0x03	; 3
    1f96:	cf 58       	subi	r28, 0x8F	; 143
    1f98:	dc 4f       	sbci	r29, 0xFC	; 252
    1f9a:	a8 81       	ld	r26, Y
    1f9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1f9e:	c1 57       	subi	r28, 0x71	; 113
    1fa0:	d3 40       	sbci	r29, 0x03	; 3
    1fa2:	0c 92       	st	X, r0
    1fa4:	cf 58       	subi	r28, 0x8F	; 143
    1fa6:	dc 4f       	sbci	r29, 0xFC	; 252
    1fa8:	e8 81       	ld	r30, Y
    1faa:	f9 81       	ldd	r31, Y+1	; 0x01
    1fac:	c1 57       	subi	r28, 0x71	; 113
    1fae:	d3 40       	sbci	r29, 0x03	; 3
    1fb0:	31 96       	adiw	r30, 0x01	; 1
    1fb2:	cf 58       	subi	r28, 0x8F	; 143
    1fb4:	dc 4f       	sbci	r29, 0xFC	; 252
    1fb6:	f9 83       	std	Y+1, r31	; 0x01
    1fb8:	e8 83       	st	Y, r30
    1fba:	c1 57       	subi	r28, 0x71	; 113
    1fbc:	d3 40       	sbci	r29, 0x03	; 3
    1fbe:	cb 58       	subi	r28, 0x8B	; 139
    1fc0:	dc 4f       	sbci	r29, 0xFC	; 252
    1fc2:	f8 81       	ld	r31, Y
    1fc4:	c5 57       	subi	r28, 0x75	; 117
    1fc6:	d3 40       	sbci	r29, 0x03	; 3
    1fc8:	f1 50       	subi	r31, 0x01	; 1
    1fca:	cb 58       	subi	r28, 0x8B	; 139
    1fcc:	dc 4f       	sbci	r29, 0xFC	; 252
    1fce:	f8 83       	st	Y, r31
    1fd0:	c5 57       	subi	r28, 0x75	; 117
    1fd2:	d3 40       	sbci	r29, 0x03	; 3
    1fd4:	cb 58       	subi	r28, 0x8B	; 139
    1fd6:	dc 4f       	sbci	r29, 0xFC	; 252
    1fd8:	88 81       	ld	r24, Y
    1fda:	c5 57       	subi	r28, 0x75	; 117
    1fdc:	d3 40       	sbci	r29, 0x03	; 3
    1fde:	88 23       	and	r24, r24
    1fe0:	31 f6       	brne	.-116    	; 0x1f6e <main+0x4fe>
			0b00001110,
			0b00000100,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00010001};
    1fe2:	ce 01       	movw	r24, r28
    1fe4:	82 51       	subi	r24, 0x12	; 18
    1fe6:	9d 4f       	sbci	r25, 0xFD	; 253
    1fe8:	28 e0       	ldi	r18, 0x08	; 8
    1fea:	fc 01       	movw	r30, r24
    1fec:	df 01       	movw	r26, r30
    1fee:	82 2f       	mov	r24, r18
    1ff0:	1d 92       	st	X+, r1
    1ff2:	8a 95       	dec	r24
    1ff4:	e9 f7       	brne	.-6      	; 0x1ff0 <main+0x580>
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e2 51       	subi	r30, 0x12	; 18
    1ffa:	fd 4f       	sbci	r31, 0xFD	; 253
    1ffc:	8e e0       	ldi	r24, 0x0E	; 14
    1ffe:	80 83       	st	Z, r24
    2000:	fe 01       	movw	r30, r28
    2002:	e2 51       	subi	r30, 0x12	; 18
    2004:	fd 4f       	sbci	r31, 0xFD	; 253
    2006:	8e e0       	ldi	r24, 0x0E	; 14
    2008:	81 83       	std	Z+1, r24	; 0x01
    200a:	fe 01       	movw	r30, r28
    200c:	e2 51       	subi	r30, 0x12	; 18
    200e:	fd 4f       	sbci	r31, 0xFD	; 253
    2010:	84 e0       	ldi	r24, 0x04	; 4
    2012:	82 83       	std	Z+2, r24	; 0x02
    2014:	fe 01       	movw	r30, r28
    2016:	e2 51       	subi	r30, 0x12	; 18
    2018:	fd 4f       	sbci	r31, 0xFD	; 253
    201a:	8f e1       	ldi	r24, 0x1F	; 31
    201c:	83 83       	std	Z+3, r24	; 0x03
    201e:	fe 01       	movw	r30, r28
    2020:	e2 51       	subi	r30, 0x12	; 18
    2022:	fd 4f       	sbci	r31, 0xFD	; 253
    2024:	84 e0       	ldi	r24, 0x04	; 4
    2026:	84 83       	std	Z+4, r24	; 0x04
    2028:	fe 01       	movw	r30, r28
    202a:	e2 51       	subi	r30, 0x12	; 18
    202c:	fd 4f       	sbci	r31, 0xFD	; 253
    202e:	8f e1       	ldi	r24, 0x1F	; 31
    2030:	85 83       	std	Z+5, r24	; 0x05
    2032:	fe 01       	movw	r30, r28
    2034:	e2 51       	subi	r30, 0x12	; 18
    2036:	fd 4f       	sbci	r31, 0xFD	; 253
    2038:	81 e1       	ldi	r24, 0x11	; 17
    203a:	86 83       	std	Z+6, r24	; 0x06
			0b00001110,
			0b00000101,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00010000};
    203c:	ce 01       	movw	r24, r28
    203e:	8a 50       	subi	r24, 0x0A	; 10
    2040:	9d 4f       	sbci	r25, 0xFD	; 253
    2042:	28 e0       	ldi	r18, 0x08	; 8
    2044:	fc 01       	movw	r30, r24
    2046:	df 01       	movw	r26, r30
    2048:	82 2f       	mov	r24, r18
    204a:	1d 92       	st	X+, r1
    204c:	8a 95       	dec	r24
    204e:	e9 f7       	brne	.-6      	; 0x204a <main+0x5da>
    2050:	fe 01       	movw	r30, r28
    2052:	ea 50       	subi	r30, 0x0A	; 10
    2054:	fd 4f       	sbci	r31, 0xFD	; 253
    2056:	8e e0       	ldi	r24, 0x0E	; 14
    2058:	80 83       	st	Z, r24
    205a:	fe 01       	movw	r30, r28
    205c:	ea 50       	subi	r30, 0x0A	; 10
    205e:	fd 4f       	sbci	r31, 0xFD	; 253
    2060:	8e e0       	ldi	r24, 0x0E	; 14
    2062:	81 83       	std	Z+1, r24	; 0x01
    2064:	fe 01       	movw	r30, r28
    2066:	ea 50       	subi	r30, 0x0A	; 10
    2068:	fd 4f       	sbci	r31, 0xFD	; 253
    206a:	85 e0       	ldi	r24, 0x05	; 5
    206c:	82 83       	std	Z+2, r24	; 0x02
    206e:	fe 01       	movw	r30, r28
    2070:	ea 50       	subi	r30, 0x0A	; 10
    2072:	fd 4f       	sbci	r31, 0xFD	; 253
    2074:	8f e1       	ldi	r24, 0x1F	; 31
    2076:	83 83       	std	Z+3, r24	; 0x03
    2078:	fe 01       	movw	r30, r28
    207a:	ea 50       	subi	r30, 0x0A	; 10
    207c:	fd 4f       	sbci	r31, 0xFD	; 253
    207e:	84 e0       	ldi	r24, 0x04	; 4
    2080:	84 83       	std	Z+4, r24	; 0x04
    2082:	fe 01       	movw	r30, r28
    2084:	ea 50       	subi	r30, 0x0A	; 10
    2086:	fd 4f       	sbci	r31, 0xFD	; 253
    2088:	8f e1       	ldi	r24, 0x1F	; 31
    208a:	85 83       	std	Z+5, r24	; 0x05
    208c:	fe 01       	movw	r30, r28
    208e:	ea 50       	subi	r30, 0x0A	; 10
    2090:	fd 4f       	sbci	r31, 0xFD	; 253
    2092:	80 e1       	ldi	r24, 0x10	; 16
    2094:	86 83       	std	Z+6, r24	; 0x06
			0b00000000,
			0b00000000,
			0b00000000,
			0b00011000,
			0b00011000,
			0b00000000};
    2096:	ce 01       	movw	r24, r28
    2098:	82 50       	subi	r24, 0x02	; 2
    209a:	9d 4f       	sbci	r25, 0xFD	; 253
    209c:	28 e0       	ldi	r18, 0x08	; 8
    209e:	fc 01       	movw	r30, r24
    20a0:	df 01       	movw	r26, r30
    20a2:	82 2f       	mov	r24, r18
    20a4:	1d 92       	st	X+, r1
    20a6:	8a 95       	dec	r24
    20a8:	e9 f7       	brne	.-6      	; 0x20a4 <main+0x634>
    20aa:	fe 01       	movw	r30, r28
    20ac:	e2 50       	subi	r30, 0x02	; 2
    20ae:	fd 4f       	sbci	r31, 0xFD	; 253
    20b0:	88 e1       	ldi	r24, 0x18	; 24
    20b2:	84 83       	std	Z+4, r24	; 0x04
    20b4:	fe 01       	movw	r30, r28
    20b6:	e2 50       	subi	r30, 0x02	; 2
    20b8:	fd 4f       	sbci	r31, 0xFD	; 253
    20ba:	88 e1       	ldi	r24, 0x18	; 24
    20bc:	85 83       	std	Z+5, r24	; 0x05
			0b00000000,
			0b00011000,
			0b00011000,
			0b00000000,
			0b00000000,
			0b00000000};
    20be:	ce 01       	movw	r24, r28
    20c0:	8a 5f       	subi	r24, 0xFA	; 250
    20c2:	9c 4f       	sbci	r25, 0xFC	; 252
    20c4:	28 e0       	ldi	r18, 0x08	; 8
    20c6:	fc 01       	movw	r30, r24
    20c8:	df 01       	movw	r26, r30
    20ca:	82 2f       	mov	r24, r18
    20cc:	1d 92       	st	X+, r1
    20ce:	8a 95       	dec	r24
    20d0:	e9 f7       	brne	.-6      	; 0x20cc <main+0x65c>
    20d2:	fe 01       	movw	r30, r28
    20d4:	ea 5f       	subi	r30, 0xFA	; 250
    20d6:	fc 4f       	sbci	r31, 0xFC	; 252
    20d8:	88 e1       	ldi	r24, 0x18	; 24
    20da:	82 83       	std	Z+2, r24	; 0x02
    20dc:	fe 01       	movw	r30, r28
    20de:	ea 5f       	subi	r30, 0xFA	; 250
    20e0:	fc 4f       	sbci	r31, 0xFC	; 252
    20e2:	88 e1       	ldi	r24, 0x18	; 24
    20e4:	83 83       	std	Z+3, r24	; 0x03
			0b00001110,
			0b00010101,
			0b00001110,
			0b00000110,
			0b00001111,
			0b00001001};
    20e6:	ce 01       	movw	r24, r28
    20e8:	82 5f       	subi	r24, 0xF2	; 242
    20ea:	9c 4f       	sbci	r25, 0xFC	; 252
    20ec:	28 e0       	ldi	r18, 0x08	; 8
    20ee:	fc 01       	movw	r30, r24
    20f0:	df 01       	movw	r26, r30
    20f2:	82 2f       	mov	r24, r18
    20f4:	1d 92       	st	X+, r1
    20f6:	8a 95       	dec	r24
    20f8:	e9 f7       	brne	.-6      	; 0x20f4 <main+0x684>
    20fa:	fe 01       	movw	r30, r28
    20fc:	e2 5f       	subi	r30, 0xF2	; 242
    20fe:	fc 4f       	sbci	r31, 0xFC	; 252
    2100:	8e e0       	ldi	r24, 0x0E	; 14
    2102:	80 83       	st	Z, r24
    2104:	fe 01       	movw	r30, r28
    2106:	e2 5f       	subi	r30, 0xF2	; 242
    2108:	fc 4f       	sbci	r31, 0xFC	; 252
    210a:	8e e0       	ldi	r24, 0x0E	; 14
    210c:	81 83       	std	Z+1, r24	; 0x01
    210e:	fe 01       	movw	r30, r28
    2110:	e2 5f       	subi	r30, 0xF2	; 242
    2112:	fc 4f       	sbci	r31, 0xFC	; 252
    2114:	85 e1       	ldi	r24, 0x15	; 21
    2116:	82 83       	std	Z+2, r24	; 0x02
    2118:	fe 01       	movw	r30, r28
    211a:	e2 5f       	subi	r30, 0xF2	; 242
    211c:	fc 4f       	sbci	r31, 0xFC	; 252
    211e:	8e e0       	ldi	r24, 0x0E	; 14
    2120:	83 83       	std	Z+3, r24	; 0x03
    2122:	fe 01       	movw	r30, r28
    2124:	e2 5f       	subi	r30, 0xF2	; 242
    2126:	fc 4f       	sbci	r31, 0xFC	; 252
    2128:	86 e0       	ldi	r24, 0x06	; 6
    212a:	84 83       	std	Z+4, r24	; 0x04
    212c:	fe 01       	movw	r30, r28
    212e:	e2 5f       	subi	r30, 0xF2	; 242
    2130:	fc 4f       	sbci	r31, 0xFC	; 252
    2132:	8f e0       	ldi	r24, 0x0F	; 15
    2134:	85 83       	std	Z+5, r24	; 0x05
    2136:	fe 01       	movw	r30, r28
    2138:	e2 5f       	subi	r30, 0xF2	; 242
    213a:	fc 4f       	sbci	r31, 0xFC	; 252
    213c:	89 e0       	ldi	r24, 0x09	; 9
    213e:	86 83       	std	Z+6, r24	; 0x06
			0b00001110,
			0b00010101,
			0b00001110,
			0b00001100,
			0b00011110,
			0b00010010};
    2140:	ce 01       	movw	r24, r28
    2142:	8a 5e       	subi	r24, 0xEA	; 234
    2144:	9c 4f       	sbci	r25, 0xFC	; 252
    2146:	28 e0       	ldi	r18, 0x08	; 8
    2148:	fc 01       	movw	r30, r24
    214a:	df 01       	movw	r26, r30
    214c:	82 2f       	mov	r24, r18
    214e:	1d 92       	st	X+, r1
    2150:	8a 95       	dec	r24
    2152:	e9 f7       	brne	.-6      	; 0x214e <main+0x6de>
    2154:	fe 01       	movw	r30, r28
    2156:	ea 5e       	subi	r30, 0xEA	; 234
    2158:	fc 4f       	sbci	r31, 0xFC	; 252
    215a:	8e e0       	ldi	r24, 0x0E	; 14
    215c:	80 83       	st	Z, r24
    215e:	fe 01       	movw	r30, r28
    2160:	ea 5e       	subi	r30, 0xEA	; 234
    2162:	fc 4f       	sbci	r31, 0xFC	; 252
    2164:	8e e0       	ldi	r24, 0x0E	; 14
    2166:	81 83       	std	Z+1, r24	; 0x01
    2168:	fe 01       	movw	r30, r28
    216a:	ea 5e       	subi	r30, 0xEA	; 234
    216c:	fc 4f       	sbci	r31, 0xFC	; 252
    216e:	85 e1       	ldi	r24, 0x15	; 21
    2170:	82 83       	std	Z+2, r24	; 0x02
    2172:	fe 01       	movw	r30, r28
    2174:	ea 5e       	subi	r30, 0xEA	; 234
    2176:	fc 4f       	sbci	r31, 0xFC	; 252
    2178:	8e e0       	ldi	r24, 0x0E	; 14
    217a:	83 83       	std	Z+3, r24	; 0x03
    217c:	fe 01       	movw	r30, r28
    217e:	ea 5e       	subi	r30, 0xEA	; 234
    2180:	fc 4f       	sbci	r31, 0xFC	; 252
    2182:	8c e0       	ldi	r24, 0x0C	; 12
    2184:	84 83       	std	Z+4, r24	; 0x04
    2186:	fe 01       	movw	r30, r28
    2188:	ea 5e       	subi	r30, 0xEA	; 234
    218a:	fc 4f       	sbci	r31, 0xFC	; 252
    218c:	8e e1       	ldi	r24, 0x1E	; 30
    218e:	85 83       	std	Z+5, r24	; 0x05
    2190:	fe 01       	movw	r30, r28
    2192:	ea 5e       	subi	r30, 0xEA	; 234
    2194:	fc 4f       	sbci	r31, 0xFC	; 252
    2196:	82 e1       	ldi	r24, 0x12	; 18
    2198:	86 83       	std	Z+6, r24	; 0x06
			0b00001110,
			0b00000101,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00000001};
    219a:	ce 01       	movw	r24, r28
    219c:	82 5e       	subi	r24, 0xE2	; 226
    219e:	9c 4f       	sbci	r25, 0xFC	; 252
    21a0:	28 e0       	ldi	r18, 0x08	; 8
    21a2:	fc 01       	movw	r30, r24
    21a4:	df 01       	movw	r26, r30
    21a6:	82 2f       	mov	r24, r18
    21a8:	1d 92       	st	X+, r1
    21aa:	8a 95       	dec	r24
    21ac:	e9 f7       	brne	.-6      	; 0x21a8 <main+0x738>
    21ae:	fe 01       	movw	r30, r28
    21b0:	e2 5e       	subi	r30, 0xE2	; 226
    21b2:	fc 4f       	sbci	r31, 0xFC	; 252
    21b4:	8e e0       	ldi	r24, 0x0E	; 14
    21b6:	80 83       	st	Z, r24
    21b8:	fe 01       	movw	r30, r28
    21ba:	e2 5e       	subi	r30, 0xE2	; 226
    21bc:	fc 4f       	sbci	r31, 0xFC	; 252
    21be:	8e e0       	ldi	r24, 0x0E	; 14
    21c0:	81 83       	std	Z+1, r24	; 0x01
    21c2:	fe 01       	movw	r30, r28
    21c4:	e2 5e       	subi	r30, 0xE2	; 226
    21c6:	fc 4f       	sbci	r31, 0xFC	; 252
    21c8:	85 e0       	ldi	r24, 0x05	; 5
    21ca:	82 83       	std	Z+2, r24	; 0x02
    21cc:	fe 01       	movw	r30, r28
    21ce:	e2 5e       	subi	r30, 0xE2	; 226
    21d0:	fc 4f       	sbci	r31, 0xFC	; 252
    21d2:	8f e1       	ldi	r24, 0x1F	; 31
    21d4:	83 83       	std	Z+3, r24	; 0x03
    21d6:	fe 01       	movw	r30, r28
    21d8:	e2 5e       	subi	r30, 0xE2	; 226
    21da:	fc 4f       	sbci	r31, 0xFC	; 252
    21dc:	84 e0       	ldi	r24, 0x04	; 4
    21de:	84 83       	std	Z+4, r24	; 0x04
    21e0:	fe 01       	movw	r30, r28
    21e2:	e2 5e       	subi	r30, 0xE2	; 226
    21e4:	fc 4f       	sbci	r31, 0xFC	; 252
    21e6:	8f e1       	ldi	r24, 0x1F	; 31
    21e8:	85 83       	std	Z+5, r24	; 0x05
    21ea:	fe 01       	movw	r30, r28
    21ec:	e2 5e       	subi	r30, 0xE2	; 226
    21ee:	fc 4f       	sbci	r31, 0xFC	; 252
    21f0:	81 e0       	ldi	r24, 0x01	; 1
    21f2:	86 83       	std	Z+6, r24	; 0x06
			0b00000000,
			0b00001110,
			0b00001110,
			0b00001110,
			0b00011111,
			0b00011111};
    21f4:	ce 01       	movw	r24, r28
    21f6:	8a 5d       	subi	r24, 0xDA	; 218
    21f8:	9c 4f       	sbci	r25, 0xFC	; 252
    21fa:	28 e0       	ldi	r18, 0x08	; 8
    21fc:	fc 01       	movw	r30, r24
    21fe:	df 01       	movw	r26, r30
    2200:	82 2f       	mov	r24, r18
    2202:	1d 92       	st	X+, r1
    2204:	8a 95       	dec	r24
    2206:	e9 f7       	brne	.-6      	; 0x2202 <main+0x792>
    2208:	fe 01       	movw	r30, r28
    220a:	ea 5d       	subi	r30, 0xDA	; 218
    220c:	fc 4f       	sbci	r31, 0xFC	; 252
    220e:	8e e0       	ldi	r24, 0x0E	; 14
    2210:	82 83       	std	Z+2, r24	; 0x02
    2212:	fe 01       	movw	r30, r28
    2214:	ea 5d       	subi	r30, 0xDA	; 218
    2216:	fc 4f       	sbci	r31, 0xFC	; 252
    2218:	8e e0       	ldi	r24, 0x0E	; 14
    221a:	83 83       	std	Z+3, r24	; 0x03
    221c:	fe 01       	movw	r30, r28
    221e:	ea 5d       	subi	r30, 0xDA	; 218
    2220:	fc 4f       	sbci	r31, 0xFC	; 252
    2222:	8e e0       	ldi	r24, 0x0E	; 14
    2224:	84 83       	std	Z+4, r24	; 0x04
    2226:	fe 01       	movw	r30, r28
    2228:	ea 5d       	subi	r30, 0xDA	; 218
    222a:	fc 4f       	sbci	r31, 0xFC	; 252
    222c:	8f e1       	ldi	r24, 0x1F	; 31
    222e:	85 83       	std	Z+5, r24	; 0x05
    2230:	fe 01       	movw	r30, r28
    2232:	ea 5d       	subi	r30, 0xDA	; 218
    2234:	fc 4f       	sbci	r31, 0xFC	; 252
    2236:	8f e1       	ldi	r24, 0x1F	; 31
    2238:	86 83       	std	Z+6, r24	; 0x06
			0b00011111,
			0b00011010,
			0b00011010,
			0b00011000,
			0b00011000,
			0b00011000};
    223a:	ce 01       	movw	r24, r28
    223c:	82 5d       	subi	r24, 0xD2	; 210
    223e:	9c 4f       	sbci	r25, 0xFC	; 252
    2240:	28 e0       	ldi	r18, 0x08	; 8
    2242:	fc 01       	movw	r30, r24
    2244:	df 01       	movw	r26, r30
    2246:	82 2f       	mov	r24, r18
    2248:	1d 92       	st	X+, r1
    224a:	8a 95       	dec	r24
    224c:	e9 f7       	brne	.-6      	; 0x2248 <main+0x7d8>
    224e:	fe 01       	movw	r30, r28
    2250:	e2 5d       	subi	r30, 0xD2	; 210
    2252:	fc 4f       	sbci	r31, 0xFC	; 252
    2254:	8f e1       	ldi	r24, 0x1F	; 31
    2256:	80 83       	st	Z, r24
    2258:	fe 01       	movw	r30, r28
    225a:	e2 5d       	subi	r30, 0xD2	; 210
    225c:	fc 4f       	sbci	r31, 0xFC	; 252
    225e:	8f e1       	ldi	r24, 0x1F	; 31
    2260:	81 83       	std	Z+1, r24	; 0x01
    2262:	fe 01       	movw	r30, r28
    2264:	e2 5d       	subi	r30, 0xD2	; 210
    2266:	fc 4f       	sbci	r31, 0xFC	; 252
    2268:	8a e1       	ldi	r24, 0x1A	; 26
    226a:	82 83       	std	Z+2, r24	; 0x02
    226c:	fe 01       	movw	r30, r28
    226e:	e2 5d       	subi	r30, 0xD2	; 210
    2270:	fc 4f       	sbci	r31, 0xFC	; 252
    2272:	8a e1       	ldi	r24, 0x1A	; 26
    2274:	83 83       	std	Z+3, r24	; 0x03
    2276:	fe 01       	movw	r30, r28
    2278:	e2 5d       	subi	r30, 0xD2	; 210
    227a:	fc 4f       	sbci	r31, 0xFC	; 252
    227c:	88 e1       	ldi	r24, 0x18	; 24
    227e:	84 83       	std	Z+4, r24	; 0x04
    2280:	fe 01       	movw	r30, r28
    2282:	e2 5d       	subi	r30, 0xD2	; 210
    2284:	fc 4f       	sbci	r31, 0xFC	; 252
    2286:	88 e1       	ldi	r24, 0x18	; 24
    2288:	85 83       	std	Z+5, r24	; 0x05
    228a:	fe 01       	movw	r30, r28
    228c:	e2 5d       	subi	r30, 0xD2	; 210
    228e:	fc 4f       	sbci	r31, 0xFC	; 252
    2290:	88 e1       	ldi	r24, 0x18	; 24
    2292:	86 83       	std	Z+6, r24	; 0x06
			0b00000000,
			0b00000011,
			0b00011111,
			0b00000011,
			0b00000000,
			0b00000000};
    2294:	ce 01       	movw	r24, r28
    2296:	8a 5c       	subi	r24, 0xCA	; 202
    2298:	9c 4f       	sbci	r25, 0xFC	; 252
    229a:	28 e0       	ldi	r18, 0x08	; 8
    229c:	fc 01       	movw	r30, r24
    229e:	df 01       	movw	r26, r30
    22a0:	82 2f       	mov	r24, r18
    22a2:	1d 92       	st	X+, r1
    22a4:	8a 95       	dec	r24
    22a6:	e9 f7       	brne	.-6      	; 0x22a2 <main+0x832>
    22a8:	fe 01       	movw	r30, r28
    22aa:	ea 5c       	subi	r30, 0xCA	; 202
    22ac:	fc 4f       	sbci	r31, 0xFC	; 252
    22ae:	83 e0       	ldi	r24, 0x03	; 3
    22b0:	82 83       	std	Z+2, r24	; 0x02
    22b2:	fe 01       	movw	r30, r28
    22b4:	ea 5c       	subi	r30, 0xCA	; 202
    22b6:	fc 4f       	sbci	r31, 0xFC	; 252
    22b8:	8f e1       	ldi	r24, 0x1F	; 31
    22ba:	83 83       	std	Z+3, r24	; 0x03
    22bc:	fe 01       	movw	r30, r28
    22be:	ea 5c       	subi	r30, 0xCA	; 202
    22c0:	fc 4f       	sbci	r31, 0xFC	; 252
    22c2:	83 e0       	ldi	r24, 0x03	; 3
    22c4:	84 83       	std	Z+4, r24	; 0x04
			0b00001111,
			0b00000110,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00010001};
    22c6:	ce 01       	movw	r24, r28
    22c8:	82 5c       	subi	r24, 0xC2	; 194
    22ca:	9c 4f       	sbci	r25, 0xFC	; 252
    22cc:	28 e0       	ldi	r18, 0x08	; 8
    22ce:	fc 01       	movw	r30, r24
    22d0:	df 01       	movw	r26, r30
    22d2:	82 2f       	mov	r24, r18
    22d4:	1d 92       	st	X+, r1
    22d6:	8a 95       	dec	r24
    22d8:	e9 f7       	brne	.-6      	; 0x22d4 <main+0x864>
    22da:	fe 01       	movw	r30, r28
    22dc:	e2 5c       	subi	r30, 0xC2	; 194
    22de:	fc 4f       	sbci	r31, 0xFC	; 252
    22e0:	8f e1       	ldi	r24, 0x1F	; 31
    22e2:	80 83       	st	Z, r24
    22e4:	fe 01       	movw	r30, r28
    22e6:	e2 5c       	subi	r30, 0xC2	; 194
    22e8:	fc 4f       	sbci	r31, 0xFC	; 252
    22ea:	8f e0       	ldi	r24, 0x0F	; 15
    22ec:	81 83       	std	Z+1, r24	; 0x01
    22ee:	fe 01       	movw	r30, r28
    22f0:	e2 5c       	subi	r30, 0xC2	; 194
    22f2:	fc 4f       	sbci	r31, 0xFC	; 252
    22f4:	86 e0       	ldi	r24, 0x06	; 6
    22f6:	82 83       	std	Z+2, r24	; 0x02
    22f8:	fe 01       	movw	r30, r28
    22fa:	e2 5c       	subi	r30, 0xC2	; 194
    22fc:	fc 4f       	sbci	r31, 0xFC	; 252
    22fe:	8f e1       	ldi	r24, 0x1F	; 31
    2300:	83 83       	std	Z+3, r24	; 0x03
    2302:	fe 01       	movw	r30, r28
    2304:	e2 5c       	subi	r30, 0xC2	; 194
    2306:	fc 4f       	sbci	r31, 0xFC	; 252
    2308:	84 e0       	ldi	r24, 0x04	; 4
    230a:	84 83       	std	Z+4, r24	; 0x04
    230c:	fe 01       	movw	r30, r28
    230e:	e2 5c       	subi	r30, 0xC2	; 194
    2310:	fc 4f       	sbci	r31, 0xFC	; 252
    2312:	8f e1       	ldi	r24, 0x1F	; 31
    2314:	85 83       	std	Z+5, r24	; 0x05
    2316:	fe 01       	movw	r30, r28
    2318:	e2 5c       	subi	r30, 0xC2	; 194
    231a:	fc 4f       	sbci	r31, 0xFC	; 252
    231c:	81 e1       	ldi	r24, 0x11	; 17
    231e:	86 83       	std	Z+6, r24	; 0x06
				0b00010110,
				0b00001111,
				0b00011110,
				0b00010001,
				0b00001000,
				0b00001000};
    2320:	ce 01       	movw	r24, r28
    2322:	8a 5b       	subi	r24, 0xBA	; 186
    2324:	9c 4f       	sbci	r25, 0xFC	; 252
    2326:	28 e0       	ldi	r18, 0x08	; 8
    2328:	fc 01       	movw	r30, r24
    232a:	df 01       	movw	r26, r30
    232c:	82 2f       	mov	r24, r18
    232e:	1d 92       	st	X+, r1
    2330:	8a 95       	dec	r24
    2332:	e9 f7       	brne	.-6      	; 0x232e <main+0x8be>
    2334:	fe 01       	movw	r30, r28
    2336:	ea 5b       	subi	r30, 0xBA	; 186
    2338:	fc 4f       	sbci	r31, 0xFC	; 252
    233a:	84 e0       	ldi	r24, 0x04	; 4
    233c:	80 83       	st	Z, r24
    233e:	fe 01       	movw	r30, r28
    2340:	ea 5b       	subi	r30, 0xBA	; 186
    2342:	fc 4f       	sbci	r31, 0xFC	; 252
    2344:	86 e1       	ldi	r24, 0x16	; 22
    2346:	81 83       	std	Z+1, r24	; 0x01
    2348:	fe 01       	movw	r30, r28
    234a:	ea 5b       	subi	r30, 0xBA	; 186
    234c:	fc 4f       	sbci	r31, 0xFC	; 252
    234e:	8f e0       	ldi	r24, 0x0F	; 15
    2350:	82 83       	std	Z+2, r24	; 0x02
    2352:	fe 01       	movw	r30, r28
    2354:	ea 5b       	subi	r30, 0xBA	; 186
    2356:	fc 4f       	sbci	r31, 0xFC	; 252
    2358:	8e e1       	ldi	r24, 0x1E	; 30
    235a:	83 83       	std	Z+3, r24	; 0x03
    235c:	fe 01       	movw	r30, r28
    235e:	ea 5b       	subi	r30, 0xBA	; 186
    2360:	fc 4f       	sbci	r31, 0xFC	; 252
    2362:	81 e1       	ldi	r24, 0x11	; 17
    2364:	84 83       	std	Z+4, r24	; 0x04
    2366:	fe 01       	movw	r30, r28
    2368:	ea 5b       	subi	r30, 0xBA	; 186
    236a:	fc 4f       	sbci	r31, 0xFC	; 252
    236c:	88 e0       	ldi	r24, 0x08	; 8
    236e:	85 83       	std	Z+5, r24	; 0x05
    2370:	fe 01       	movw	r30, r28
    2372:	ea 5b       	subi	r30, 0xBA	; 186
    2374:	fc 4f       	sbci	r31, 0xFC	; 252
    2376:	88 e0       	ldi	r24, 0x08	; 8
    2378:	86 83       	std	Z+6, r24	; 0x06

	u8 Local_u8Iterator;

	while(1)
	{
		CLCD_u8WriteSpecialCharacter(Pattern,0,0,3);
    237a:	ce 01       	movw	r24, r28
    237c:	82 51       	subi	r24, 0x12	; 18
    237e:	9d 4f       	sbci	r25, 0xFD	; 253
    2380:	60 e0       	ldi	r22, 0x00	; 0
    2382:	40 e0       	ldi	r20, 0x00	; 0
    2384:	23 e0       	ldi	r18, 0x03	; 3
    2386:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    238a:	fe 01       	movw	r30, r28
    238c:	e1 57       	subi	r30, 0x71	; 113
    238e:	fd 4f       	sbci	r31, 0xFD	; 253
    2390:	80 e0       	ldi	r24, 0x00	; 0
    2392:	90 e0       	ldi	r25, 0x00	; 0
    2394:	a0 e2       	ldi	r26, 0x20	; 32
    2396:	b1 e4       	ldi	r27, 0x41	; 65
    2398:	80 83       	st	Z, r24
    239a:	91 83       	std	Z+1, r25	; 0x01
    239c:	a2 83       	std	Z+2, r26	; 0x02
    239e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23a0:	8e 01       	movw	r16, r28
    23a2:	05 57       	subi	r16, 0x75	; 117
    23a4:	1d 4f       	sbci	r17, 0xFD	; 253
    23a6:	fe 01       	movw	r30, r28
    23a8:	e1 57       	subi	r30, 0x71	; 113
    23aa:	fd 4f       	sbci	r31, 0xFD	; 253
    23ac:	60 81       	ld	r22, Z
    23ae:	71 81       	ldd	r23, Z+1	; 0x01
    23b0:	82 81       	ldd	r24, Z+2	; 0x02
    23b2:	93 81       	ldd	r25, Z+3	; 0x03
    23b4:	20 e0       	ldi	r18, 0x00	; 0
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	4a ef       	ldi	r20, 0xFA	; 250
    23ba:	54 e4       	ldi	r21, 0x44	; 68
    23bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23c0:	dc 01       	movw	r26, r24
    23c2:	cb 01       	movw	r24, r22
    23c4:	f8 01       	movw	r30, r16
    23c6:	80 83       	st	Z, r24
    23c8:	91 83       	std	Z+1, r25	; 0x01
    23ca:	a2 83       	std	Z+2, r26	; 0x02
    23cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23ce:	fe 01       	movw	r30, r28
    23d0:	e5 57       	subi	r30, 0x75	; 117
    23d2:	fd 4f       	sbci	r31, 0xFD	; 253
    23d4:	60 81       	ld	r22, Z
    23d6:	71 81       	ldd	r23, Z+1	; 0x01
    23d8:	82 81       	ldd	r24, Z+2	; 0x02
    23da:	93 81       	ldd	r25, Z+3	; 0x03
    23dc:	20 e0       	ldi	r18, 0x00	; 0
    23de:	30 e0       	ldi	r19, 0x00	; 0
    23e0:	40 e8       	ldi	r20, 0x80	; 128
    23e2:	5f e3       	ldi	r21, 0x3F	; 63
    23e4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23e8:	88 23       	and	r24, r24
    23ea:	44 f4       	brge	.+16     	; 0x23fc <main+0x98c>
		__ticks = 1;
    23ec:	fe 01       	movw	r30, r28
    23ee:	e7 57       	subi	r30, 0x77	; 119
    23f0:	fd 4f       	sbci	r31, 0xFD	; 253
    23f2:	81 e0       	ldi	r24, 0x01	; 1
    23f4:	90 e0       	ldi	r25, 0x00	; 0
    23f6:	91 83       	std	Z+1, r25	; 0x01
    23f8:	80 83       	st	Z, r24
    23fa:	64 c0       	rjmp	.+200    	; 0x24c4 <main+0xa54>
	else if (__tmp > 65535)
    23fc:	fe 01       	movw	r30, r28
    23fe:	e5 57       	subi	r30, 0x75	; 117
    2400:	fd 4f       	sbci	r31, 0xFD	; 253
    2402:	60 81       	ld	r22, Z
    2404:	71 81       	ldd	r23, Z+1	; 0x01
    2406:	82 81       	ldd	r24, Z+2	; 0x02
    2408:	93 81       	ldd	r25, Z+3	; 0x03
    240a:	20 e0       	ldi	r18, 0x00	; 0
    240c:	3f ef       	ldi	r19, 0xFF	; 255
    240e:	4f e7       	ldi	r20, 0x7F	; 127
    2410:	57 e4       	ldi	r21, 0x47	; 71
    2412:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2416:	18 16       	cp	r1, r24
    2418:	0c f0       	brlt	.+2      	; 0x241c <main+0x9ac>
    241a:	43 c0       	rjmp	.+134    	; 0x24a2 <main+0xa32>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    241c:	fe 01       	movw	r30, r28
    241e:	e1 57       	subi	r30, 0x71	; 113
    2420:	fd 4f       	sbci	r31, 0xFD	; 253
    2422:	60 81       	ld	r22, Z
    2424:	71 81       	ldd	r23, Z+1	; 0x01
    2426:	82 81       	ldd	r24, Z+2	; 0x02
    2428:	93 81       	ldd	r25, Z+3	; 0x03
    242a:	20 e0       	ldi	r18, 0x00	; 0
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	40 e2       	ldi	r20, 0x20	; 32
    2430:	51 e4       	ldi	r21, 0x41	; 65
    2432:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2436:	dc 01       	movw	r26, r24
    2438:	cb 01       	movw	r24, r22
    243a:	8e 01       	movw	r16, r28
    243c:	07 57       	subi	r16, 0x77	; 119
    243e:	1d 4f       	sbci	r17, 0xFD	; 253
    2440:	bc 01       	movw	r22, r24
    2442:	cd 01       	movw	r24, r26
    2444:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2448:	dc 01       	movw	r26, r24
    244a:	cb 01       	movw	r24, r22
    244c:	f8 01       	movw	r30, r16
    244e:	91 83       	std	Z+1, r25	; 0x01
    2450:	80 83       	st	Z, r24
    2452:	1f c0       	rjmp	.+62     	; 0x2492 <main+0xa22>
    2454:	fe 01       	movw	r30, r28
    2456:	e9 57       	subi	r30, 0x79	; 121
    2458:	fd 4f       	sbci	r31, 0xFD	; 253
    245a:	88 ec       	ldi	r24, 0xC8	; 200
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	91 83       	std	Z+1, r25	; 0x01
    2460:	80 83       	st	Z, r24
    2462:	fe 01       	movw	r30, r28
    2464:	e9 57       	subi	r30, 0x79	; 121
    2466:	fd 4f       	sbci	r31, 0xFD	; 253
    2468:	80 81       	ld	r24, Z
    246a:	91 81       	ldd	r25, Z+1	; 0x01
    246c:	01 97       	sbiw	r24, 0x01	; 1
    246e:	f1 f7       	brne	.-4      	; 0x246c <main+0x9fc>
    2470:	fe 01       	movw	r30, r28
    2472:	e9 57       	subi	r30, 0x79	; 121
    2474:	fd 4f       	sbci	r31, 0xFD	; 253
    2476:	91 83       	std	Z+1, r25	; 0x01
    2478:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    247a:	de 01       	movw	r26, r28
    247c:	a7 57       	subi	r26, 0x77	; 119
    247e:	bd 4f       	sbci	r27, 0xFD	; 253
    2480:	fe 01       	movw	r30, r28
    2482:	e7 57       	subi	r30, 0x77	; 119
    2484:	fd 4f       	sbci	r31, 0xFD	; 253
    2486:	80 81       	ld	r24, Z
    2488:	91 81       	ldd	r25, Z+1	; 0x01
    248a:	01 97       	sbiw	r24, 0x01	; 1
    248c:	11 96       	adiw	r26, 0x01	; 1
    248e:	9c 93       	st	X, r25
    2490:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2492:	fe 01       	movw	r30, r28
    2494:	e7 57       	subi	r30, 0x77	; 119
    2496:	fd 4f       	sbci	r31, 0xFD	; 253
    2498:	80 81       	ld	r24, Z
    249a:	91 81       	ldd	r25, Z+1	; 0x01
    249c:	00 97       	sbiw	r24, 0x00	; 0
    249e:	d1 f6       	brne	.-76     	; 0x2454 <main+0x9e4>
    24a0:	27 c0       	rjmp	.+78     	; 0x24f0 <main+0xa80>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24a2:	8e 01       	movw	r16, r28
    24a4:	07 57       	subi	r16, 0x77	; 119
    24a6:	1d 4f       	sbci	r17, 0xFD	; 253
    24a8:	fe 01       	movw	r30, r28
    24aa:	e5 57       	subi	r30, 0x75	; 117
    24ac:	fd 4f       	sbci	r31, 0xFD	; 253
    24ae:	60 81       	ld	r22, Z
    24b0:	71 81       	ldd	r23, Z+1	; 0x01
    24b2:	82 81       	ldd	r24, Z+2	; 0x02
    24b4:	93 81       	ldd	r25, Z+3	; 0x03
    24b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24ba:	dc 01       	movw	r26, r24
    24bc:	cb 01       	movw	r24, r22
    24be:	f8 01       	movw	r30, r16
    24c0:	91 83       	std	Z+1, r25	; 0x01
    24c2:	80 83       	st	Z, r24
    24c4:	de 01       	movw	r26, r28
    24c6:	ab 57       	subi	r26, 0x7B	; 123
    24c8:	bd 4f       	sbci	r27, 0xFD	; 253
    24ca:	fe 01       	movw	r30, r28
    24cc:	e7 57       	subi	r30, 0x77	; 119
    24ce:	fd 4f       	sbci	r31, 0xFD	; 253
    24d0:	80 81       	ld	r24, Z
    24d2:	91 81       	ldd	r25, Z+1	; 0x01
    24d4:	8d 93       	st	X+, r24
    24d6:	9c 93       	st	X, r25
    24d8:	fe 01       	movw	r30, r28
    24da:	eb 57       	subi	r30, 0x7B	; 123
    24dc:	fd 4f       	sbci	r31, 0xFD	; 253
    24de:	80 81       	ld	r24, Z
    24e0:	91 81       	ldd	r25, Z+1	; 0x01
    24e2:	01 97       	sbiw	r24, 0x01	; 1
    24e4:	f1 f7       	brne	.-4      	; 0x24e2 <main+0xa72>
    24e6:	fe 01       	movw	r30, r28
    24e8:	eb 57       	subi	r30, 0x7B	; 123
    24ea:	fd 4f       	sbci	r31, 0xFD	; 253
    24ec:	91 83       	std	Z+1, r25	; 0x01
    24ee:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8GoToXY(0,7);
    24f0:	80 e0       	ldi	r24, 0x00	; 0
    24f2:	67 e0       	ldi	r22, 0x07	; 7
    24f4:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(Hello);
    24f8:	ce 01       	movw	r24, r28
    24fa:	8c 56       	subi	r24, 0x6C	; 108
    24fc:	9d 4f       	sbci	r25, 0xFD	; 253
    24fe:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8GoToXY(1,5);
    2502:	81 e0       	ldi	r24, 0x01	; 1
    2504:	65 e0       	ldi	r22, 0x05	; 5
    2506:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(statement1);
    250a:	ce 01       	movw	r24, r28
    250c:	86 56       	subi	r24, 0x66	; 102
    250e:	9d 4f       	sbci	r25, 0xFD	; 253
    2510:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8GoToXY(1,9);
    2514:	81 e0       	ldi	r24, 0x01	; 1
    2516:	69 e0       	ldi	r22, 0x09	; 9
    2518:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(statement2);
    251c:	ce 01       	movw	r24, r28
    251e:	82 56       	subi	r24, 0x62	; 98
    2520:	9d 4f       	sbci	r25, 0xFD	; 253
    2522:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
    2526:	fe 01       	movw	r30, r28
    2528:	ef 57       	subi	r30, 0x7F	; 127
    252a:	fd 4f       	sbci	r31, 0xFD	; 253
    252c:	80 e0       	ldi	r24, 0x00	; 0
    252e:	90 e0       	ldi	r25, 0x00	; 0
    2530:	a8 e4       	ldi	r26, 0x48	; 72
    2532:	b3 e4       	ldi	r27, 0x43	; 67
    2534:	80 83       	st	Z, r24
    2536:	91 83       	std	Z+1, r25	; 0x01
    2538:	a2 83       	std	Z+2, r26	; 0x02
    253a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    253c:	8e 01       	movw	r16, r28
    253e:	03 58       	subi	r16, 0x83	; 131
    2540:	1d 4f       	sbci	r17, 0xFD	; 253
    2542:	fe 01       	movw	r30, r28
    2544:	ef 57       	subi	r30, 0x7F	; 127
    2546:	fd 4f       	sbci	r31, 0xFD	; 253
    2548:	60 81       	ld	r22, Z
    254a:	71 81       	ldd	r23, Z+1	; 0x01
    254c:	82 81       	ldd	r24, Z+2	; 0x02
    254e:	93 81       	ldd	r25, Z+3	; 0x03
    2550:	20 e0       	ldi	r18, 0x00	; 0
    2552:	30 e0       	ldi	r19, 0x00	; 0
    2554:	4a ef       	ldi	r20, 0xFA	; 250
    2556:	54 e4       	ldi	r21, 0x44	; 68
    2558:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    255c:	dc 01       	movw	r26, r24
    255e:	cb 01       	movw	r24, r22
    2560:	f8 01       	movw	r30, r16
    2562:	80 83       	st	Z, r24
    2564:	91 83       	std	Z+1, r25	; 0x01
    2566:	a2 83       	std	Z+2, r26	; 0x02
    2568:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    256a:	fe 01       	movw	r30, r28
    256c:	e3 58       	subi	r30, 0x83	; 131
    256e:	fd 4f       	sbci	r31, 0xFD	; 253
    2570:	60 81       	ld	r22, Z
    2572:	71 81       	ldd	r23, Z+1	; 0x01
    2574:	82 81       	ldd	r24, Z+2	; 0x02
    2576:	93 81       	ldd	r25, Z+3	; 0x03
    2578:	20 e0       	ldi	r18, 0x00	; 0
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	40 e8       	ldi	r20, 0x80	; 128
    257e:	5f e3       	ldi	r21, 0x3F	; 63
    2580:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2584:	88 23       	and	r24, r24
    2586:	44 f4       	brge	.+16     	; 0x2598 <main+0xb28>
		__ticks = 1;
    2588:	fe 01       	movw	r30, r28
    258a:	e5 58       	subi	r30, 0x85	; 133
    258c:	fd 4f       	sbci	r31, 0xFD	; 253
    258e:	81 e0       	ldi	r24, 0x01	; 1
    2590:	90 e0       	ldi	r25, 0x00	; 0
    2592:	91 83       	std	Z+1, r25	; 0x01
    2594:	80 83       	st	Z, r24
    2596:	64 c0       	rjmp	.+200    	; 0x2660 <main+0xbf0>
	else if (__tmp > 65535)
    2598:	fe 01       	movw	r30, r28
    259a:	e3 58       	subi	r30, 0x83	; 131
    259c:	fd 4f       	sbci	r31, 0xFD	; 253
    259e:	60 81       	ld	r22, Z
    25a0:	71 81       	ldd	r23, Z+1	; 0x01
    25a2:	82 81       	ldd	r24, Z+2	; 0x02
    25a4:	93 81       	ldd	r25, Z+3	; 0x03
    25a6:	20 e0       	ldi	r18, 0x00	; 0
    25a8:	3f ef       	ldi	r19, 0xFF	; 255
    25aa:	4f e7       	ldi	r20, 0x7F	; 127
    25ac:	57 e4       	ldi	r21, 0x47	; 71
    25ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25b2:	18 16       	cp	r1, r24
    25b4:	0c f0       	brlt	.+2      	; 0x25b8 <main+0xb48>
    25b6:	43 c0       	rjmp	.+134    	; 0x263e <main+0xbce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25b8:	fe 01       	movw	r30, r28
    25ba:	ef 57       	subi	r30, 0x7F	; 127
    25bc:	fd 4f       	sbci	r31, 0xFD	; 253
    25be:	60 81       	ld	r22, Z
    25c0:	71 81       	ldd	r23, Z+1	; 0x01
    25c2:	82 81       	ldd	r24, Z+2	; 0x02
    25c4:	93 81       	ldd	r25, Z+3	; 0x03
    25c6:	20 e0       	ldi	r18, 0x00	; 0
    25c8:	30 e0       	ldi	r19, 0x00	; 0
    25ca:	40 e2       	ldi	r20, 0x20	; 32
    25cc:	51 e4       	ldi	r21, 0x41	; 65
    25ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25d2:	dc 01       	movw	r26, r24
    25d4:	cb 01       	movw	r24, r22
    25d6:	8e 01       	movw	r16, r28
    25d8:	05 58       	subi	r16, 0x85	; 133
    25da:	1d 4f       	sbci	r17, 0xFD	; 253
    25dc:	bc 01       	movw	r22, r24
    25de:	cd 01       	movw	r24, r26
    25e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25e4:	dc 01       	movw	r26, r24
    25e6:	cb 01       	movw	r24, r22
    25e8:	f8 01       	movw	r30, r16
    25ea:	91 83       	std	Z+1, r25	; 0x01
    25ec:	80 83       	st	Z, r24
    25ee:	1f c0       	rjmp	.+62     	; 0x262e <main+0xbbe>
    25f0:	fe 01       	movw	r30, r28
    25f2:	e7 58       	subi	r30, 0x87	; 135
    25f4:	fd 4f       	sbci	r31, 0xFD	; 253
    25f6:	88 ec       	ldi	r24, 0xC8	; 200
    25f8:	90 e0       	ldi	r25, 0x00	; 0
    25fa:	91 83       	std	Z+1, r25	; 0x01
    25fc:	80 83       	st	Z, r24
    25fe:	fe 01       	movw	r30, r28
    2600:	e7 58       	subi	r30, 0x87	; 135
    2602:	fd 4f       	sbci	r31, 0xFD	; 253
    2604:	80 81       	ld	r24, Z
    2606:	91 81       	ldd	r25, Z+1	; 0x01
    2608:	01 97       	sbiw	r24, 0x01	; 1
    260a:	f1 f7       	brne	.-4      	; 0x2608 <main+0xb98>
    260c:	fe 01       	movw	r30, r28
    260e:	e7 58       	subi	r30, 0x87	; 135
    2610:	fd 4f       	sbci	r31, 0xFD	; 253
    2612:	91 83       	std	Z+1, r25	; 0x01
    2614:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2616:	de 01       	movw	r26, r28
    2618:	a5 58       	subi	r26, 0x85	; 133
    261a:	bd 4f       	sbci	r27, 0xFD	; 253
    261c:	fe 01       	movw	r30, r28
    261e:	e5 58       	subi	r30, 0x85	; 133
    2620:	fd 4f       	sbci	r31, 0xFD	; 253
    2622:	80 81       	ld	r24, Z
    2624:	91 81       	ldd	r25, Z+1	; 0x01
    2626:	01 97       	sbiw	r24, 0x01	; 1
    2628:	11 96       	adiw	r26, 0x01	; 1
    262a:	9c 93       	st	X, r25
    262c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    262e:	fe 01       	movw	r30, r28
    2630:	e5 58       	subi	r30, 0x85	; 133
    2632:	fd 4f       	sbci	r31, 0xFD	; 253
    2634:	80 81       	ld	r24, Z
    2636:	91 81       	ldd	r25, Z+1	; 0x01
    2638:	00 97       	sbiw	r24, 0x00	; 0
    263a:	d1 f6       	brne	.-76     	; 0x25f0 <main+0xb80>
    263c:	27 c0       	rjmp	.+78     	; 0x268c <main+0xc1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    263e:	8e 01       	movw	r16, r28
    2640:	05 58       	subi	r16, 0x85	; 133
    2642:	1d 4f       	sbci	r17, 0xFD	; 253
    2644:	fe 01       	movw	r30, r28
    2646:	e3 58       	subi	r30, 0x83	; 131
    2648:	fd 4f       	sbci	r31, 0xFD	; 253
    264a:	60 81       	ld	r22, Z
    264c:	71 81       	ldd	r23, Z+1	; 0x01
    264e:	82 81       	ldd	r24, Z+2	; 0x02
    2650:	93 81       	ldd	r25, Z+3	; 0x03
    2652:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2656:	dc 01       	movw	r26, r24
    2658:	cb 01       	movw	r24, r22
    265a:	f8 01       	movw	r30, r16
    265c:	91 83       	std	Z+1, r25	; 0x01
    265e:	80 83       	st	Z, r24
    2660:	de 01       	movw	r26, r28
    2662:	a9 58       	subi	r26, 0x89	; 137
    2664:	bd 4f       	sbci	r27, 0xFD	; 253
    2666:	fe 01       	movw	r30, r28
    2668:	e5 58       	subi	r30, 0x85	; 133
    266a:	fd 4f       	sbci	r31, 0xFD	; 253
    266c:	80 81       	ld	r24, Z
    266e:	91 81       	ldd	r25, Z+1	; 0x01
    2670:	8d 93       	st	X+, r24
    2672:	9c 93       	st	X, r25
    2674:	fe 01       	movw	r30, r28
    2676:	e9 58       	subi	r30, 0x89	; 137
    2678:	fd 4f       	sbci	r31, 0xFD	; 253
    267a:	80 81       	ld	r24, Z
    267c:	91 81       	ldd	r25, Z+1	; 0x01
    267e:	01 97       	sbiw	r24, 0x01	; 1
    2680:	f1 f7       	brne	.-4      	; 0x267e <main+0xc0e>
    2682:	fe 01       	movw	r30, r28
    2684:	e9 58       	subi	r30, 0x89	; 137
    2686:	fd 4f       	sbci	r31, 0xFD	; 253
    2688:	91 83       	std	Z+1, r25	; 0x01
    268a:	80 83       	st	Z, r24

		_delay_ms(200);
		CLCD_u8SendCommand(0b00000001);
    268c:	81 e0       	ldi	r24, 0x01	; 1
    268e:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>


		CLCD_u8SendString(play);
    2692:	ce 01       	movw	r24, r28
    2694:	8c 55       	subi	r24, 0x5C	; 92
    2696:	9d 4f       	sbci	r25, 0xFD	; 253
    2698:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8GoToXY(1,0);
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	60 e0       	ldi	r22, 0x00	; 0
    26a0:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(football);
    26a4:	ce 01       	movw	r24, r28
    26a6:	80 55       	subi	r24, 0x50	; 80
    26a8:	9d 4f       	sbci	r25, 0xFD	; 253
    26aa:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8WriteSpecialCharacter(Pattern3,0,1,11);
    26ae:	ce 01       	movw	r24, r28
    26b0:	82 50       	subi	r24, 0x02	; 2
    26b2:	9d 4f       	sbci	r25, 0xFD	; 253
    26b4:	60 e0       	ldi	r22, 0x00	; 0
    26b6:	41 e0       	ldi	r20, 0x01	; 1
    26b8:	2b e0       	ldi	r18, 0x0B	; 11
    26ba:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern2,1,1,10);
    26be:	ce 01       	movw	r24, r28
    26c0:	8a 50       	subi	r24, 0x0A	; 10
    26c2:	9d 4f       	sbci	r25, 0xFD	; 253
    26c4:	61 e0       	ldi	r22, 0x01	; 1
    26c6:	41 e0       	ldi	r20, 0x01	; 1
    26c8:	2a e0       	ldi	r18, 0x0A	; 10
    26ca:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    26ce:	fe 01       	movw	r30, r28
    26d0:	ed 58       	subi	r30, 0x8D	; 141
    26d2:	fd 4f       	sbci	r31, 0xFD	; 253
    26d4:	80 e0       	ldi	r24, 0x00	; 0
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	a0 e2       	ldi	r26, 0x20	; 32
    26da:	b1 e4       	ldi	r27, 0x41	; 65
    26dc:	80 83       	st	Z, r24
    26de:	91 83       	std	Z+1, r25	; 0x01
    26e0:	a2 83       	std	Z+2, r26	; 0x02
    26e2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26e4:	8e 01       	movw	r16, r28
    26e6:	01 59       	subi	r16, 0x91	; 145
    26e8:	1d 4f       	sbci	r17, 0xFD	; 253
    26ea:	fe 01       	movw	r30, r28
    26ec:	ed 58       	subi	r30, 0x8D	; 141
    26ee:	fd 4f       	sbci	r31, 0xFD	; 253
    26f0:	60 81       	ld	r22, Z
    26f2:	71 81       	ldd	r23, Z+1	; 0x01
    26f4:	82 81       	ldd	r24, Z+2	; 0x02
    26f6:	93 81       	ldd	r25, Z+3	; 0x03
    26f8:	20 e0       	ldi	r18, 0x00	; 0
    26fa:	30 e0       	ldi	r19, 0x00	; 0
    26fc:	4a ef       	ldi	r20, 0xFA	; 250
    26fe:	54 e4       	ldi	r21, 0x44	; 68
    2700:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2704:	dc 01       	movw	r26, r24
    2706:	cb 01       	movw	r24, r22
    2708:	f8 01       	movw	r30, r16
    270a:	80 83       	st	Z, r24
    270c:	91 83       	std	Z+1, r25	; 0x01
    270e:	a2 83       	std	Z+2, r26	; 0x02
    2710:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2712:	fe 01       	movw	r30, r28
    2714:	e1 59       	subi	r30, 0x91	; 145
    2716:	fd 4f       	sbci	r31, 0xFD	; 253
    2718:	60 81       	ld	r22, Z
    271a:	71 81       	ldd	r23, Z+1	; 0x01
    271c:	82 81       	ldd	r24, Z+2	; 0x02
    271e:	93 81       	ldd	r25, Z+3	; 0x03
    2720:	20 e0       	ldi	r18, 0x00	; 0
    2722:	30 e0       	ldi	r19, 0x00	; 0
    2724:	40 e8       	ldi	r20, 0x80	; 128
    2726:	5f e3       	ldi	r21, 0x3F	; 63
    2728:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    272c:	88 23       	and	r24, r24
    272e:	44 f4       	brge	.+16     	; 0x2740 <main+0xcd0>
		__ticks = 1;
    2730:	fe 01       	movw	r30, r28
    2732:	e3 59       	subi	r30, 0x93	; 147
    2734:	fd 4f       	sbci	r31, 0xFD	; 253
    2736:	81 e0       	ldi	r24, 0x01	; 1
    2738:	90 e0       	ldi	r25, 0x00	; 0
    273a:	91 83       	std	Z+1, r25	; 0x01
    273c:	80 83       	st	Z, r24
    273e:	64 c0       	rjmp	.+200    	; 0x2808 <main+0xd98>
	else if (__tmp > 65535)
    2740:	fe 01       	movw	r30, r28
    2742:	e1 59       	subi	r30, 0x91	; 145
    2744:	fd 4f       	sbci	r31, 0xFD	; 253
    2746:	60 81       	ld	r22, Z
    2748:	71 81       	ldd	r23, Z+1	; 0x01
    274a:	82 81       	ldd	r24, Z+2	; 0x02
    274c:	93 81       	ldd	r25, Z+3	; 0x03
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	3f ef       	ldi	r19, 0xFF	; 255
    2752:	4f e7       	ldi	r20, 0x7F	; 127
    2754:	57 e4       	ldi	r21, 0x47	; 71
    2756:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    275a:	18 16       	cp	r1, r24
    275c:	0c f0       	brlt	.+2      	; 0x2760 <main+0xcf0>
    275e:	43 c0       	rjmp	.+134    	; 0x27e6 <main+0xd76>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2760:	fe 01       	movw	r30, r28
    2762:	ed 58       	subi	r30, 0x8D	; 141
    2764:	fd 4f       	sbci	r31, 0xFD	; 253
    2766:	60 81       	ld	r22, Z
    2768:	71 81       	ldd	r23, Z+1	; 0x01
    276a:	82 81       	ldd	r24, Z+2	; 0x02
    276c:	93 81       	ldd	r25, Z+3	; 0x03
    276e:	20 e0       	ldi	r18, 0x00	; 0
    2770:	30 e0       	ldi	r19, 0x00	; 0
    2772:	40 e2       	ldi	r20, 0x20	; 32
    2774:	51 e4       	ldi	r21, 0x41	; 65
    2776:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    277a:	dc 01       	movw	r26, r24
    277c:	cb 01       	movw	r24, r22
    277e:	8e 01       	movw	r16, r28
    2780:	03 59       	subi	r16, 0x93	; 147
    2782:	1d 4f       	sbci	r17, 0xFD	; 253
    2784:	bc 01       	movw	r22, r24
    2786:	cd 01       	movw	r24, r26
    2788:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    278c:	dc 01       	movw	r26, r24
    278e:	cb 01       	movw	r24, r22
    2790:	f8 01       	movw	r30, r16
    2792:	91 83       	std	Z+1, r25	; 0x01
    2794:	80 83       	st	Z, r24
    2796:	1f c0       	rjmp	.+62     	; 0x27d6 <main+0xd66>
    2798:	fe 01       	movw	r30, r28
    279a:	e5 59       	subi	r30, 0x95	; 149
    279c:	fd 4f       	sbci	r31, 0xFD	; 253
    279e:	88 ec       	ldi	r24, 0xC8	; 200
    27a0:	90 e0       	ldi	r25, 0x00	; 0
    27a2:	91 83       	std	Z+1, r25	; 0x01
    27a4:	80 83       	st	Z, r24
    27a6:	fe 01       	movw	r30, r28
    27a8:	e5 59       	subi	r30, 0x95	; 149
    27aa:	fd 4f       	sbci	r31, 0xFD	; 253
    27ac:	80 81       	ld	r24, Z
    27ae:	91 81       	ldd	r25, Z+1	; 0x01
    27b0:	01 97       	sbiw	r24, 0x01	; 1
    27b2:	f1 f7       	brne	.-4      	; 0x27b0 <main+0xd40>
    27b4:	fe 01       	movw	r30, r28
    27b6:	e5 59       	subi	r30, 0x95	; 149
    27b8:	fd 4f       	sbci	r31, 0xFD	; 253
    27ba:	91 83       	std	Z+1, r25	; 0x01
    27bc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27be:	de 01       	movw	r26, r28
    27c0:	a3 59       	subi	r26, 0x93	; 147
    27c2:	bd 4f       	sbci	r27, 0xFD	; 253
    27c4:	fe 01       	movw	r30, r28
    27c6:	e3 59       	subi	r30, 0x93	; 147
    27c8:	fd 4f       	sbci	r31, 0xFD	; 253
    27ca:	80 81       	ld	r24, Z
    27cc:	91 81       	ldd	r25, Z+1	; 0x01
    27ce:	01 97       	sbiw	r24, 0x01	; 1
    27d0:	11 96       	adiw	r26, 0x01	; 1
    27d2:	9c 93       	st	X, r25
    27d4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27d6:	fe 01       	movw	r30, r28
    27d8:	e3 59       	subi	r30, 0x93	; 147
    27da:	fd 4f       	sbci	r31, 0xFD	; 253
    27dc:	80 81       	ld	r24, Z
    27de:	91 81       	ldd	r25, Z+1	; 0x01
    27e0:	00 97       	sbiw	r24, 0x00	; 0
    27e2:	d1 f6       	brne	.-76     	; 0x2798 <main+0xd28>
    27e4:	27 c0       	rjmp	.+78     	; 0x2834 <main+0xdc4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27e6:	8e 01       	movw	r16, r28
    27e8:	03 59       	subi	r16, 0x93	; 147
    27ea:	1d 4f       	sbci	r17, 0xFD	; 253
    27ec:	fe 01       	movw	r30, r28
    27ee:	e1 59       	subi	r30, 0x91	; 145
    27f0:	fd 4f       	sbci	r31, 0xFD	; 253
    27f2:	60 81       	ld	r22, Z
    27f4:	71 81       	ldd	r23, Z+1	; 0x01
    27f6:	82 81       	ldd	r24, Z+2	; 0x02
    27f8:	93 81       	ldd	r25, Z+3	; 0x03
    27fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27fe:	dc 01       	movw	r26, r24
    2800:	cb 01       	movw	r24, r22
    2802:	f8 01       	movw	r30, r16
    2804:	91 83       	std	Z+1, r25	; 0x01
    2806:	80 83       	st	Z, r24
    2808:	de 01       	movw	r26, r28
    280a:	a7 59       	subi	r26, 0x97	; 151
    280c:	bd 4f       	sbci	r27, 0xFD	; 253
    280e:	fe 01       	movw	r30, r28
    2810:	e3 59       	subi	r30, 0x93	; 147
    2812:	fd 4f       	sbci	r31, 0xFD	; 253
    2814:	80 81       	ld	r24, Z
    2816:	91 81       	ldd	r25, Z+1	; 0x01
    2818:	8d 93       	st	X+, r24
    281a:	9c 93       	st	X, r25
    281c:	fe 01       	movw	r30, r28
    281e:	e7 59       	subi	r30, 0x97	; 151
    2820:	fd 4f       	sbci	r31, 0xFD	; 253
    2822:	80 81       	ld	r24, Z
    2824:	91 81       	ldd	r25, Z+1	; 0x01
    2826:	01 97       	sbiw	r24, 0x01	; 1
    2828:	f1 f7       	brne	.-4      	; 0x2826 <main+0xdb6>
    282a:	fe 01       	movw	r30, r28
    282c:	e7 59       	subi	r30, 0x97	; 151
    282e:	fd 4f       	sbci	r31, 0xFD	; 253
    2830:	91 83       	std	Z+1, r25	; 0x01
    2832:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8WriteSpecialCharacter(Pattern4,3,1,11);
    2834:	ce 01       	movw	r24, r28
    2836:	8a 5f       	subi	r24, 0xFA	; 250
    2838:	9c 4f       	sbci	r25, 0xFC	; 252
    283a:	63 e0       	ldi	r22, 0x03	; 3
    283c:	41 e0       	ldi	r20, 0x01	; 1
    283e:	2b e0       	ldi	r18, 0x0B	; 11
    2840:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
    2844:	ce 01       	movw	r24, r28
    2846:	82 51       	subi	r24, 0x12	; 18
    2848:	9d 4f       	sbci	r25, 0xFD	; 253
    284a:	62 e0       	ldi	r22, 0x02	; 2
    284c:	41 e0       	ldi	r20, 0x01	; 1
    284e:	2a e0       	ldi	r18, 0x0A	; 10
    2850:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2854:	fe 01       	movw	r30, r28
    2856:	eb 59       	subi	r30, 0x9B	; 155
    2858:	fd 4f       	sbci	r31, 0xFD	; 253
    285a:	80 e0       	ldi	r24, 0x00	; 0
    285c:	90 e0       	ldi	r25, 0x00	; 0
    285e:	a0 e2       	ldi	r26, 0x20	; 32
    2860:	b1 e4       	ldi	r27, 0x41	; 65
    2862:	80 83       	st	Z, r24
    2864:	91 83       	std	Z+1, r25	; 0x01
    2866:	a2 83       	std	Z+2, r26	; 0x02
    2868:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    286a:	8e 01       	movw	r16, r28
    286c:	0f 59       	subi	r16, 0x9F	; 159
    286e:	1d 4f       	sbci	r17, 0xFD	; 253
    2870:	fe 01       	movw	r30, r28
    2872:	eb 59       	subi	r30, 0x9B	; 155
    2874:	fd 4f       	sbci	r31, 0xFD	; 253
    2876:	60 81       	ld	r22, Z
    2878:	71 81       	ldd	r23, Z+1	; 0x01
    287a:	82 81       	ldd	r24, Z+2	; 0x02
    287c:	93 81       	ldd	r25, Z+3	; 0x03
    287e:	20 e0       	ldi	r18, 0x00	; 0
    2880:	30 e0       	ldi	r19, 0x00	; 0
    2882:	4a ef       	ldi	r20, 0xFA	; 250
    2884:	54 e4       	ldi	r21, 0x44	; 68
    2886:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    288a:	dc 01       	movw	r26, r24
    288c:	cb 01       	movw	r24, r22
    288e:	f8 01       	movw	r30, r16
    2890:	80 83       	st	Z, r24
    2892:	91 83       	std	Z+1, r25	; 0x01
    2894:	a2 83       	std	Z+2, r26	; 0x02
    2896:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2898:	fe 01       	movw	r30, r28
    289a:	ef 59       	subi	r30, 0x9F	; 159
    289c:	fd 4f       	sbci	r31, 0xFD	; 253
    289e:	60 81       	ld	r22, Z
    28a0:	71 81       	ldd	r23, Z+1	; 0x01
    28a2:	82 81       	ldd	r24, Z+2	; 0x02
    28a4:	93 81       	ldd	r25, Z+3	; 0x03
    28a6:	20 e0       	ldi	r18, 0x00	; 0
    28a8:	30 e0       	ldi	r19, 0x00	; 0
    28aa:	40 e8       	ldi	r20, 0x80	; 128
    28ac:	5f e3       	ldi	r21, 0x3F	; 63
    28ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    28b2:	88 23       	and	r24, r24
    28b4:	44 f4       	brge	.+16     	; 0x28c6 <main+0xe56>
		__ticks = 1;
    28b6:	fe 01       	movw	r30, r28
    28b8:	e1 5a       	subi	r30, 0xA1	; 161
    28ba:	fd 4f       	sbci	r31, 0xFD	; 253
    28bc:	81 e0       	ldi	r24, 0x01	; 1
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	80 83       	st	Z, r24
    28c4:	64 c0       	rjmp	.+200    	; 0x298e <main+0xf1e>
	else if (__tmp > 65535)
    28c6:	fe 01       	movw	r30, r28
    28c8:	ef 59       	subi	r30, 0x9F	; 159
    28ca:	fd 4f       	sbci	r31, 0xFD	; 253
    28cc:	60 81       	ld	r22, Z
    28ce:	71 81       	ldd	r23, Z+1	; 0x01
    28d0:	82 81       	ldd	r24, Z+2	; 0x02
    28d2:	93 81       	ldd	r25, Z+3	; 0x03
    28d4:	20 e0       	ldi	r18, 0x00	; 0
    28d6:	3f ef       	ldi	r19, 0xFF	; 255
    28d8:	4f e7       	ldi	r20, 0x7F	; 127
    28da:	57 e4       	ldi	r21, 0x47	; 71
    28dc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28e0:	18 16       	cp	r1, r24
    28e2:	0c f0       	brlt	.+2      	; 0x28e6 <main+0xe76>
    28e4:	43 c0       	rjmp	.+134    	; 0x296c <main+0xefc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28e6:	fe 01       	movw	r30, r28
    28e8:	eb 59       	subi	r30, 0x9B	; 155
    28ea:	fd 4f       	sbci	r31, 0xFD	; 253
    28ec:	60 81       	ld	r22, Z
    28ee:	71 81       	ldd	r23, Z+1	; 0x01
    28f0:	82 81       	ldd	r24, Z+2	; 0x02
    28f2:	93 81       	ldd	r25, Z+3	; 0x03
    28f4:	20 e0       	ldi	r18, 0x00	; 0
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	40 e2       	ldi	r20, 0x20	; 32
    28fa:	51 e4       	ldi	r21, 0x41	; 65
    28fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2900:	dc 01       	movw	r26, r24
    2902:	cb 01       	movw	r24, r22
    2904:	8e 01       	movw	r16, r28
    2906:	01 5a       	subi	r16, 0xA1	; 161
    2908:	1d 4f       	sbci	r17, 0xFD	; 253
    290a:	bc 01       	movw	r22, r24
    290c:	cd 01       	movw	r24, r26
    290e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2912:	dc 01       	movw	r26, r24
    2914:	cb 01       	movw	r24, r22
    2916:	f8 01       	movw	r30, r16
    2918:	91 83       	std	Z+1, r25	; 0x01
    291a:	80 83       	st	Z, r24
    291c:	1f c0       	rjmp	.+62     	; 0x295c <main+0xeec>
    291e:	fe 01       	movw	r30, r28
    2920:	e3 5a       	subi	r30, 0xA3	; 163
    2922:	fd 4f       	sbci	r31, 0xFD	; 253
    2924:	88 ec       	ldi	r24, 0xC8	; 200
    2926:	90 e0       	ldi	r25, 0x00	; 0
    2928:	91 83       	std	Z+1, r25	; 0x01
    292a:	80 83       	st	Z, r24
    292c:	fe 01       	movw	r30, r28
    292e:	e3 5a       	subi	r30, 0xA3	; 163
    2930:	fd 4f       	sbci	r31, 0xFD	; 253
    2932:	80 81       	ld	r24, Z
    2934:	91 81       	ldd	r25, Z+1	; 0x01
    2936:	01 97       	sbiw	r24, 0x01	; 1
    2938:	f1 f7       	brne	.-4      	; 0x2936 <main+0xec6>
    293a:	fe 01       	movw	r30, r28
    293c:	e3 5a       	subi	r30, 0xA3	; 163
    293e:	fd 4f       	sbci	r31, 0xFD	; 253
    2940:	91 83       	std	Z+1, r25	; 0x01
    2942:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2944:	de 01       	movw	r26, r28
    2946:	a1 5a       	subi	r26, 0xA1	; 161
    2948:	bd 4f       	sbci	r27, 0xFD	; 253
    294a:	fe 01       	movw	r30, r28
    294c:	e1 5a       	subi	r30, 0xA1	; 161
    294e:	fd 4f       	sbci	r31, 0xFD	; 253
    2950:	80 81       	ld	r24, Z
    2952:	91 81       	ldd	r25, Z+1	; 0x01
    2954:	01 97       	sbiw	r24, 0x01	; 1
    2956:	11 96       	adiw	r26, 0x01	; 1
    2958:	9c 93       	st	X, r25
    295a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    295c:	fe 01       	movw	r30, r28
    295e:	e1 5a       	subi	r30, 0xA1	; 161
    2960:	fd 4f       	sbci	r31, 0xFD	; 253
    2962:	80 81       	ld	r24, Z
    2964:	91 81       	ldd	r25, Z+1	; 0x01
    2966:	00 97       	sbiw	r24, 0x00	; 0
    2968:	d1 f6       	brne	.-76     	; 0x291e <main+0xeae>
    296a:	27 c0       	rjmp	.+78     	; 0x29ba <main+0xf4a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    296c:	8e 01       	movw	r16, r28
    296e:	01 5a       	subi	r16, 0xA1	; 161
    2970:	1d 4f       	sbci	r17, 0xFD	; 253
    2972:	fe 01       	movw	r30, r28
    2974:	ef 59       	subi	r30, 0x9F	; 159
    2976:	fd 4f       	sbci	r31, 0xFD	; 253
    2978:	60 81       	ld	r22, Z
    297a:	71 81       	ldd	r23, Z+1	; 0x01
    297c:	82 81       	ldd	r24, Z+2	; 0x02
    297e:	93 81       	ldd	r25, Z+3	; 0x03
    2980:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2984:	dc 01       	movw	r26, r24
    2986:	cb 01       	movw	r24, r22
    2988:	f8 01       	movw	r30, r16
    298a:	91 83       	std	Z+1, r25	; 0x01
    298c:	80 83       	st	Z, r24
    298e:	de 01       	movw	r26, r28
    2990:	a5 5a       	subi	r26, 0xA5	; 165
    2992:	bd 4f       	sbci	r27, 0xFD	; 253
    2994:	fe 01       	movw	r30, r28
    2996:	e1 5a       	subi	r30, 0xA1	; 161
    2998:	fd 4f       	sbci	r31, 0xFD	; 253
    299a:	80 81       	ld	r24, Z
    299c:	91 81       	ldd	r25, Z+1	; 0x01
    299e:	8d 93       	st	X+, r24
    29a0:	9c 93       	st	X, r25
    29a2:	fe 01       	movw	r30, r28
    29a4:	e5 5a       	subi	r30, 0xA5	; 165
    29a6:	fd 4f       	sbci	r31, 0xFD	; 253
    29a8:	80 81       	ld	r24, Z
    29aa:	91 81       	ldd	r25, Z+1	; 0x01
    29ac:	01 97       	sbiw	r24, 0x01	; 1
    29ae:	f1 f7       	brne	.-4      	; 0x29ac <main+0xf3c>
    29b0:	fe 01       	movw	r30, r28
    29b2:	e5 5a       	subi	r30, 0xA5	; 165
    29b4:	fd 4f       	sbci	r31, 0xFD	; 253
    29b6:	91 83       	std	Z+1, r25	; 0x01
    29b8:	80 83       	st	Z, r24
		_delay_ms(10);


		CLCD_u8WriteSpecialCharacter(Pattern3,0,1,11);
    29ba:	ce 01       	movw	r24, r28
    29bc:	82 50       	subi	r24, 0x02	; 2
    29be:	9d 4f       	sbci	r25, 0xFD	; 253
    29c0:	60 e0       	ldi	r22, 0x00	; 0
    29c2:	41 e0       	ldi	r20, 0x01	; 1
    29c4:	2b e0       	ldi	r18, 0x0B	; 11
    29c6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern2,1,1,10);
    29ca:	ce 01       	movw	r24, r28
    29cc:	8a 50       	subi	r24, 0x0A	; 10
    29ce:	9d 4f       	sbci	r25, 0xFD	; 253
    29d0:	61 e0       	ldi	r22, 0x01	; 1
    29d2:	41 e0       	ldi	r20, 0x01	; 1
    29d4:	2a e0       	ldi	r18, 0x0A	; 10
    29d6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    29da:	fe 01       	movw	r30, r28
    29dc:	e9 5a       	subi	r30, 0xA9	; 169
    29de:	fd 4f       	sbci	r31, 0xFD	; 253
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	a0 e2       	ldi	r26, 0x20	; 32
    29e6:	b1 e4       	ldi	r27, 0x41	; 65
    29e8:	80 83       	st	Z, r24
    29ea:	91 83       	std	Z+1, r25	; 0x01
    29ec:	a2 83       	std	Z+2, r26	; 0x02
    29ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29f0:	8e 01       	movw	r16, r28
    29f2:	0d 5a       	subi	r16, 0xAD	; 173
    29f4:	1d 4f       	sbci	r17, 0xFD	; 253
    29f6:	fe 01       	movw	r30, r28
    29f8:	e9 5a       	subi	r30, 0xA9	; 169
    29fa:	fd 4f       	sbci	r31, 0xFD	; 253
    29fc:	60 81       	ld	r22, Z
    29fe:	71 81       	ldd	r23, Z+1	; 0x01
    2a00:	82 81       	ldd	r24, Z+2	; 0x02
    2a02:	93 81       	ldd	r25, Z+3	; 0x03
    2a04:	20 e0       	ldi	r18, 0x00	; 0
    2a06:	30 e0       	ldi	r19, 0x00	; 0
    2a08:	4a ef       	ldi	r20, 0xFA	; 250
    2a0a:	54 e4       	ldi	r21, 0x44	; 68
    2a0c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a10:	dc 01       	movw	r26, r24
    2a12:	cb 01       	movw	r24, r22
    2a14:	f8 01       	movw	r30, r16
    2a16:	80 83       	st	Z, r24
    2a18:	91 83       	std	Z+1, r25	; 0x01
    2a1a:	a2 83       	std	Z+2, r26	; 0x02
    2a1c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a1e:	fe 01       	movw	r30, r28
    2a20:	ed 5a       	subi	r30, 0xAD	; 173
    2a22:	fd 4f       	sbci	r31, 0xFD	; 253
    2a24:	60 81       	ld	r22, Z
    2a26:	71 81       	ldd	r23, Z+1	; 0x01
    2a28:	82 81       	ldd	r24, Z+2	; 0x02
    2a2a:	93 81       	ldd	r25, Z+3	; 0x03
    2a2c:	20 e0       	ldi	r18, 0x00	; 0
    2a2e:	30 e0       	ldi	r19, 0x00	; 0
    2a30:	40 e8       	ldi	r20, 0x80	; 128
    2a32:	5f e3       	ldi	r21, 0x3F	; 63
    2a34:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a38:	88 23       	and	r24, r24
    2a3a:	44 f4       	brge	.+16     	; 0x2a4c <main+0xfdc>
		__ticks = 1;
    2a3c:	fe 01       	movw	r30, r28
    2a3e:	ef 5a       	subi	r30, 0xAF	; 175
    2a40:	fd 4f       	sbci	r31, 0xFD	; 253
    2a42:	81 e0       	ldi	r24, 0x01	; 1
    2a44:	90 e0       	ldi	r25, 0x00	; 0
    2a46:	91 83       	std	Z+1, r25	; 0x01
    2a48:	80 83       	st	Z, r24
    2a4a:	64 c0       	rjmp	.+200    	; 0x2b14 <main+0x10a4>
	else if (__tmp > 65535)
    2a4c:	fe 01       	movw	r30, r28
    2a4e:	ed 5a       	subi	r30, 0xAD	; 173
    2a50:	fd 4f       	sbci	r31, 0xFD	; 253
    2a52:	60 81       	ld	r22, Z
    2a54:	71 81       	ldd	r23, Z+1	; 0x01
    2a56:	82 81       	ldd	r24, Z+2	; 0x02
    2a58:	93 81       	ldd	r25, Z+3	; 0x03
    2a5a:	20 e0       	ldi	r18, 0x00	; 0
    2a5c:	3f ef       	ldi	r19, 0xFF	; 255
    2a5e:	4f e7       	ldi	r20, 0x7F	; 127
    2a60:	57 e4       	ldi	r21, 0x47	; 71
    2a62:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a66:	18 16       	cp	r1, r24
    2a68:	0c f0       	brlt	.+2      	; 0x2a6c <main+0xffc>
    2a6a:	43 c0       	rjmp	.+134    	; 0x2af2 <main+0x1082>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a6c:	fe 01       	movw	r30, r28
    2a6e:	e9 5a       	subi	r30, 0xA9	; 169
    2a70:	fd 4f       	sbci	r31, 0xFD	; 253
    2a72:	60 81       	ld	r22, Z
    2a74:	71 81       	ldd	r23, Z+1	; 0x01
    2a76:	82 81       	ldd	r24, Z+2	; 0x02
    2a78:	93 81       	ldd	r25, Z+3	; 0x03
    2a7a:	20 e0       	ldi	r18, 0x00	; 0
    2a7c:	30 e0       	ldi	r19, 0x00	; 0
    2a7e:	40 e2       	ldi	r20, 0x20	; 32
    2a80:	51 e4       	ldi	r21, 0x41	; 65
    2a82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a86:	dc 01       	movw	r26, r24
    2a88:	cb 01       	movw	r24, r22
    2a8a:	8e 01       	movw	r16, r28
    2a8c:	0f 5a       	subi	r16, 0xAF	; 175
    2a8e:	1d 4f       	sbci	r17, 0xFD	; 253
    2a90:	bc 01       	movw	r22, r24
    2a92:	cd 01       	movw	r24, r26
    2a94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a98:	dc 01       	movw	r26, r24
    2a9a:	cb 01       	movw	r24, r22
    2a9c:	f8 01       	movw	r30, r16
    2a9e:	91 83       	std	Z+1, r25	; 0x01
    2aa0:	80 83       	st	Z, r24
    2aa2:	1f c0       	rjmp	.+62     	; 0x2ae2 <main+0x1072>
    2aa4:	fe 01       	movw	r30, r28
    2aa6:	e1 5b       	subi	r30, 0xB1	; 177
    2aa8:	fd 4f       	sbci	r31, 0xFD	; 253
    2aaa:	88 ec       	ldi	r24, 0xC8	; 200
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	91 83       	std	Z+1, r25	; 0x01
    2ab0:	80 83       	st	Z, r24
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e1 5b       	subi	r30, 0xB1	; 177
    2ab6:	fd 4f       	sbci	r31, 0xFD	; 253
    2ab8:	80 81       	ld	r24, Z
    2aba:	91 81       	ldd	r25, Z+1	; 0x01
    2abc:	01 97       	sbiw	r24, 0x01	; 1
    2abe:	f1 f7       	brne	.-4      	; 0x2abc <main+0x104c>
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e1 5b       	subi	r30, 0xB1	; 177
    2ac4:	fd 4f       	sbci	r31, 0xFD	; 253
    2ac6:	91 83       	std	Z+1, r25	; 0x01
    2ac8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2aca:	de 01       	movw	r26, r28
    2acc:	af 5a       	subi	r26, 0xAF	; 175
    2ace:	bd 4f       	sbci	r27, 0xFD	; 253
    2ad0:	fe 01       	movw	r30, r28
    2ad2:	ef 5a       	subi	r30, 0xAF	; 175
    2ad4:	fd 4f       	sbci	r31, 0xFD	; 253
    2ad6:	80 81       	ld	r24, Z
    2ad8:	91 81       	ldd	r25, Z+1	; 0x01
    2ada:	01 97       	sbiw	r24, 0x01	; 1
    2adc:	11 96       	adiw	r26, 0x01	; 1
    2ade:	9c 93       	st	X, r25
    2ae0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ae2:	fe 01       	movw	r30, r28
    2ae4:	ef 5a       	subi	r30, 0xAF	; 175
    2ae6:	fd 4f       	sbci	r31, 0xFD	; 253
    2ae8:	80 81       	ld	r24, Z
    2aea:	91 81       	ldd	r25, Z+1	; 0x01
    2aec:	00 97       	sbiw	r24, 0x00	; 0
    2aee:	d1 f6       	brne	.-76     	; 0x2aa4 <main+0x1034>
    2af0:	27 c0       	rjmp	.+78     	; 0x2b40 <main+0x10d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af2:	8e 01       	movw	r16, r28
    2af4:	0f 5a       	subi	r16, 0xAF	; 175
    2af6:	1d 4f       	sbci	r17, 0xFD	; 253
    2af8:	fe 01       	movw	r30, r28
    2afa:	ed 5a       	subi	r30, 0xAD	; 173
    2afc:	fd 4f       	sbci	r31, 0xFD	; 253
    2afe:	60 81       	ld	r22, Z
    2b00:	71 81       	ldd	r23, Z+1	; 0x01
    2b02:	82 81       	ldd	r24, Z+2	; 0x02
    2b04:	93 81       	ldd	r25, Z+3	; 0x03
    2b06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b0a:	dc 01       	movw	r26, r24
    2b0c:	cb 01       	movw	r24, r22
    2b0e:	f8 01       	movw	r30, r16
    2b10:	91 83       	std	Z+1, r25	; 0x01
    2b12:	80 83       	st	Z, r24
    2b14:	de 01       	movw	r26, r28
    2b16:	a3 5b       	subi	r26, 0xB3	; 179
    2b18:	bd 4f       	sbci	r27, 0xFD	; 253
    2b1a:	fe 01       	movw	r30, r28
    2b1c:	ef 5a       	subi	r30, 0xAF	; 175
    2b1e:	fd 4f       	sbci	r31, 0xFD	; 253
    2b20:	80 81       	ld	r24, Z
    2b22:	91 81       	ldd	r25, Z+1	; 0x01
    2b24:	8d 93       	st	X+, r24
    2b26:	9c 93       	st	X, r25
    2b28:	fe 01       	movw	r30, r28
    2b2a:	e3 5b       	subi	r30, 0xB3	; 179
    2b2c:	fd 4f       	sbci	r31, 0xFD	; 253
    2b2e:	80 81       	ld	r24, Z
    2b30:	91 81       	ldd	r25, Z+1	; 0x01
    2b32:	01 97       	sbiw	r24, 0x01	; 1
    2b34:	f1 f7       	brne	.-4      	; 0x2b32 <main+0x10c2>
    2b36:	fe 01       	movw	r30, r28
    2b38:	e3 5b       	subi	r30, 0xB3	; 179
    2b3a:	fd 4f       	sbci	r31, 0xFD	; 253
    2b3c:	91 83       	std	Z+1, r25	; 0x01
    2b3e:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8WriteSpecialCharacter(Pattern4,3,1,11);
    2b40:	ce 01       	movw	r24, r28
    2b42:	8a 5f       	subi	r24, 0xFA	; 250
    2b44:	9c 4f       	sbci	r25, 0xFC	; 252
    2b46:	63 e0       	ldi	r22, 0x03	; 3
    2b48:	41 e0       	ldi	r20, 0x01	; 1
    2b4a:	2b e0       	ldi	r18, 0x0B	; 11
    2b4c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
    2b50:	ce 01       	movw	r24, r28
    2b52:	82 51       	subi	r24, 0x12	; 18
    2b54:	9d 4f       	sbci	r25, 0xFD	; 253
    2b56:	62 e0       	ldi	r22, 0x02	; 2
    2b58:	41 e0       	ldi	r20, 0x01	; 1
    2b5a:	2a e0       	ldi	r18, 0x0A	; 10
    2b5c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2b60:	fe 01       	movw	r30, r28
    2b62:	e7 5b       	subi	r30, 0xB7	; 183
    2b64:	fd 4f       	sbci	r31, 0xFD	; 253
    2b66:	80 e0       	ldi	r24, 0x00	; 0
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	a0 e2       	ldi	r26, 0x20	; 32
    2b6c:	b1 e4       	ldi	r27, 0x41	; 65
    2b6e:	80 83       	st	Z, r24
    2b70:	91 83       	std	Z+1, r25	; 0x01
    2b72:	a2 83       	std	Z+2, r26	; 0x02
    2b74:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b76:	8e 01       	movw	r16, r28
    2b78:	0b 5b       	subi	r16, 0xBB	; 187
    2b7a:	1d 4f       	sbci	r17, 0xFD	; 253
    2b7c:	fe 01       	movw	r30, r28
    2b7e:	e7 5b       	subi	r30, 0xB7	; 183
    2b80:	fd 4f       	sbci	r31, 0xFD	; 253
    2b82:	60 81       	ld	r22, Z
    2b84:	71 81       	ldd	r23, Z+1	; 0x01
    2b86:	82 81       	ldd	r24, Z+2	; 0x02
    2b88:	93 81       	ldd	r25, Z+3	; 0x03
    2b8a:	20 e0       	ldi	r18, 0x00	; 0
    2b8c:	30 e0       	ldi	r19, 0x00	; 0
    2b8e:	4a ef       	ldi	r20, 0xFA	; 250
    2b90:	54 e4       	ldi	r21, 0x44	; 68
    2b92:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b96:	dc 01       	movw	r26, r24
    2b98:	cb 01       	movw	r24, r22
    2b9a:	f8 01       	movw	r30, r16
    2b9c:	80 83       	st	Z, r24
    2b9e:	91 83       	std	Z+1, r25	; 0x01
    2ba0:	a2 83       	std	Z+2, r26	; 0x02
    2ba2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ba4:	fe 01       	movw	r30, r28
    2ba6:	eb 5b       	subi	r30, 0xBB	; 187
    2ba8:	fd 4f       	sbci	r31, 0xFD	; 253
    2baa:	60 81       	ld	r22, Z
    2bac:	71 81       	ldd	r23, Z+1	; 0x01
    2bae:	82 81       	ldd	r24, Z+2	; 0x02
    2bb0:	93 81       	ldd	r25, Z+3	; 0x03
    2bb2:	20 e0       	ldi	r18, 0x00	; 0
    2bb4:	30 e0       	ldi	r19, 0x00	; 0
    2bb6:	40 e8       	ldi	r20, 0x80	; 128
    2bb8:	5f e3       	ldi	r21, 0x3F	; 63
    2bba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bbe:	88 23       	and	r24, r24
    2bc0:	44 f4       	brge	.+16     	; 0x2bd2 <main+0x1162>
		__ticks = 1;
    2bc2:	fe 01       	movw	r30, r28
    2bc4:	ed 5b       	subi	r30, 0xBD	; 189
    2bc6:	fd 4f       	sbci	r31, 0xFD	; 253
    2bc8:	81 e0       	ldi	r24, 0x01	; 1
    2bca:	90 e0       	ldi	r25, 0x00	; 0
    2bcc:	91 83       	std	Z+1, r25	; 0x01
    2bce:	80 83       	st	Z, r24
    2bd0:	64 c0       	rjmp	.+200    	; 0x2c9a <main+0x122a>
	else if (__tmp > 65535)
    2bd2:	fe 01       	movw	r30, r28
    2bd4:	eb 5b       	subi	r30, 0xBB	; 187
    2bd6:	fd 4f       	sbci	r31, 0xFD	; 253
    2bd8:	60 81       	ld	r22, Z
    2bda:	71 81       	ldd	r23, Z+1	; 0x01
    2bdc:	82 81       	ldd	r24, Z+2	; 0x02
    2bde:	93 81       	ldd	r25, Z+3	; 0x03
    2be0:	20 e0       	ldi	r18, 0x00	; 0
    2be2:	3f ef       	ldi	r19, 0xFF	; 255
    2be4:	4f e7       	ldi	r20, 0x7F	; 127
    2be6:	57 e4       	ldi	r21, 0x47	; 71
    2be8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bec:	18 16       	cp	r1, r24
    2bee:	0c f0       	brlt	.+2      	; 0x2bf2 <main+0x1182>
    2bf0:	43 c0       	rjmp	.+134    	; 0x2c78 <main+0x1208>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	e7 5b       	subi	r30, 0xB7	; 183
    2bf6:	fd 4f       	sbci	r31, 0xFD	; 253
    2bf8:	60 81       	ld	r22, Z
    2bfa:	71 81       	ldd	r23, Z+1	; 0x01
    2bfc:	82 81       	ldd	r24, Z+2	; 0x02
    2bfe:	93 81       	ldd	r25, Z+3	; 0x03
    2c00:	20 e0       	ldi	r18, 0x00	; 0
    2c02:	30 e0       	ldi	r19, 0x00	; 0
    2c04:	40 e2       	ldi	r20, 0x20	; 32
    2c06:	51 e4       	ldi	r21, 0x41	; 65
    2c08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c0c:	dc 01       	movw	r26, r24
    2c0e:	cb 01       	movw	r24, r22
    2c10:	8e 01       	movw	r16, r28
    2c12:	0d 5b       	subi	r16, 0xBD	; 189
    2c14:	1d 4f       	sbci	r17, 0xFD	; 253
    2c16:	bc 01       	movw	r22, r24
    2c18:	cd 01       	movw	r24, r26
    2c1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c1e:	dc 01       	movw	r26, r24
    2c20:	cb 01       	movw	r24, r22
    2c22:	f8 01       	movw	r30, r16
    2c24:	91 83       	std	Z+1, r25	; 0x01
    2c26:	80 83       	st	Z, r24
    2c28:	1f c0       	rjmp	.+62     	; 0x2c68 <main+0x11f8>
    2c2a:	fe 01       	movw	r30, r28
    2c2c:	ef 5b       	subi	r30, 0xBF	; 191
    2c2e:	fd 4f       	sbci	r31, 0xFD	; 253
    2c30:	88 ec       	ldi	r24, 0xC8	; 200
    2c32:	90 e0       	ldi	r25, 0x00	; 0
    2c34:	91 83       	std	Z+1, r25	; 0x01
    2c36:	80 83       	st	Z, r24
    2c38:	fe 01       	movw	r30, r28
    2c3a:	ef 5b       	subi	r30, 0xBF	; 191
    2c3c:	fd 4f       	sbci	r31, 0xFD	; 253
    2c3e:	80 81       	ld	r24, Z
    2c40:	91 81       	ldd	r25, Z+1	; 0x01
    2c42:	01 97       	sbiw	r24, 0x01	; 1
    2c44:	f1 f7       	brne	.-4      	; 0x2c42 <main+0x11d2>
    2c46:	fe 01       	movw	r30, r28
    2c48:	ef 5b       	subi	r30, 0xBF	; 191
    2c4a:	fd 4f       	sbci	r31, 0xFD	; 253
    2c4c:	91 83       	std	Z+1, r25	; 0x01
    2c4e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c50:	de 01       	movw	r26, r28
    2c52:	ad 5b       	subi	r26, 0xBD	; 189
    2c54:	bd 4f       	sbci	r27, 0xFD	; 253
    2c56:	fe 01       	movw	r30, r28
    2c58:	ed 5b       	subi	r30, 0xBD	; 189
    2c5a:	fd 4f       	sbci	r31, 0xFD	; 253
    2c5c:	80 81       	ld	r24, Z
    2c5e:	91 81       	ldd	r25, Z+1	; 0x01
    2c60:	01 97       	sbiw	r24, 0x01	; 1
    2c62:	11 96       	adiw	r26, 0x01	; 1
    2c64:	9c 93       	st	X, r25
    2c66:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c68:	fe 01       	movw	r30, r28
    2c6a:	ed 5b       	subi	r30, 0xBD	; 189
    2c6c:	fd 4f       	sbci	r31, 0xFD	; 253
    2c6e:	80 81       	ld	r24, Z
    2c70:	91 81       	ldd	r25, Z+1	; 0x01
    2c72:	00 97       	sbiw	r24, 0x00	; 0
    2c74:	d1 f6       	brne	.-76     	; 0x2c2a <main+0x11ba>
    2c76:	27 c0       	rjmp	.+78     	; 0x2cc6 <main+0x1256>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c78:	8e 01       	movw	r16, r28
    2c7a:	0d 5b       	subi	r16, 0xBD	; 189
    2c7c:	1d 4f       	sbci	r17, 0xFD	; 253
    2c7e:	fe 01       	movw	r30, r28
    2c80:	eb 5b       	subi	r30, 0xBB	; 187
    2c82:	fd 4f       	sbci	r31, 0xFD	; 253
    2c84:	60 81       	ld	r22, Z
    2c86:	71 81       	ldd	r23, Z+1	; 0x01
    2c88:	82 81       	ldd	r24, Z+2	; 0x02
    2c8a:	93 81       	ldd	r25, Z+3	; 0x03
    2c8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c90:	dc 01       	movw	r26, r24
    2c92:	cb 01       	movw	r24, r22
    2c94:	f8 01       	movw	r30, r16
    2c96:	91 83       	std	Z+1, r25	; 0x01
    2c98:	80 83       	st	Z, r24
    2c9a:	de 01       	movw	r26, r28
    2c9c:	a1 5c       	subi	r26, 0xC1	; 193
    2c9e:	bd 4f       	sbci	r27, 0xFD	; 253
    2ca0:	fe 01       	movw	r30, r28
    2ca2:	ed 5b       	subi	r30, 0xBD	; 189
    2ca4:	fd 4f       	sbci	r31, 0xFD	; 253
    2ca6:	80 81       	ld	r24, Z
    2ca8:	91 81       	ldd	r25, Z+1	; 0x01
    2caa:	8d 93       	st	X+, r24
    2cac:	9c 93       	st	X, r25
    2cae:	fe 01       	movw	r30, r28
    2cb0:	e1 5c       	subi	r30, 0xC1	; 193
    2cb2:	fd 4f       	sbci	r31, 0xFD	; 253
    2cb4:	80 81       	ld	r24, Z
    2cb6:	91 81       	ldd	r25, Z+1	; 0x01
    2cb8:	01 97       	sbiw	r24, 0x01	; 1
    2cba:	f1 f7       	brne	.-4      	; 0x2cb8 <main+0x1248>
    2cbc:	fe 01       	movw	r30, r28
    2cbe:	e1 5c       	subi	r30, 0xC1	; 193
    2cc0:	fd 4f       	sbci	r31, 0xFD	; 253
    2cc2:	91 83       	std	Z+1, r25	; 0x01
    2cc4:	80 83       	st	Z, r24
		_delay_ms(10);


		CLCD_u8WriteSpecialCharacter(Pattern3,0,1,11);
    2cc6:	ce 01       	movw	r24, r28
    2cc8:	82 50       	subi	r24, 0x02	; 2
    2cca:	9d 4f       	sbci	r25, 0xFD	; 253
    2ccc:	60 e0       	ldi	r22, 0x00	; 0
    2cce:	41 e0       	ldi	r20, 0x01	; 1
    2cd0:	2b e0       	ldi	r18, 0x0B	; 11
    2cd2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern2,1,1,10);
    2cd6:	ce 01       	movw	r24, r28
    2cd8:	8a 50       	subi	r24, 0x0A	; 10
    2cda:	9d 4f       	sbci	r25, 0xFD	; 253
    2cdc:	61 e0       	ldi	r22, 0x01	; 1
    2cde:	41 e0       	ldi	r20, 0x01	; 1
    2ce0:	2a e0       	ldi	r18, 0x0A	; 10
    2ce2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2ce6:	fe 01       	movw	r30, r28
    2ce8:	e5 5c       	subi	r30, 0xC5	; 197
    2cea:	fd 4f       	sbci	r31, 0xFD	; 253
    2cec:	80 e0       	ldi	r24, 0x00	; 0
    2cee:	90 e0       	ldi	r25, 0x00	; 0
    2cf0:	a0 e2       	ldi	r26, 0x20	; 32
    2cf2:	b1 e4       	ldi	r27, 0x41	; 65
    2cf4:	80 83       	st	Z, r24
    2cf6:	91 83       	std	Z+1, r25	; 0x01
    2cf8:	a2 83       	std	Z+2, r26	; 0x02
    2cfa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cfc:	8e 01       	movw	r16, r28
    2cfe:	09 5c       	subi	r16, 0xC9	; 201
    2d00:	1d 4f       	sbci	r17, 0xFD	; 253
    2d02:	fe 01       	movw	r30, r28
    2d04:	e5 5c       	subi	r30, 0xC5	; 197
    2d06:	fd 4f       	sbci	r31, 0xFD	; 253
    2d08:	60 81       	ld	r22, Z
    2d0a:	71 81       	ldd	r23, Z+1	; 0x01
    2d0c:	82 81       	ldd	r24, Z+2	; 0x02
    2d0e:	93 81       	ldd	r25, Z+3	; 0x03
    2d10:	20 e0       	ldi	r18, 0x00	; 0
    2d12:	30 e0       	ldi	r19, 0x00	; 0
    2d14:	4a ef       	ldi	r20, 0xFA	; 250
    2d16:	54 e4       	ldi	r21, 0x44	; 68
    2d18:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d1c:	dc 01       	movw	r26, r24
    2d1e:	cb 01       	movw	r24, r22
    2d20:	f8 01       	movw	r30, r16
    2d22:	80 83       	st	Z, r24
    2d24:	91 83       	std	Z+1, r25	; 0x01
    2d26:	a2 83       	std	Z+2, r26	; 0x02
    2d28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d2a:	fe 01       	movw	r30, r28
    2d2c:	e9 5c       	subi	r30, 0xC9	; 201
    2d2e:	fd 4f       	sbci	r31, 0xFD	; 253
    2d30:	60 81       	ld	r22, Z
    2d32:	71 81       	ldd	r23, Z+1	; 0x01
    2d34:	82 81       	ldd	r24, Z+2	; 0x02
    2d36:	93 81       	ldd	r25, Z+3	; 0x03
    2d38:	20 e0       	ldi	r18, 0x00	; 0
    2d3a:	30 e0       	ldi	r19, 0x00	; 0
    2d3c:	40 e8       	ldi	r20, 0x80	; 128
    2d3e:	5f e3       	ldi	r21, 0x3F	; 63
    2d40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d44:	88 23       	and	r24, r24
    2d46:	44 f4       	brge	.+16     	; 0x2d58 <main+0x12e8>
		__ticks = 1;
    2d48:	fe 01       	movw	r30, r28
    2d4a:	eb 5c       	subi	r30, 0xCB	; 203
    2d4c:	fd 4f       	sbci	r31, 0xFD	; 253
    2d4e:	81 e0       	ldi	r24, 0x01	; 1
    2d50:	90 e0       	ldi	r25, 0x00	; 0
    2d52:	91 83       	std	Z+1, r25	; 0x01
    2d54:	80 83       	st	Z, r24
    2d56:	64 c0       	rjmp	.+200    	; 0x2e20 <main+0x13b0>
	else if (__tmp > 65535)
    2d58:	fe 01       	movw	r30, r28
    2d5a:	e9 5c       	subi	r30, 0xC9	; 201
    2d5c:	fd 4f       	sbci	r31, 0xFD	; 253
    2d5e:	60 81       	ld	r22, Z
    2d60:	71 81       	ldd	r23, Z+1	; 0x01
    2d62:	82 81       	ldd	r24, Z+2	; 0x02
    2d64:	93 81       	ldd	r25, Z+3	; 0x03
    2d66:	20 e0       	ldi	r18, 0x00	; 0
    2d68:	3f ef       	ldi	r19, 0xFF	; 255
    2d6a:	4f e7       	ldi	r20, 0x7F	; 127
    2d6c:	57 e4       	ldi	r21, 0x47	; 71
    2d6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d72:	18 16       	cp	r1, r24
    2d74:	0c f0       	brlt	.+2      	; 0x2d78 <main+0x1308>
    2d76:	43 c0       	rjmp	.+134    	; 0x2dfe <main+0x138e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d78:	fe 01       	movw	r30, r28
    2d7a:	e5 5c       	subi	r30, 0xC5	; 197
    2d7c:	fd 4f       	sbci	r31, 0xFD	; 253
    2d7e:	60 81       	ld	r22, Z
    2d80:	71 81       	ldd	r23, Z+1	; 0x01
    2d82:	82 81       	ldd	r24, Z+2	; 0x02
    2d84:	93 81       	ldd	r25, Z+3	; 0x03
    2d86:	20 e0       	ldi	r18, 0x00	; 0
    2d88:	30 e0       	ldi	r19, 0x00	; 0
    2d8a:	40 e2       	ldi	r20, 0x20	; 32
    2d8c:	51 e4       	ldi	r21, 0x41	; 65
    2d8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d92:	dc 01       	movw	r26, r24
    2d94:	cb 01       	movw	r24, r22
    2d96:	8e 01       	movw	r16, r28
    2d98:	0b 5c       	subi	r16, 0xCB	; 203
    2d9a:	1d 4f       	sbci	r17, 0xFD	; 253
    2d9c:	bc 01       	movw	r22, r24
    2d9e:	cd 01       	movw	r24, r26
    2da0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2da4:	dc 01       	movw	r26, r24
    2da6:	cb 01       	movw	r24, r22
    2da8:	f8 01       	movw	r30, r16
    2daa:	91 83       	std	Z+1, r25	; 0x01
    2dac:	80 83       	st	Z, r24
    2dae:	1f c0       	rjmp	.+62     	; 0x2dee <main+0x137e>
    2db0:	fe 01       	movw	r30, r28
    2db2:	ed 5c       	subi	r30, 0xCD	; 205
    2db4:	fd 4f       	sbci	r31, 0xFD	; 253
    2db6:	88 ec       	ldi	r24, 0xC8	; 200
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	91 83       	std	Z+1, r25	; 0x01
    2dbc:	80 83       	st	Z, r24
    2dbe:	fe 01       	movw	r30, r28
    2dc0:	ed 5c       	subi	r30, 0xCD	; 205
    2dc2:	fd 4f       	sbci	r31, 0xFD	; 253
    2dc4:	80 81       	ld	r24, Z
    2dc6:	91 81       	ldd	r25, Z+1	; 0x01
    2dc8:	01 97       	sbiw	r24, 0x01	; 1
    2dca:	f1 f7       	brne	.-4      	; 0x2dc8 <main+0x1358>
    2dcc:	fe 01       	movw	r30, r28
    2dce:	ed 5c       	subi	r30, 0xCD	; 205
    2dd0:	fd 4f       	sbci	r31, 0xFD	; 253
    2dd2:	91 83       	std	Z+1, r25	; 0x01
    2dd4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dd6:	de 01       	movw	r26, r28
    2dd8:	ab 5c       	subi	r26, 0xCB	; 203
    2dda:	bd 4f       	sbci	r27, 0xFD	; 253
    2ddc:	fe 01       	movw	r30, r28
    2dde:	eb 5c       	subi	r30, 0xCB	; 203
    2de0:	fd 4f       	sbci	r31, 0xFD	; 253
    2de2:	80 81       	ld	r24, Z
    2de4:	91 81       	ldd	r25, Z+1	; 0x01
    2de6:	01 97       	sbiw	r24, 0x01	; 1
    2de8:	11 96       	adiw	r26, 0x01	; 1
    2dea:	9c 93       	st	X, r25
    2dec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dee:	fe 01       	movw	r30, r28
    2df0:	eb 5c       	subi	r30, 0xCB	; 203
    2df2:	fd 4f       	sbci	r31, 0xFD	; 253
    2df4:	80 81       	ld	r24, Z
    2df6:	91 81       	ldd	r25, Z+1	; 0x01
    2df8:	00 97       	sbiw	r24, 0x00	; 0
    2dfa:	d1 f6       	brne	.-76     	; 0x2db0 <main+0x1340>
    2dfc:	27 c0       	rjmp	.+78     	; 0x2e4c <main+0x13dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2dfe:	8e 01       	movw	r16, r28
    2e00:	0b 5c       	subi	r16, 0xCB	; 203
    2e02:	1d 4f       	sbci	r17, 0xFD	; 253
    2e04:	fe 01       	movw	r30, r28
    2e06:	e9 5c       	subi	r30, 0xC9	; 201
    2e08:	fd 4f       	sbci	r31, 0xFD	; 253
    2e0a:	60 81       	ld	r22, Z
    2e0c:	71 81       	ldd	r23, Z+1	; 0x01
    2e0e:	82 81       	ldd	r24, Z+2	; 0x02
    2e10:	93 81       	ldd	r25, Z+3	; 0x03
    2e12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e16:	dc 01       	movw	r26, r24
    2e18:	cb 01       	movw	r24, r22
    2e1a:	f8 01       	movw	r30, r16
    2e1c:	91 83       	std	Z+1, r25	; 0x01
    2e1e:	80 83       	st	Z, r24
    2e20:	de 01       	movw	r26, r28
    2e22:	af 5c       	subi	r26, 0xCF	; 207
    2e24:	bd 4f       	sbci	r27, 0xFD	; 253
    2e26:	fe 01       	movw	r30, r28
    2e28:	eb 5c       	subi	r30, 0xCB	; 203
    2e2a:	fd 4f       	sbci	r31, 0xFD	; 253
    2e2c:	80 81       	ld	r24, Z
    2e2e:	91 81       	ldd	r25, Z+1	; 0x01
    2e30:	8d 93       	st	X+, r24
    2e32:	9c 93       	st	X, r25
    2e34:	fe 01       	movw	r30, r28
    2e36:	ef 5c       	subi	r30, 0xCF	; 207
    2e38:	fd 4f       	sbci	r31, 0xFD	; 253
    2e3a:	80 81       	ld	r24, Z
    2e3c:	91 81       	ldd	r25, Z+1	; 0x01
    2e3e:	01 97       	sbiw	r24, 0x01	; 1
    2e40:	f1 f7       	brne	.-4      	; 0x2e3e <main+0x13ce>
    2e42:	fe 01       	movw	r30, r28
    2e44:	ef 5c       	subi	r30, 0xCF	; 207
    2e46:	fd 4f       	sbci	r31, 0xFD	; 253
    2e48:	91 83       	std	Z+1, r25	; 0x01
    2e4a:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8WriteSpecialCharacter(Pattern4,3,1,11);
    2e4c:	ce 01       	movw	r24, r28
    2e4e:	8a 5f       	subi	r24, 0xFA	; 250
    2e50:	9c 4f       	sbci	r25, 0xFC	; 252
    2e52:	63 e0       	ldi	r22, 0x03	; 3
    2e54:	41 e0       	ldi	r20, 0x01	; 1
    2e56:	2b e0       	ldi	r18, 0x0B	; 11
    2e58:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
    2e5c:	ce 01       	movw	r24, r28
    2e5e:	82 51       	subi	r24, 0x12	; 18
    2e60:	9d 4f       	sbci	r25, 0xFD	; 253
    2e62:	62 e0       	ldi	r22, 0x02	; 2
    2e64:	41 e0       	ldi	r20, 0x01	; 1
    2e66:	2a e0       	ldi	r18, 0x0A	; 10
    2e68:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2e6c:	fe 01       	movw	r30, r28
    2e6e:	e3 5d       	subi	r30, 0xD3	; 211
    2e70:	fd 4f       	sbci	r31, 0xFD	; 253
    2e72:	80 e0       	ldi	r24, 0x00	; 0
    2e74:	90 e0       	ldi	r25, 0x00	; 0
    2e76:	a0 e2       	ldi	r26, 0x20	; 32
    2e78:	b1 e4       	ldi	r27, 0x41	; 65
    2e7a:	80 83       	st	Z, r24
    2e7c:	91 83       	std	Z+1, r25	; 0x01
    2e7e:	a2 83       	std	Z+2, r26	; 0x02
    2e80:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e82:	8e 01       	movw	r16, r28
    2e84:	07 5d       	subi	r16, 0xD7	; 215
    2e86:	1d 4f       	sbci	r17, 0xFD	; 253
    2e88:	fe 01       	movw	r30, r28
    2e8a:	e3 5d       	subi	r30, 0xD3	; 211
    2e8c:	fd 4f       	sbci	r31, 0xFD	; 253
    2e8e:	60 81       	ld	r22, Z
    2e90:	71 81       	ldd	r23, Z+1	; 0x01
    2e92:	82 81       	ldd	r24, Z+2	; 0x02
    2e94:	93 81       	ldd	r25, Z+3	; 0x03
    2e96:	20 e0       	ldi	r18, 0x00	; 0
    2e98:	30 e0       	ldi	r19, 0x00	; 0
    2e9a:	4a ef       	ldi	r20, 0xFA	; 250
    2e9c:	54 e4       	ldi	r21, 0x44	; 68
    2e9e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ea2:	dc 01       	movw	r26, r24
    2ea4:	cb 01       	movw	r24, r22
    2ea6:	f8 01       	movw	r30, r16
    2ea8:	80 83       	st	Z, r24
    2eaa:	91 83       	std	Z+1, r25	; 0x01
    2eac:	a2 83       	std	Z+2, r26	; 0x02
    2eae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2eb0:	fe 01       	movw	r30, r28
    2eb2:	e7 5d       	subi	r30, 0xD7	; 215
    2eb4:	fd 4f       	sbci	r31, 0xFD	; 253
    2eb6:	60 81       	ld	r22, Z
    2eb8:	71 81       	ldd	r23, Z+1	; 0x01
    2eba:	82 81       	ldd	r24, Z+2	; 0x02
    2ebc:	93 81       	ldd	r25, Z+3	; 0x03
    2ebe:	20 e0       	ldi	r18, 0x00	; 0
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	40 e8       	ldi	r20, 0x80	; 128
    2ec4:	5f e3       	ldi	r21, 0x3F	; 63
    2ec6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2eca:	88 23       	and	r24, r24
    2ecc:	44 f4       	brge	.+16     	; 0x2ede <main+0x146e>
		__ticks = 1;
    2ece:	fe 01       	movw	r30, r28
    2ed0:	e9 5d       	subi	r30, 0xD9	; 217
    2ed2:	fd 4f       	sbci	r31, 0xFD	; 253
    2ed4:	81 e0       	ldi	r24, 0x01	; 1
    2ed6:	90 e0       	ldi	r25, 0x00	; 0
    2ed8:	91 83       	std	Z+1, r25	; 0x01
    2eda:	80 83       	st	Z, r24
    2edc:	64 c0       	rjmp	.+200    	; 0x2fa6 <main+0x1536>
	else if (__tmp > 65535)
    2ede:	fe 01       	movw	r30, r28
    2ee0:	e7 5d       	subi	r30, 0xD7	; 215
    2ee2:	fd 4f       	sbci	r31, 0xFD	; 253
    2ee4:	60 81       	ld	r22, Z
    2ee6:	71 81       	ldd	r23, Z+1	; 0x01
    2ee8:	82 81       	ldd	r24, Z+2	; 0x02
    2eea:	93 81       	ldd	r25, Z+3	; 0x03
    2eec:	20 e0       	ldi	r18, 0x00	; 0
    2eee:	3f ef       	ldi	r19, 0xFF	; 255
    2ef0:	4f e7       	ldi	r20, 0x7F	; 127
    2ef2:	57 e4       	ldi	r21, 0x47	; 71
    2ef4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ef8:	18 16       	cp	r1, r24
    2efa:	0c f0       	brlt	.+2      	; 0x2efe <main+0x148e>
    2efc:	43 c0       	rjmp	.+134    	; 0x2f84 <main+0x1514>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2efe:	fe 01       	movw	r30, r28
    2f00:	e3 5d       	subi	r30, 0xD3	; 211
    2f02:	fd 4f       	sbci	r31, 0xFD	; 253
    2f04:	60 81       	ld	r22, Z
    2f06:	71 81       	ldd	r23, Z+1	; 0x01
    2f08:	82 81       	ldd	r24, Z+2	; 0x02
    2f0a:	93 81       	ldd	r25, Z+3	; 0x03
    2f0c:	20 e0       	ldi	r18, 0x00	; 0
    2f0e:	30 e0       	ldi	r19, 0x00	; 0
    2f10:	40 e2       	ldi	r20, 0x20	; 32
    2f12:	51 e4       	ldi	r21, 0x41	; 65
    2f14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f18:	dc 01       	movw	r26, r24
    2f1a:	cb 01       	movw	r24, r22
    2f1c:	8e 01       	movw	r16, r28
    2f1e:	09 5d       	subi	r16, 0xD9	; 217
    2f20:	1d 4f       	sbci	r17, 0xFD	; 253
    2f22:	bc 01       	movw	r22, r24
    2f24:	cd 01       	movw	r24, r26
    2f26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f2a:	dc 01       	movw	r26, r24
    2f2c:	cb 01       	movw	r24, r22
    2f2e:	f8 01       	movw	r30, r16
    2f30:	91 83       	std	Z+1, r25	; 0x01
    2f32:	80 83       	st	Z, r24
    2f34:	1f c0       	rjmp	.+62     	; 0x2f74 <main+0x1504>
    2f36:	fe 01       	movw	r30, r28
    2f38:	eb 5d       	subi	r30, 0xDB	; 219
    2f3a:	fd 4f       	sbci	r31, 0xFD	; 253
    2f3c:	88 ec       	ldi	r24, 0xC8	; 200
    2f3e:	90 e0       	ldi	r25, 0x00	; 0
    2f40:	91 83       	std	Z+1, r25	; 0x01
    2f42:	80 83       	st	Z, r24
    2f44:	fe 01       	movw	r30, r28
    2f46:	eb 5d       	subi	r30, 0xDB	; 219
    2f48:	fd 4f       	sbci	r31, 0xFD	; 253
    2f4a:	80 81       	ld	r24, Z
    2f4c:	91 81       	ldd	r25, Z+1	; 0x01
    2f4e:	01 97       	sbiw	r24, 0x01	; 1
    2f50:	f1 f7       	brne	.-4      	; 0x2f4e <main+0x14de>
    2f52:	fe 01       	movw	r30, r28
    2f54:	eb 5d       	subi	r30, 0xDB	; 219
    2f56:	fd 4f       	sbci	r31, 0xFD	; 253
    2f58:	91 83       	std	Z+1, r25	; 0x01
    2f5a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f5c:	de 01       	movw	r26, r28
    2f5e:	a9 5d       	subi	r26, 0xD9	; 217
    2f60:	bd 4f       	sbci	r27, 0xFD	; 253
    2f62:	fe 01       	movw	r30, r28
    2f64:	e9 5d       	subi	r30, 0xD9	; 217
    2f66:	fd 4f       	sbci	r31, 0xFD	; 253
    2f68:	80 81       	ld	r24, Z
    2f6a:	91 81       	ldd	r25, Z+1	; 0x01
    2f6c:	01 97       	sbiw	r24, 0x01	; 1
    2f6e:	11 96       	adiw	r26, 0x01	; 1
    2f70:	9c 93       	st	X, r25
    2f72:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f74:	fe 01       	movw	r30, r28
    2f76:	e9 5d       	subi	r30, 0xD9	; 217
    2f78:	fd 4f       	sbci	r31, 0xFD	; 253
    2f7a:	80 81       	ld	r24, Z
    2f7c:	91 81       	ldd	r25, Z+1	; 0x01
    2f7e:	00 97       	sbiw	r24, 0x00	; 0
    2f80:	d1 f6       	brne	.-76     	; 0x2f36 <main+0x14c6>
    2f82:	27 c0       	rjmp	.+78     	; 0x2fd2 <main+0x1562>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f84:	8e 01       	movw	r16, r28
    2f86:	09 5d       	subi	r16, 0xD9	; 217
    2f88:	1d 4f       	sbci	r17, 0xFD	; 253
    2f8a:	fe 01       	movw	r30, r28
    2f8c:	e7 5d       	subi	r30, 0xD7	; 215
    2f8e:	fd 4f       	sbci	r31, 0xFD	; 253
    2f90:	60 81       	ld	r22, Z
    2f92:	71 81       	ldd	r23, Z+1	; 0x01
    2f94:	82 81       	ldd	r24, Z+2	; 0x02
    2f96:	93 81       	ldd	r25, Z+3	; 0x03
    2f98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f9c:	dc 01       	movw	r26, r24
    2f9e:	cb 01       	movw	r24, r22
    2fa0:	f8 01       	movw	r30, r16
    2fa2:	91 83       	std	Z+1, r25	; 0x01
    2fa4:	80 83       	st	Z, r24
    2fa6:	de 01       	movw	r26, r28
    2fa8:	ad 5d       	subi	r26, 0xDD	; 221
    2faa:	bd 4f       	sbci	r27, 0xFD	; 253
    2fac:	fe 01       	movw	r30, r28
    2fae:	e9 5d       	subi	r30, 0xD9	; 217
    2fb0:	fd 4f       	sbci	r31, 0xFD	; 253
    2fb2:	80 81       	ld	r24, Z
    2fb4:	91 81       	ldd	r25, Z+1	; 0x01
    2fb6:	8d 93       	st	X+, r24
    2fb8:	9c 93       	st	X, r25
    2fba:	fe 01       	movw	r30, r28
    2fbc:	ed 5d       	subi	r30, 0xDD	; 221
    2fbe:	fd 4f       	sbci	r31, 0xFD	; 253
    2fc0:	80 81       	ld	r24, Z
    2fc2:	91 81       	ldd	r25, Z+1	; 0x01
    2fc4:	01 97       	sbiw	r24, 0x01	; 1
    2fc6:	f1 f7       	brne	.-4      	; 0x2fc4 <main+0x1554>
    2fc8:	fe 01       	movw	r30, r28
    2fca:	ed 5d       	subi	r30, 0xDD	; 221
    2fcc:	fd 4f       	sbci	r31, 0xFD	; 253
    2fce:	91 83       	std	Z+1, r25	; 0x01
    2fd0:	80 83       	st	Z, r24
		_delay_ms(10);


		CLCD_u8WriteSpecialCharacter(Pattern4,3,1,11);
    2fd2:	ce 01       	movw	r24, r28
    2fd4:	8a 5f       	subi	r24, 0xFA	; 250
    2fd6:	9c 4f       	sbci	r25, 0xFC	; 252
    2fd8:	63 e0       	ldi	r22, 0x03	; 3
    2fda:	41 e0       	ldi	r20, 0x01	; 1
    2fdc:	2b e0       	ldi	r18, 0x0B	; 11
    2fde:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
    2fe2:	ce 01       	movw	r24, r28
    2fe4:	82 51       	subi	r24, 0x12	; 18
    2fe6:	9d 4f       	sbci	r25, 0xFD	; 253
    2fe8:	62 e0       	ldi	r22, 0x02	; 2
    2fea:	41 e0       	ldi	r20, 0x01	; 1
    2fec:	2a e0       	ldi	r18, 0x0A	; 10
    2fee:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2ff2:	fe 01       	movw	r30, r28
    2ff4:	e1 5e       	subi	r30, 0xE1	; 225
    2ff6:	fd 4f       	sbci	r31, 0xFD	; 253
    2ff8:	80 e0       	ldi	r24, 0x00	; 0
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	a0 e2       	ldi	r26, 0x20	; 32
    2ffe:	b1 e4       	ldi	r27, 0x41	; 65
    3000:	80 83       	st	Z, r24
    3002:	91 83       	std	Z+1, r25	; 0x01
    3004:	a2 83       	std	Z+2, r26	; 0x02
    3006:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3008:	8e 01       	movw	r16, r28
    300a:	05 5e       	subi	r16, 0xE5	; 229
    300c:	1d 4f       	sbci	r17, 0xFD	; 253
    300e:	fe 01       	movw	r30, r28
    3010:	e1 5e       	subi	r30, 0xE1	; 225
    3012:	fd 4f       	sbci	r31, 0xFD	; 253
    3014:	60 81       	ld	r22, Z
    3016:	71 81       	ldd	r23, Z+1	; 0x01
    3018:	82 81       	ldd	r24, Z+2	; 0x02
    301a:	93 81       	ldd	r25, Z+3	; 0x03
    301c:	20 e0       	ldi	r18, 0x00	; 0
    301e:	30 e0       	ldi	r19, 0x00	; 0
    3020:	4a ef       	ldi	r20, 0xFA	; 250
    3022:	54 e4       	ldi	r21, 0x44	; 68
    3024:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3028:	dc 01       	movw	r26, r24
    302a:	cb 01       	movw	r24, r22
    302c:	f8 01       	movw	r30, r16
    302e:	80 83       	st	Z, r24
    3030:	91 83       	std	Z+1, r25	; 0x01
    3032:	a2 83       	std	Z+2, r26	; 0x02
    3034:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3036:	fe 01       	movw	r30, r28
    3038:	e5 5e       	subi	r30, 0xE5	; 229
    303a:	fd 4f       	sbci	r31, 0xFD	; 253
    303c:	60 81       	ld	r22, Z
    303e:	71 81       	ldd	r23, Z+1	; 0x01
    3040:	82 81       	ldd	r24, Z+2	; 0x02
    3042:	93 81       	ldd	r25, Z+3	; 0x03
    3044:	20 e0       	ldi	r18, 0x00	; 0
    3046:	30 e0       	ldi	r19, 0x00	; 0
    3048:	40 e8       	ldi	r20, 0x80	; 128
    304a:	5f e3       	ldi	r21, 0x3F	; 63
    304c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3050:	88 23       	and	r24, r24
    3052:	44 f4       	brge	.+16     	; 0x3064 <main+0x15f4>
		__ticks = 1;
    3054:	fe 01       	movw	r30, r28
    3056:	e7 5e       	subi	r30, 0xE7	; 231
    3058:	fd 4f       	sbci	r31, 0xFD	; 253
    305a:	81 e0       	ldi	r24, 0x01	; 1
    305c:	90 e0       	ldi	r25, 0x00	; 0
    305e:	91 83       	std	Z+1, r25	; 0x01
    3060:	80 83       	st	Z, r24
    3062:	64 c0       	rjmp	.+200    	; 0x312c <main+0x16bc>
	else if (__tmp > 65535)
    3064:	fe 01       	movw	r30, r28
    3066:	e5 5e       	subi	r30, 0xE5	; 229
    3068:	fd 4f       	sbci	r31, 0xFD	; 253
    306a:	60 81       	ld	r22, Z
    306c:	71 81       	ldd	r23, Z+1	; 0x01
    306e:	82 81       	ldd	r24, Z+2	; 0x02
    3070:	93 81       	ldd	r25, Z+3	; 0x03
    3072:	20 e0       	ldi	r18, 0x00	; 0
    3074:	3f ef       	ldi	r19, 0xFF	; 255
    3076:	4f e7       	ldi	r20, 0x7F	; 127
    3078:	57 e4       	ldi	r21, 0x47	; 71
    307a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    307e:	18 16       	cp	r1, r24
    3080:	0c f0       	brlt	.+2      	; 0x3084 <main+0x1614>
    3082:	43 c0       	rjmp	.+134    	; 0x310a <main+0x169a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3084:	fe 01       	movw	r30, r28
    3086:	e1 5e       	subi	r30, 0xE1	; 225
    3088:	fd 4f       	sbci	r31, 0xFD	; 253
    308a:	60 81       	ld	r22, Z
    308c:	71 81       	ldd	r23, Z+1	; 0x01
    308e:	82 81       	ldd	r24, Z+2	; 0x02
    3090:	93 81       	ldd	r25, Z+3	; 0x03
    3092:	20 e0       	ldi	r18, 0x00	; 0
    3094:	30 e0       	ldi	r19, 0x00	; 0
    3096:	40 e2       	ldi	r20, 0x20	; 32
    3098:	51 e4       	ldi	r21, 0x41	; 65
    309a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    309e:	dc 01       	movw	r26, r24
    30a0:	cb 01       	movw	r24, r22
    30a2:	8e 01       	movw	r16, r28
    30a4:	07 5e       	subi	r16, 0xE7	; 231
    30a6:	1d 4f       	sbci	r17, 0xFD	; 253
    30a8:	bc 01       	movw	r22, r24
    30aa:	cd 01       	movw	r24, r26
    30ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30b0:	dc 01       	movw	r26, r24
    30b2:	cb 01       	movw	r24, r22
    30b4:	f8 01       	movw	r30, r16
    30b6:	91 83       	std	Z+1, r25	; 0x01
    30b8:	80 83       	st	Z, r24
    30ba:	1f c0       	rjmp	.+62     	; 0x30fa <main+0x168a>
    30bc:	fe 01       	movw	r30, r28
    30be:	e9 5e       	subi	r30, 0xE9	; 233
    30c0:	fd 4f       	sbci	r31, 0xFD	; 253
    30c2:	88 ec       	ldi	r24, 0xC8	; 200
    30c4:	90 e0       	ldi	r25, 0x00	; 0
    30c6:	91 83       	std	Z+1, r25	; 0x01
    30c8:	80 83       	st	Z, r24
    30ca:	fe 01       	movw	r30, r28
    30cc:	e9 5e       	subi	r30, 0xE9	; 233
    30ce:	fd 4f       	sbci	r31, 0xFD	; 253
    30d0:	80 81       	ld	r24, Z
    30d2:	91 81       	ldd	r25, Z+1	; 0x01
    30d4:	01 97       	sbiw	r24, 0x01	; 1
    30d6:	f1 f7       	brne	.-4      	; 0x30d4 <main+0x1664>
    30d8:	fe 01       	movw	r30, r28
    30da:	e9 5e       	subi	r30, 0xE9	; 233
    30dc:	fd 4f       	sbci	r31, 0xFD	; 253
    30de:	91 83       	std	Z+1, r25	; 0x01
    30e0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30e2:	de 01       	movw	r26, r28
    30e4:	a7 5e       	subi	r26, 0xE7	; 231
    30e6:	bd 4f       	sbci	r27, 0xFD	; 253
    30e8:	fe 01       	movw	r30, r28
    30ea:	e7 5e       	subi	r30, 0xE7	; 231
    30ec:	fd 4f       	sbci	r31, 0xFD	; 253
    30ee:	80 81       	ld	r24, Z
    30f0:	91 81       	ldd	r25, Z+1	; 0x01
    30f2:	01 97       	sbiw	r24, 0x01	; 1
    30f4:	11 96       	adiw	r26, 0x01	; 1
    30f6:	9c 93       	st	X, r25
    30f8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30fa:	fe 01       	movw	r30, r28
    30fc:	e7 5e       	subi	r30, 0xE7	; 231
    30fe:	fd 4f       	sbci	r31, 0xFD	; 253
    3100:	80 81       	ld	r24, Z
    3102:	91 81       	ldd	r25, Z+1	; 0x01
    3104:	00 97       	sbiw	r24, 0x00	; 0
    3106:	d1 f6       	brne	.-76     	; 0x30bc <main+0x164c>
    3108:	27 c0       	rjmp	.+78     	; 0x3158 <main+0x16e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    310a:	8e 01       	movw	r16, r28
    310c:	07 5e       	subi	r16, 0xE7	; 231
    310e:	1d 4f       	sbci	r17, 0xFD	; 253
    3110:	fe 01       	movw	r30, r28
    3112:	e5 5e       	subi	r30, 0xE5	; 229
    3114:	fd 4f       	sbci	r31, 0xFD	; 253
    3116:	60 81       	ld	r22, Z
    3118:	71 81       	ldd	r23, Z+1	; 0x01
    311a:	82 81       	ldd	r24, Z+2	; 0x02
    311c:	93 81       	ldd	r25, Z+3	; 0x03
    311e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3122:	dc 01       	movw	r26, r24
    3124:	cb 01       	movw	r24, r22
    3126:	f8 01       	movw	r30, r16
    3128:	91 83       	std	Z+1, r25	; 0x01
    312a:	80 83       	st	Z, r24
    312c:	de 01       	movw	r26, r28
    312e:	ab 5e       	subi	r26, 0xEB	; 235
    3130:	bd 4f       	sbci	r27, 0xFD	; 253
    3132:	fe 01       	movw	r30, r28
    3134:	e7 5e       	subi	r30, 0xE7	; 231
    3136:	fd 4f       	sbci	r31, 0xFD	; 253
    3138:	80 81       	ld	r24, Z
    313a:	91 81       	ldd	r25, Z+1	; 0x01
    313c:	8d 93       	st	X+, r24
    313e:	9c 93       	st	X, r25
    3140:	fe 01       	movw	r30, r28
    3142:	eb 5e       	subi	r30, 0xEB	; 235
    3144:	fd 4f       	sbci	r31, 0xFD	; 253
    3146:	80 81       	ld	r24, Z
    3148:	91 81       	ldd	r25, Z+1	; 0x01
    314a:	01 97       	sbiw	r24, 0x01	; 1
    314c:	f1 f7       	brne	.-4      	; 0x314a <main+0x16da>
    314e:	fe 01       	movw	r30, r28
    3150:	eb 5e       	subi	r30, 0xEB	; 235
    3152:	fd 4f       	sbci	r31, 0xFD	; 253
    3154:	91 83       	std	Z+1, r25	; 0x01
    3156:	80 83       	st	Z, r24
		_delay_ms(10);


		CLCD_u8WriteSpecialCharacter(Pattern4,3,1,11);
    3158:	ce 01       	movw	r24, r28
    315a:	8a 5f       	subi	r24, 0xFA	; 250
    315c:	9c 4f       	sbci	r25, 0xFC	; 252
    315e:	63 e0       	ldi	r22, 0x03	; 3
    3160:	41 e0       	ldi	r20, 0x01	; 1
    3162:	2b e0       	ldi	r18, 0x0B	; 11
    3164:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
    3168:	ce 01       	movw	r24, r28
    316a:	82 51       	subi	r24, 0x12	; 18
    316c:	9d 4f       	sbci	r25, 0xFD	; 253
    316e:	62 e0       	ldi	r22, 0x02	; 2
    3170:	41 e0       	ldi	r20, 0x01	; 1
    3172:	2a e0       	ldi	r18, 0x0A	; 10
    3174:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>

		CLCD_u8SendCommand(0b00000001);
    3178:	81 e0       	ldi	r24, 0x01	; 1
    317a:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8SendString(dance);
    317e:	ce 01       	movw	r24, r28
    3180:	87 54       	subi	r24, 0x47	; 71
    3182:	9d 4f       	sbci	r25, 0xFD	; 253
    3184:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8WriteSpecialCharacter(Pattern5,0,1,7);
    3188:	ce 01       	movw	r24, r28
    318a:	82 5f       	subi	r24, 0xF2	; 242
    318c:	9c 4f       	sbci	r25, 0xFC	; 252
    318e:	60 e0       	ldi	r22, 0x00	; 0
    3190:	41 e0       	ldi	r20, 0x01	; 1
    3192:	27 e0       	ldi	r18, 0x07	; 7
    3194:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3198:	fe 01       	movw	r30, r28
    319a:	ef 5e       	subi	r30, 0xEF	; 239
    319c:	fd 4f       	sbci	r31, 0xFD	; 253
    319e:	80 e0       	ldi	r24, 0x00	; 0
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	a0 e2       	ldi	r26, 0x20	; 32
    31a4:	b1 e4       	ldi	r27, 0x41	; 65
    31a6:	80 83       	st	Z, r24
    31a8:	91 83       	std	Z+1, r25	; 0x01
    31aa:	a2 83       	std	Z+2, r26	; 0x02
    31ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31ae:	8e 01       	movw	r16, r28
    31b0:	03 5f       	subi	r16, 0xF3	; 243
    31b2:	1d 4f       	sbci	r17, 0xFD	; 253
    31b4:	fe 01       	movw	r30, r28
    31b6:	ef 5e       	subi	r30, 0xEF	; 239
    31b8:	fd 4f       	sbci	r31, 0xFD	; 253
    31ba:	60 81       	ld	r22, Z
    31bc:	71 81       	ldd	r23, Z+1	; 0x01
    31be:	82 81       	ldd	r24, Z+2	; 0x02
    31c0:	93 81       	ldd	r25, Z+3	; 0x03
    31c2:	20 e0       	ldi	r18, 0x00	; 0
    31c4:	30 e0       	ldi	r19, 0x00	; 0
    31c6:	4a ef       	ldi	r20, 0xFA	; 250
    31c8:	54 e4       	ldi	r21, 0x44	; 68
    31ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31ce:	dc 01       	movw	r26, r24
    31d0:	cb 01       	movw	r24, r22
    31d2:	f8 01       	movw	r30, r16
    31d4:	80 83       	st	Z, r24
    31d6:	91 83       	std	Z+1, r25	; 0x01
    31d8:	a2 83       	std	Z+2, r26	; 0x02
    31da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31dc:	fe 01       	movw	r30, r28
    31de:	e3 5f       	subi	r30, 0xF3	; 243
    31e0:	fd 4f       	sbci	r31, 0xFD	; 253
    31e2:	60 81       	ld	r22, Z
    31e4:	71 81       	ldd	r23, Z+1	; 0x01
    31e6:	82 81       	ldd	r24, Z+2	; 0x02
    31e8:	93 81       	ldd	r25, Z+3	; 0x03
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	30 e0       	ldi	r19, 0x00	; 0
    31ee:	40 e8       	ldi	r20, 0x80	; 128
    31f0:	5f e3       	ldi	r21, 0x3F	; 63
    31f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    31f6:	88 23       	and	r24, r24
    31f8:	44 f4       	brge	.+16     	; 0x320a <main+0x179a>
		__ticks = 1;
    31fa:	fe 01       	movw	r30, r28
    31fc:	e5 5f       	subi	r30, 0xF5	; 245
    31fe:	fd 4f       	sbci	r31, 0xFD	; 253
    3200:	81 e0       	ldi	r24, 0x01	; 1
    3202:	90 e0       	ldi	r25, 0x00	; 0
    3204:	91 83       	std	Z+1, r25	; 0x01
    3206:	80 83       	st	Z, r24
    3208:	64 c0       	rjmp	.+200    	; 0x32d2 <main+0x1862>
	else if (__tmp > 65535)
    320a:	fe 01       	movw	r30, r28
    320c:	e3 5f       	subi	r30, 0xF3	; 243
    320e:	fd 4f       	sbci	r31, 0xFD	; 253
    3210:	60 81       	ld	r22, Z
    3212:	71 81       	ldd	r23, Z+1	; 0x01
    3214:	82 81       	ldd	r24, Z+2	; 0x02
    3216:	93 81       	ldd	r25, Z+3	; 0x03
    3218:	20 e0       	ldi	r18, 0x00	; 0
    321a:	3f ef       	ldi	r19, 0xFF	; 255
    321c:	4f e7       	ldi	r20, 0x7F	; 127
    321e:	57 e4       	ldi	r21, 0x47	; 71
    3220:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3224:	18 16       	cp	r1, r24
    3226:	0c f0       	brlt	.+2      	; 0x322a <main+0x17ba>
    3228:	43 c0       	rjmp	.+134    	; 0x32b0 <main+0x1840>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    322a:	fe 01       	movw	r30, r28
    322c:	ef 5e       	subi	r30, 0xEF	; 239
    322e:	fd 4f       	sbci	r31, 0xFD	; 253
    3230:	60 81       	ld	r22, Z
    3232:	71 81       	ldd	r23, Z+1	; 0x01
    3234:	82 81       	ldd	r24, Z+2	; 0x02
    3236:	93 81       	ldd	r25, Z+3	; 0x03
    3238:	20 e0       	ldi	r18, 0x00	; 0
    323a:	30 e0       	ldi	r19, 0x00	; 0
    323c:	40 e2       	ldi	r20, 0x20	; 32
    323e:	51 e4       	ldi	r21, 0x41	; 65
    3240:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3244:	dc 01       	movw	r26, r24
    3246:	cb 01       	movw	r24, r22
    3248:	8e 01       	movw	r16, r28
    324a:	05 5f       	subi	r16, 0xF5	; 245
    324c:	1d 4f       	sbci	r17, 0xFD	; 253
    324e:	bc 01       	movw	r22, r24
    3250:	cd 01       	movw	r24, r26
    3252:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3256:	dc 01       	movw	r26, r24
    3258:	cb 01       	movw	r24, r22
    325a:	f8 01       	movw	r30, r16
    325c:	91 83       	std	Z+1, r25	; 0x01
    325e:	80 83       	st	Z, r24
    3260:	1f c0       	rjmp	.+62     	; 0x32a0 <main+0x1830>
    3262:	fe 01       	movw	r30, r28
    3264:	e7 5f       	subi	r30, 0xF7	; 247
    3266:	fd 4f       	sbci	r31, 0xFD	; 253
    3268:	88 ec       	ldi	r24, 0xC8	; 200
    326a:	90 e0       	ldi	r25, 0x00	; 0
    326c:	91 83       	std	Z+1, r25	; 0x01
    326e:	80 83       	st	Z, r24
    3270:	fe 01       	movw	r30, r28
    3272:	e7 5f       	subi	r30, 0xF7	; 247
    3274:	fd 4f       	sbci	r31, 0xFD	; 253
    3276:	80 81       	ld	r24, Z
    3278:	91 81       	ldd	r25, Z+1	; 0x01
    327a:	01 97       	sbiw	r24, 0x01	; 1
    327c:	f1 f7       	brne	.-4      	; 0x327a <main+0x180a>
    327e:	fe 01       	movw	r30, r28
    3280:	e7 5f       	subi	r30, 0xF7	; 247
    3282:	fd 4f       	sbci	r31, 0xFD	; 253
    3284:	91 83       	std	Z+1, r25	; 0x01
    3286:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3288:	de 01       	movw	r26, r28
    328a:	a5 5f       	subi	r26, 0xF5	; 245
    328c:	bd 4f       	sbci	r27, 0xFD	; 253
    328e:	fe 01       	movw	r30, r28
    3290:	e5 5f       	subi	r30, 0xF5	; 245
    3292:	fd 4f       	sbci	r31, 0xFD	; 253
    3294:	80 81       	ld	r24, Z
    3296:	91 81       	ldd	r25, Z+1	; 0x01
    3298:	01 97       	sbiw	r24, 0x01	; 1
    329a:	11 96       	adiw	r26, 0x01	; 1
    329c:	9c 93       	st	X, r25
    329e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32a0:	fe 01       	movw	r30, r28
    32a2:	e5 5f       	subi	r30, 0xF5	; 245
    32a4:	fd 4f       	sbci	r31, 0xFD	; 253
    32a6:	80 81       	ld	r24, Z
    32a8:	91 81       	ldd	r25, Z+1	; 0x01
    32aa:	00 97       	sbiw	r24, 0x00	; 0
    32ac:	d1 f6       	brne	.-76     	; 0x3262 <main+0x17f2>
    32ae:	27 c0       	rjmp	.+78     	; 0x32fe <main+0x188e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32b0:	8e 01       	movw	r16, r28
    32b2:	05 5f       	subi	r16, 0xF5	; 245
    32b4:	1d 4f       	sbci	r17, 0xFD	; 253
    32b6:	fe 01       	movw	r30, r28
    32b8:	e3 5f       	subi	r30, 0xF3	; 243
    32ba:	fd 4f       	sbci	r31, 0xFD	; 253
    32bc:	60 81       	ld	r22, Z
    32be:	71 81       	ldd	r23, Z+1	; 0x01
    32c0:	82 81       	ldd	r24, Z+2	; 0x02
    32c2:	93 81       	ldd	r25, Z+3	; 0x03
    32c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32c8:	dc 01       	movw	r26, r24
    32ca:	cb 01       	movw	r24, r22
    32cc:	f8 01       	movw	r30, r16
    32ce:	91 83       	std	Z+1, r25	; 0x01
    32d0:	80 83       	st	Z, r24
    32d2:	de 01       	movw	r26, r28
    32d4:	a9 5f       	subi	r26, 0xF9	; 249
    32d6:	bd 4f       	sbci	r27, 0xFD	; 253
    32d8:	fe 01       	movw	r30, r28
    32da:	e5 5f       	subi	r30, 0xF5	; 245
    32dc:	fd 4f       	sbci	r31, 0xFD	; 253
    32de:	80 81       	ld	r24, Z
    32e0:	91 81       	ldd	r25, Z+1	; 0x01
    32e2:	8d 93       	st	X+, r24
    32e4:	9c 93       	st	X, r25
    32e6:	fe 01       	movw	r30, r28
    32e8:	e9 5f       	subi	r30, 0xF9	; 249
    32ea:	fd 4f       	sbci	r31, 0xFD	; 253
    32ec:	80 81       	ld	r24, Z
    32ee:	91 81       	ldd	r25, Z+1	; 0x01
    32f0:	01 97       	sbiw	r24, 0x01	; 1
    32f2:	f1 f7       	brne	.-4      	; 0x32f0 <main+0x1880>
    32f4:	fe 01       	movw	r30, r28
    32f6:	e9 5f       	subi	r30, 0xF9	; 249
    32f8:	fd 4f       	sbci	r31, 0xFD	; 253
    32fa:	91 83       	std	Z+1, r25	; 0x01
    32fc:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
    32fe:	ce 01       	movw	r24, r28
    3300:	8a 5e       	subi	r24, 0xEA	; 234
    3302:	9c 4f       	sbci	r25, 0xFC	; 252
    3304:	60 e0       	ldi	r22, 0x00	; 0
    3306:	41 e0       	ldi	r20, 0x01	; 1
    3308:	27 e0       	ldi	r18, 0x07	; 7
    330a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    330e:	fe 01       	movw	r30, r28
    3310:	ed 5f       	subi	r30, 0xFD	; 253
    3312:	fd 4f       	sbci	r31, 0xFD	; 253
    3314:	80 e0       	ldi	r24, 0x00	; 0
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	a0 e2       	ldi	r26, 0x20	; 32
    331a:	b1 e4       	ldi	r27, 0x41	; 65
    331c:	80 83       	st	Z, r24
    331e:	91 83       	std	Z+1, r25	; 0x01
    3320:	a2 83       	std	Z+2, r26	; 0x02
    3322:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3324:	8e 01       	movw	r16, r28
    3326:	01 50       	subi	r16, 0x01	; 1
    3328:	1e 4f       	sbci	r17, 0xFE	; 254
    332a:	fe 01       	movw	r30, r28
    332c:	ed 5f       	subi	r30, 0xFD	; 253
    332e:	fd 4f       	sbci	r31, 0xFD	; 253
    3330:	60 81       	ld	r22, Z
    3332:	71 81       	ldd	r23, Z+1	; 0x01
    3334:	82 81       	ldd	r24, Z+2	; 0x02
    3336:	93 81       	ldd	r25, Z+3	; 0x03
    3338:	20 e0       	ldi	r18, 0x00	; 0
    333a:	30 e0       	ldi	r19, 0x00	; 0
    333c:	4a ef       	ldi	r20, 0xFA	; 250
    333e:	54 e4       	ldi	r21, 0x44	; 68
    3340:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3344:	dc 01       	movw	r26, r24
    3346:	cb 01       	movw	r24, r22
    3348:	f8 01       	movw	r30, r16
    334a:	80 83       	st	Z, r24
    334c:	91 83       	std	Z+1, r25	; 0x01
    334e:	a2 83       	std	Z+2, r26	; 0x02
    3350:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3352:	fe 01       	movw	r30, r28
    3354:	e1 50       	subi	r30, 0x01	; 1
    3356:	fe 4f       	sbci	r31, 0xFE	; 254
    3358:	60 81       	ld	r22, Z
    335a:	71 81       	ldd	r23, Z+1	; 0x01
    335c:	82 81       	ldd	r24, Z+2	; 0x02
    335e:	93 81       	ldd	r25, Z+3	; 0x03
    3360:	20 e0       	ldi	r18, 0x00	; 0
    3362:	30 e0       	ldi	r19, 0x00	; 0
    3364:	40 e8       	ldi	r20, 0x80	; 128
    3366:	5f e3       	ldi	r21, 0x3F	; 63
    3368:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    336c:	88 23       	and	r24, r24
    336e:	44 f4       	brge	.+16     	; 0x3380 <main+0x1910>
		__ticks = 1;
    3370:	fe 01       	movw	r30, r28
    3372:	e3 50       	subi	r30, 0x03	; 3
    3374:	fe 4f       	sbci	r31, 0xFE	; 254
    3376:	81 e0       	ldi	r24, 0x01	; 1
    3378:	90 e0       	ldi	r25, 0x00	; 0
    337a:	91 83       	std	Z+1, r25	; 0x01
    337c:	80 83       	st	Z, r24
    337e:	64 c0       	rjmp	.+200    	; 0x3448 <main+0x19d8>
	else if (__tmp > 65535)
    3380:	fe 01       	movw	r30, r28
    3382:	e1 50       	subi	r30, 0x01	; 1
    3384:	fe 4f       	sbci	r31, 0xFE	; 254
    3386:	60 81       	ld	r22, Z
    3388:	71 81       	ldd	r23, Z+1	; 0x01
    338a:	82 81       	ldd	r24, Z+2	; 0x02
    338c:	93 81       	ldd	r25, Z+3	; 0x03
    338e:	20 e0       	ldi	r18, 0x00	; 0
    3390:	3f ef       	ldi	r19, 0xFF	; 255
    3392:	4f e7       	ldi	r20, 0x7F	; 127
    3394:	57 e4       	ldi	r21, 0x47	; 71
    3396:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    339a:	18 16       	cp	r1, r24
    339c:	0c f0       	brlt	.+2      	; 0x33a0 <main+0x1930>
    339e:	43 c0       	rjmp	.+134    	; 0x3426 <main+0x19b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33a0:	fe 01       	movw	r30, r28
    33a2:	ed 5f       	subi	r30, 0xFD	; 253
    33a4:	fd 4f       	sbci	r31, 0xFD	; 253
    33a6:	60 81       	ld	r22, Z
    33a8:	71 81       	ldd	r23, Z+1	; 0x01
    33aa:	82 81       	ldd	r24, Z+2	; 0x02
    33ac:	93 81       	ldd	r25, Z+3	; 0x03
    33ae:	20 e0       	ldi	r18, 0x00	; 0
    33b0:	30 e0       	ldi	r19, 0x00	; 0
    33b2:	40 e2       	ldi	r20, 0x20	; 32
    33b4:	51 e4       	ldi	r21, 0x41	; 65
    33b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33ba:	dc 01       	movw	r26, r24
    33bc:	cb 01       	movw	r24, r22
    33be:	8e 01       	movw	r16, r28
    33c0:	03 50       	subi	r16, 0x03	; 3
    33c2:	1e 4f       	sbci	r17, 0xFE	; 254
    33c4:	bc 01       	movw	r22, r24
    33c6:	cd 01       	movw	r24, r26
    33c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33cc:	dc 01       	movw	r26, r24
    33ce:	cb 01       	movw	r24, r22
    33d0:	f8 01       	movw	r30, r16
    33d2:	91 83       	std	Z+1, r25	; 0x01
    33d4:	80 83       	st	Z, r24
    33d6:	1f c0       	rjmp	.+62     	; 0x3416 <main+0x19a6>
    33d8:	fe 01       	movw	r30, r28
    33da:	e5 50       	subi	r30, 0x05	; 5
    33dc:	fe 4f       	sbci	r31, 0xFE	; 254
    33de:	88 ec       	ldi	r24, 0xC8	; 200
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	91 83       	std	Z+1, r25	; 0x01
    33e4:	80 83       	st	Z, r24
    33e6:	fe 01       	movw	r30, r28
    33e8:	e5 50       	subi	r30, 0x05	; 5
    33ea:	fe 4f       	sbci	r31, 0xFE	; 254
    33ec:	80 81       	ld	r24, Z
    33ee:	91 81       	ldd	r25, Z+1	; 0x01
    33f0:	01 97       	sbiw	r24, 0x01	; 1
    33f2:	f1 f7       	brne	.-4      	; 0x33f0 <main+0x1980>
    33f4:	fe 01       	movw	r30, r28
    33f6:	e5 50       	subi	r30, 0x05	; 5
    33f8:	fe 4f       	sbci	r31, 0xFE	; 254
    33fa:	91 83       	std	Z+1, r25	; 0x01
    33fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33fe:	de 01       	movw	r26, r28
    3400:	a3 50       	subi	r26, 0x03	; 3
    3402:	be 4f       	sbci	r27, 0xFE	; 254
    3404:	fe 01       	movw	r30, r28
    3406:	e3 50       	subi	r30, 0x03	; 3
    3408:	fe 4f       	sbci	r31, 0xFE	; 254
    340a:	80 81       	ld	r24, Z
    340c:	91 81       	ldd	r25, Z+1	; 0x01
    340e:	01 97       	sbiw	r24, 0x01	; 1
    3410:	11 96       	adiw	r26, 0x01	; 1
    3412:	9c 93       	st	X, r25
    3414:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3416:	fe 01       	movw	r30, r28
    3418:	e3 50       	subi	r30, 0x03	; 3
    341a:	fe 4f       	sbci	r31, 0xFE	; 254
    341c:	80 81       	ld	r24, Z
    341e:	91 81       	ldd	r25, Z+1	; 0x01
    3420:	00 97       	sbiw	r24, 0x00	; 0
    3422:	d1 f6       	brne	.-76     	; 0x33d8 <main+0x1968>
    3424:	27 c0       	rjmp	.+78     	; 0x3474 <main+0x1a04>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3426:	8e 01       	movw	r16, r28
    3428:	03 50       	subi	r16, 0x03	; 3
    342a:	1e 4f       	sbci	r17, 0xFE	; 254
    342c:	fe 01       	movw	r30, r28
    342e:	e1 50       	subi	r30, 0x01	; 1
    3430:	fe 4f       	sbci	r31, 0xFE	; 254
    3432:	60 81       	ld	r22, Z
    3434:	71 81       	ldd	r23, Z+1	; 0x01
    3436:	82 81       	ldd	r24, Z+2	; 0x02
    3438:	93 81       	ldd	r25, Z+3	; 0x03
    343a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    343e:	dc 01       	movw	r26, r24
    3440:	cb 01       	movw	r24, r22
    3442:	f8 01       	movw	r30, r16
    3444:	91 83       	std	Z+1, r25	; 0x01
    3446:	80 83       	st	Z, r24
    3448:	de 01       	movw	r26, r28
    344a:	a7 50       	subi	r26, 0x07	; 7
    344c:	be 4f       	sbci	r27, 0xFE	; 254
    344e:	fe 01       	movw	r30, r28
    3450:	e3 50       	subi	r30, 0x03	; 3
    3452:	fe 4f       	sbci	r31, 0xFE	; 254
    3454:	80 81       	ld	r24, Z
    3456:	91 81       	ldd	r25, Z+1	; 0x01
    3458:	8d 93       	st	X+, r24
    345a:	9c 93       	st	X, r25
    345c:	fe 01       	movw	r30, r28
    345e:	e7 50       	subi	r30, 0x07	; 7
    3460:	fe 4f       	sbci	r31, 0xFE	; 254
    3462:	80 81       	ld	r24, Z
    3464:	91 81       	ldd	r25, Z+1	; 0x01
    3466:	01 97       	sbiw	r24, 0x01	; 1
    3468:	f1 f7       	brne	.-4      	; 0x3466 <main+0x19f6>
    346a:	fe 01       	movw	r30, r28
    346c:	e7 50       	subi	r30, 0x07	; 7
    346e:	fe 4f       	sbci	r31, 0xFE	; 254
    3470:	91 83       	std	Z+1, r25	; 0x01
    3472:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8WriteSpecialCharacter(Pattern5,0,1,7);
    3474:	ce 01       	movw	r24, r28
    3476:	82 5f       	subi	r24, 0xF2	; 242
    3478:	9c 4f       	sbci	r25, 0xFC	; 252
    347a:	60 e0       	ldi	r22, 0x00	; 0
    347c:	41 e0       	ldi	r20, 0x01	; 1
    347e:	27 e0       	ldi	r18, 0x07	; 7
    3480:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3484:	fe 01       	movw	r30, r28
    3486:	eb 50       	subi	r30, 0x0B	; 11
    3488:	fe 4f       	sbci	r31, 0xFE	; 254
    348a:	80 e0       	ldi	r24, 0x00	; 0
    348c:	90 e0       	ldi	r25, 0x00	; 0
    348e:	a0 e2       	ldi	r26, 0x20	; 32
    3490:	b1 e4       	ldi	r27, 0x41	; 65
    3492:	80 83       	st	Z, r24
    3494:	91 83       	std	Z+1, r25	; 0x01
    3496:	a2 83       	std	Z+2, r26	; 0x02
    3498:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    349a:	8e 01       	movw	r16, r28
    349c:	0f 50       	subi	r16, 0x0F	; 15
    349e:	1e 4f       	sbci	r17, 0xFE	; 254
    34a0:	fe 01       	movw	r30, r28
    34a2:	eb 50       	subi	r30, 0x0B	; 11
    34a4:	fe 4f       	sbci	r31, 0xFE	; 254
    34a6:	60 81       	ld	r22, Z
    34a8:	71 81       	ldd	r23, Z+1	; 0x01
    34aa:	82 81       	ldd	r24, Z+2	; 0x02
    34ac:	93 81       	ldd	r25, Z+3	; 0x03
    34ae:	20 e0       	ldi	r18, 0x00	; 0
    34b0:	30 e0       	ldi	r19, 0x00	; 0
    34b2:	4a ef       	ldi	r20, 0xFA	; 250
    34b4:	54 e4       	ldi	r21, 0x44	; 68
    34b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34ba:	dc 01       	movw	r26, r24
    34bc:	cb 01       	movw	r24, r22
    34be:	f8 01       	movw	r30, r16
    34c0:	80 83       	st	Z, r24
    34c2:	91 83       	std	Z+1, r25	; 0x01
    34c4:	a2 83       	std	Z+2, r26	; 0x02
    34c6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34c8:	fe 01       	movw	r30, r28
    34ca:	ef 50       	subi	r30, 0x0F	; 15
    34cc:	fe 4f       	sbci	r31, 0xFE	; 254
    34ce:	60 81       	ld	r22, Z
    34d0:	71 81       	ldd	r23, Z+1	; 0x01
    34d2:	82 81       	ldd	r24, Z+2	; 0x02
    34d4:	93 81       	ldd	r25, Z+3	; 0x03
    34d6:	20 e0       	ldi	r18, 0x00	; 0
    34d8:	30 e0       	ldi	r19, 0x00	; 0
    34da:	40 e8       	ldi	r20, 0x80	; 128
    34dc:	5f e3       	ldi	r21, 0x3F	; 63
    34de:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    34e2:	88 23       	and	r24, r24
    34e4:	44 f4       	brge	.+16     	; 0x34f6 <main+0x1a86>
		__ticks = 1;
    34e6:	fe 01       	movw	r30, r28
    34e8:	e1 51       	subi	r30, 0x11	; 17
    34ea:	fe 4f       	sbci	r31, 0xFE	; 254
    34ec:	81 e0       	ldi	r24, 0x01	; 1
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	91 83       	std	Z+1, r25	; 0x01
    34f2:	80 83       	st	Z, r24
    34f4:	64 c0       	rjmp	.+200    	; 0x35be <main+0x1b4e>
	else if (__tmp > 65535)
    34f6:	fe 01       	movw	r30, r28
    34f8:	ef 50       	subi	r30, 0x0F	; 15
    34fa:	fe 4f       	sbci	r31, 0xFE	; 254
    34fc:	60 81       	ld	r22, Z
    34fe:	71 81       	ldd	r23, Z+1	; 0x01
    3500:	82 81       	ldd	r24, Z+2	; 0x02
    3502:	93 81       	ldd	r25, Z+3	; 0x03
    3504:	20 e0       	ldi	r18, 0x00	; 0
    3506:	3f ef       	ldi	r19, 0xFF	; 255
    3508:	4f e7       	ldi	r20, 0x7F	; 127
    350a:	57 e4       	ldi	r21, 0x47	; 71
    350c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3510:	18 16       	cp	r1, r24
    3512:	0c f0       	brlt	.+2      	; 0x3516 <main+0x1aa6>
    3514:	43 c0       	rjmp	.+134    	; 0x359c <main+0x1b2c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3516:	fe 01       	movw	r30, r28
    3518:	eb 50       	subi	r30, 0x0B	; 11
    351a:	fe 4f       	sbci	r31, 0xFE	; 254
    351c:	60 81       	ld	r22, Z
    351e:	71 81       	ldd	r23, Z+1	; 0x01
    3520:	82 81       	ldd	r24, Z+2	; 0x02
    3522:	93 81       	ldd	r25, Z+3	; 0x03
    3524:	20 e0       	ldi	r18, 0x00	; 0
    3526:	30 e0       	ldi	r19, 0x00	; 0
    3528:	40 e2       	ldi	r20, 0x20	; 32
    352a:	51 e4       	ldi	r21, 0x41	; 65
    352c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3530:	dc 01       	movw	r26, r24
    3532:	cb 01       	movw	r24, r22
    3534:	8e 01       	movw	r16, r28
    3536:	01 51       	subi	r16, 0x11	; 17
    3538:	1e 4f       	sbci	r17, 0xFE	; 254
    353a:	bc 01       	movw	r22, r24
    353c:	cd 01       	movw	r24, r26
    353e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3542:	dc 01       	movw	r26, r24
    3544:	cb 01       	movw	r24, r22
    3546:	f8 01       	movw	r30, r16
    3548:	91 83       	std	Z+1, r25	; 0x01
    354a:	80 83       	st	Z, r24
    354c:	1f c0       	rjmp	.+62     	; 0x358c <main+0x1b1c>
    354e:	fe 01       	movw	r30, r28
    3550:	e3 51       	subi	r30, 0x13	; 19
    3552:	fe 4f       	sbci	r31, 0xFE	; 254
    3554:	88 ec       	ldi	r24, 0xC8	; 200
    3556:	90 e0       	ldi	r25, 0x00	; 0
    3558:	91 83       	std	Z+1, r25	; 0x01
    355a:	80 83       	st	Z, r24
    355c:	fe 01       	movw	r30, r28
    355e:	e3 51       	subi	r30, 0x13	; 19
    3560:	fe 4f       	sbci	r31, 0xFE	; 254
    3562:	80 81       	ld	r24, Z
    3564:	91 81       	ldd	r25, Z+1	; 0x01
    3566:	01 97       	sbiw	r24, 0x01	; 1
    3568:	f1 f7       	brne	.-4      	; 0x3566 <main+0x1af6>
    356a:	fe 01       	movw	r30, r28
    356c:	e3 51       	subi	r30, 0x13	; 19
    356e:	fe 4f       	sbci	r31, 0xFE	; 254
    3570:	91 83       	std	Z+1, r25	; 0x01
    3572:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3574:	de 01       	movw	r26, r28
    3576:	a1 51       	subi	r26, 0x11	; 17
    3578:	be 4f       	sbci	r27, 0xFE	; 254
    357a:	fe 01       	movw	r30, r28
    357c:	e1 51       	subi	r30, 0x11	; 17
    357e:	fe 4f       	sbci	r31, 0xFE	; 254
    3580:	80 81       	ld	r24, Z
    3582:	91 81       	ldd	r25, Z+1	; 0x01
    3584:	01 97       	sbiw	r24, 0x01	; 1
    3586:	11 96       	adiw	r26, 0x01	; 1
    3588:	9c 93       	st	X, r25
    358a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    358c:	fe 01       	movw	r30, r28
    358e:	e1 51       	subi	r30, 0x11	; 17
    3590:	fe 4f       	sbci	r31, 0xFE	; 254
    3592:	80 81       	ld	r24, Z
    3594:	91 81       	ldd	r25, Z+1	; 0x01
    3596:	00 97       	sbiw	r24, 0x00	; 0
    3598:	d1 f6       	brne	.-76     	; 0x354e <main+0x1ade>
    359a:	27 c0       	rjmp	.+78     	; 0x35ea <main+0x1b7a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    359c:	8e 01       	movw	r16, r28
    359e:	01 51       	subi	r16, 0x11	; 17
    35a0:	1e 4f       	sbci	r17, 0xFE	; 254
    35a2:	fe 01       	movw	r30, r28
    35a4:	ef 50       	subi	r30, 0x0F	; 15
    35a6:	fe 4f       	sbci	r31, 0xFE	; 254
    35a8:	60 81       	ld	r22, Z
    35aa:	71 81       	ldd	r23, Z+1	; 0x01
    35ac:	82 81       	ldd	r24, Z+2	; 0x02
    35ae:	93 81       	ldd	r25, Z+3	; 0x03
    35b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35b4:	dc 01       	movw	r26, r24
    35b6:	cb 01       	movw	r24, r22
    35b8:	f8 01       	movw	r30, r16
    35ba:	91 83       	std	Z+1, r25	; 0x01
    35bc:	80 83       	st	Z, r24
    35be:	de 01       	movw	r26, r28
    35c0:	a5 51       	subi	r26, 0x15	; 21
    35c2:	be 4f       	sbci	r27, 0xFE	; 254
    35c4:	fe 01       	movw	r30, r28
    35c6:	e1 51       	subi	r30, 0x11	; 17
    35c8:	fe 4f       	sbci	r31, 0xFE	; 254
    35ca:	80 81       	ld	r24, Z
    35cc:	91 81       	ldd	r25, Z+1	; 0x01
    35ce:	8d 93       	st	X+, r24
    35d0:	9c 93       	st	X, r25
    35d2:	fe 01       	movw	r30, r28
    35d4:	e5 51       	subi	r30, 0x15	; 21
    35d6:	fe 4f       	sbci	r31, 0xFE	; 254
    35d8:	80 81       	ld	r24, Z
    35da:	91 81       	ldd	r25, Z+1	; 0x01
    35dc:	01 97       	sbiw	r24, 0x01	; 1
    35de:	f1 f7       	brne	.-4      	; 0x35dc <main+0x1b6c>
    35e0:	fe 01       	movw	r30, r28
    35e2:	e5 51       	subi	r30, 0x15	; 21
    35e4:	fe 4f       	sbci	r31, 0xFE	; 254
    35e6:	91 83       	std	Z+1, r25	; 0x01
    35e8:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
    35ea:	ce 01       	movw	r24, r28
    35ec:	8a 5e       	subi	r24, 0xEA	; 234
    35ee:	9c 4f       	sbci	r25, 0xFC	; 252
    35f0:	60 e0       	ldi	r22, 0x00	; 0
    35f2:	41 e0       	ldi	r20, 0x01	; 1
    35f4:	27 e0       	ldi	r18, 0x07	; 7
    35f6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    35fa:	fe 01       	movw	r30, r28
    35fc:	e9 51       	subi	r30, 0x19	; 25
    35fe:	fe 4f       	sbci	r31, 0xFE	; 254
    3600:	80 e0       	ldi	r24, 0x00	; 0
    3602:	90 e0       	ldi	r25, 0x00	; 0
    3604:	a0 e2       	ldi	r26, 0x20	; 32
    3606:	b1 e4       	ldi	r27, 0x41	; 65
    3608:	80 83       	st	Z, r24
    360a:	91 83       	std	Z+1, r25	; 0x01
    360c:	a2 83       	std	Z+2, r26	; 0x02
    360e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3610:	8e 01       	movw	r16, r28
    3612:	0d 51       	subi	r16, 0x1D	; 29
    3614:	1e 4f       	sbci	r17, 0xFE	; 254
    3616:	fe 01       	movw	r30, r28
    3618:	e9 51       	subi	r30, 0x19	; 25
    361a:	fe 4f       	sbci	r31, 0xFE	; 254
    361c:	60 81       	ld	r22, Z
    361e:	71 81       	ldd	r23, Z+1	; 0x01
    3620:	82 81       	ldd	r24, Z+2	; 0x02
    3622:	93 81       	ldd	r25, Z+3	; 0x03
    3624:	20 e0       	ldi	r18, 0x00	; 0
    3626:	30 e0       	ldi	r19, 0x00	; 0
    3628:	4a ef       	ldi	r20, 0xFA	; 250
    362a:	54 e4       	ldi	r21, 0x44	; 68
    362c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3630:	dc 01       	movw	r26, r24
    3632:	cb 01       	movw	r24, r22
    3634:	f8 01       	movw	r30, r16
    3636:	80 83       	st	Z, r24
    3638:	91 83       	std	Z+1, r25	; 0x01
    363a:	a2 83       	std	Z+2, r26	; 0x02
    363c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    363e:	fe 01       	movw	r30, r28
    3640:	ed 51       	subi	r30, 0x1D	; 29
    3642:	fe 4f       	sbci	r31, 0xFE	; 254
    3644:	60 81       	ld	r22, Z
    3646:	71 81       	ldd	r23, Z+1	; 0x01
    3648:	82 81       	ldd	r24, Z+2	; 0x02
    364a:	93 81       	ldd	r25, Z+3	; 0x03
    364c:	20 e0       	ldi	r18, 0x00	; 0
    364e:	30 e0       	ldi	r19, 0x00	; 0
    3650:	40 e8       	ldi	r20, 0x80	; 128
    3652:	5f e3       	ldi	r21, 0x3F	; 63
    3654:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3658:	88 23       	and	r24, r24
    365a:	44 f4       	brge	.+16     	; 0x366c <main+0x1bfc>
		__ticks = 1;
    365c:	fe 01       	movw	r30, r28
    365e:	ef 51       	subi	r30, 0x1F	; 31
    3660:	fe 4f       	sbci	r31, 0xFE	; 254
    3662:	81 e0       	ldi	r24, 0x01	; 1
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	91 83       	std	Z+1, r25	; 0x01
    3668:	80 83       	st	Z, r24
    366a:	64 c0       	rjmp	.+200    	; 0x3734 <main+0x1cc4>
	else if (__tmp > 65535)
    366c:	fe 01       	movw	r30, r28
    366e:	ed 51       	subi	r30, 0x1D	; 29
    3670:	fe 4f       	sbci	r31, 0xFE	; 254
    3672:	60 81       	ld	r22, Z
    3674:	71 81       	ldd	r23, Z+1	; 0x01
    3676:	82 81       	ldd	r24, Z+2	; 0x02
    3678:	93 81       	ldd	r25, Z+3	; 0x03
    367a:	20 e0       	ldi	r18, 0x00	; 0
    367c:	3f ef       	ldi	r19, 0xFF	; 255
    367e:	4f e7       	ldi	r20, 0x7F	; 127
    3680:	57 e4       	ldi	r21, 0x47	; 71
    3682:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3686:	18 16       	cp	r1, r24
    3688:	0c f0       	brlt	.+2      	; 0x368c <main+0x1c1c>
    368a:	43 c0       	rjmp	.+134    	; 0x3712 <main+0x1ca2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    368c:	fe 01       	movw	r30, r28
    368e:	e9 51       	subi	r30, 0x19	; 25
    3690:	fe 4f       	sbci	r31, 0xFE	; 254
    3692:	60 81       	ld	r22, Z
    3694:	71 81       	ldd	r23, Z+1	; 0x01
    3696:	82 81       	ldd	r24, Z+2	; 0x02
    3698:	93 81       	ldd	r25, Z+3	; 0x03
    369a:	20 e0       	ldi	r18, 0x00	; 0
    369c:	30 e0       	ldi	r19, 0x00	; 0
    369e:	40 e2       	ldi	r20, 0x20	; 32
    36a0:	51 e4       	ldi	r21, 0x41	; 65
    36a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36a6:	dc 01       	movw	r26, r24
    36a8:	cb 01       	movw	r24, r22
    36aa:	8e 01       	movw	r16, r28
    36ac:	0f 51       	subi	r16, 0x1F	; 31
    36ae:	1e 4f       	sbci	r17, 0xFE	; 254
    36b0:	bc 01       	movw	r22, r24
    36b2:	cd 01       	movw	r24, r26
    36b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36b8:	dc 01       	movw	r26, r24
    36ba:	cb 01       	movw	r24, r22
    36bc:	f8 01       	movw	r30, r16
    36be:	91 83       	std	Z+1, r25	; 0x01
    36c0:	80 83       	st	Z, r24
    36c2:	1f c0       	rjmp	.+62     	; 0x3702 <main+0x1c92>
    36c4:	fe 01       	movw	r30, r28
    36c6:	e1 52       	subi	r30, 0x21	; 33
    36c8:	fe 4f       	sbci	r31, 0xFE	; 254
    36ca:	88 ec       	ldi	r24, 0xC8	; 200
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	91 83       	std	Z+1, r25	; 0x01
    36d0:	80 83       	st	Z, r24
    36d2:	fe 01       	movw	r30, r28
    36d4:	e1 52       	subi	r30, 0x21	; 33
    36d6:	fe 4f       	sbci	r31, 0xFE	; 254
    36d8:	80 81       	ld	r24, Z
    36da:	91 81       	ldd	r25, Z+1	; 0x01
    36dc:	01 97       	sbiw	r24, 0x01	; 1
    36de:	f1 f7       	brne	.-4      	; 0x36dc <main+0x1c6c>
    36e0:	fe 01       	movw	r30, r28
    36e2:	e1 52       	subi	r30, 0x21	; 33
    36e4:	fe 4f       	sbci	r31, 0xFE	; 254
    36e6:	91 83       	std	Z+1, r25	; 0x01
    36e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36ea:	de 01       	movw	r26, r28
    36ec:	af 51       	subi	r26, 0x1F	; 31
    36ee:	be 4f       	sbci	r27, 0xFE	; 254
    36f0:	fe 01       	movw	r30, r28
    36f2:	ef 51       	subi	r30, 0x1F	; 31
    36f4:	fe 4f       	sbci	r31, 0xFE	; 254
    36f6:	80 81       	ld	r24, Z
    36f8:	91 81       	ldd	r25, Z+1	; 0x01
    36fa:	01 97       	sbiw	r24, 0x01	; 1
    36fc:	11 96       	adiw	r26, 0x01	; 1
    36fe:	9c 93       	st	X, r25
    3700:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3702:	fe 01       	movw	r30, r28
    3704:	ef 51       	subi	r30, 0x1F	; 31
    3706:	fe 4f       	sbci	r31, 0xFE	; 254
    3708:	80 81       	ld	r24, Z
    370a:	91 81       	ldd	r25, Z+1	; 0x01
    370c:	00 97       	sbiw	r24, 0x00	; 0
    370e:	d1 f6       	brne	.-76     	; 0x36c4 <main+0x1c54>
    3710:	27 c0       	rjmp	.+78     	; 0x3760 <main+0x1cf0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3712:	8e 01       	movw	r16, r28
    3714:	0f 51       	subi	r16, 0x1F	; 31
    3716:	1e 4f       	sbci	r17, 0xFE	; 254
    3718:	fe 01       	movw	r30, r28
    371a:	ed 51       	subi	r30, 0x1D	; 29
    371c:	fe 4f       	sbci	r31, 0xFE	; 254
    371e:	60 81       	ld	r22, Z
    3720:	71 81       	ldd	r23, Z+1	; 0x01
    3722:	82 81       	ldd	r24, Z+2	; 0x02
    3724:	93 81       	ldd	r25, Z+3	; 0x03
    3726:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    372a:	dc 01       	movw	r26, r24
    372c:	cb 01       	movw	r24, r22
    372e:	f8 01       	movw	r30, r16
    3730:	91 83       	std	Z+1, r25	; 0x01
    3732:	80 83       	st	Z, r24
    3734:	de 01       	movw	r26, r28
    3736:	a3 52       	subi	r26, 0x23	; 35
    3738:	be 4f       	sbci	r27, 0xFE	; 254
    373a:	fe 01       	movw	r30, r28
    373c:	ef 51       	subi	r30, 0x1F	; 31
    373e:	fe 4f       	sbci	r31, 0xFE	; 254
    3740:	80 81       	ld	r24, Z
    3742:	91 81       	ldd	r25, Z+1	; 0x01
    3744:	8d 93       	st	X+, r24
    3746:	9c 93       	st	X, r25
    3748:	fe 01       	movw	r30, r28
    374a:	e3 52       	subi	r30, 0x23	; 35
    374c:	fe 4f       	sbci	r31, 0xFE	; 254
    374e:	80 81       	ld	r24, Z
    3750:	91 81       	ldd	r25, Z+1	; 0x01
    3752:	01 97       	sbiw	r24, 0x01	; 1
    3754:	f1 f7       	brne	.-4      	; 0x3752 <main+0x1ce2>
    3756:	fe 01       	movw	r30, r28
    3758:	e3 52       	subi	r30, 0x23	; 35
    375a:	fe 4f       	sbci	r31, 0xFE	; 254
    375c:	91 83       	std	Z+1, r25	; 0x01
    375e:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8WriteSpecialCharacter(Pattern5,0,1,7);
    3760:	ce 01       	movw	r24, r28
    3762:	82 5f       	subi	r24, 0xF2	; 242
    3764:	9c 4f       	sbci	r25, 0xFC	; 252
    3766:	60 e0       	ldi	r22, 0x00	; 0
    3768:	41 e0       	ldi	r20, 0x01	; 1
    376a:	27 e0       	ldi	r18, 0x07	; 7
    376c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3770:	fe 01       	movw	r30, r28
    3772:	e7 52       	subi	r30, 0x27	; 39
    3774:	fe 4f       	sbci	r31, 0xFE	; 254
    3776:	80 e0       	ldi	r24, 0x00	; 0
    3778:	90 e0       	ldi	r25, 0x00	; 0
    377a:	a0 e2       	ldi	r26, 0x20	; 32
    377c:	b1 e4       	ldi	r27, 0x41	; 65
    377e:	80 83       	st	Z, r24
    3780:	91 83       	std	Z+1, r25	; 0x01
    3782:	a2 83       	std	Z+2, r26	; 0x02
    3784:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3786:	8e 01       	movw	r16, r28
    3788:	0b 52       	subi	r16, 0x2B	; 43
    378a:	1e 4f       	sbci	r17, 0xFE	; 254
    378c:	fe 01       	movw	r30, r28
    378e:	e7 52       	subi	r30, 0x27	; 39
    3790:	fe 4f       	sbci	r31, 0xFE	; 254
    3792:	60 81       	ld	r22, Z
    3794:	71 81       	ldd	r23, Z+1	; 0x01
    3796:	82 81       	ldd	r24, Z+2	; 0x02
    3798:	93 81       	ldd	r25, Z+3	; 0x03
    379a:	20 e0       	ldi	r18, 0x00	; 0
    379c:	30 e0       	ldi	r19, 0x00	; 0
    379e:	4a ef       	ldi	r20, 0xFA	; 250
    37a0:	54 e4       	ldi	r21, 0x44	; 68
    37a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37a6:	dc 01       	movw	r26, r24
    37a8:	cb 01       	movw	r24, r22
    37aa:	f8 01       	movw	r30, r16
    37ac:	80 83       	st	Z, r24
    37ae:	91 83       	std	Z+1, r25	; 0x01
    37b0:	a2 83       	std	Z+2, r26	; 0x02
    37b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37b4:	fe 01       	movw	r30, r28
    37b6:	eb 52       	subi	r30, 0x2B	; 43
    37b8:	fe 4f       	sbci	r31, 0xFE	; 254
    37ba:	60 81       	ld	r22, Z
    37bc:	71 81       	ldd	r23, Z+1	; 0x01
    37be:	82 81       	ldd	r24, Z+2	; 0x02
    37c0:	93 81       	ldd	r25, Z+3	; 0x03
    37c2:	20 e0       	ldi	r18, 0x00	; 0
    37c4:	30 e0       	ldi	r19, 0x00	; 0
    37c6:	40 e8       	ldi	r20, 0x80	; 128
    37c8:	5f e3       	ldi	r21, 0x3F	; 63
    37ca:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    37ce:	88 23       	and	r24, r24
    37d0:	44 f4       	brge	.+16     	; 0x37e2 <main+0x1d72>
		__ticks = 1;
    37d2:	fe 01       	movw	r30, r28
    37d4:	ed 52       	subi	r30, 0x2D	; 45
    37d6:	fe 4f       	sbci	r31, 0xFE	; 254
    37d8:	81 e0       	ldi	r24, 0x01	; 1
    37da:	90 e0       	ldi	r25, 0x00	; 0
    37dc:	91 83       	std	Z+1, r25	; 0x01
    37de:	80 83       	st	Z, r24
    37e0:	64 c0       	rjmp	.+200    	; 0x38aa <main+0x1e3a>
	else if (__tmp > 65535)
    37e2:	fe 01       	movw	r30, r28
    37e4:	eb 52       	subi	r30, 0x2B	; 43
    37e6:	fe 4f       	sbci	r31, 0xFE	; 254
    37e8:	60 81       	ld	r22, Z
    37ea:	71 81       	ldd	r23, Z+1	; 0x01
    37ec:	82 81       	ldd	r24, Z+2	; 0x02
    37ee:	93 81       	ldd	r25, Z+3	; 0x03
    37f0:	20 e0       	ldi	r18, 0x00	; 0
    37f2:	3f ef       	ldi	r19, 0xFF	; 255
    37f4:	4f e7       	ldi	r20, 0x7F	; 127
    37f6:	57 e4       	ldi	r21, 0x47	; 71
    37f8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37fc:	18 16       	cp	r1, r24
    37fe:	0c f0       	brlt	.+2      	; 0x3802 <main+0x1d92>
    3800:	43 c0       	rjmp	.+134    	; 0x3888 <main+0x1e18>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3802:	fe 01       	movw	r30, r28
    3804:	e7 52       	subi	r30, 0x27	; 39
    3806:	fe 4f       	sbci	r31, 0xFE	; 254
    3808:	60 81       	ld	r22, Z
    380a:	71 81       	ldd	r23, Z+1	; 0x01
    380c:	82 81       	ldd	r24, Z+2	; 0x02
    380e:	93 81       	ldd	r25, Z+3	; 0x03
    3810:	20 e0       	ldi	r18, 0x00	; 0
    3812:	30 e0       	ldi	r19, 0x00	; 0
    3814:	40 e2       	ldi	r20, 0x20	; 32
    3816:	51 e4       	ldi	r21, 0x41	; 65
    3818:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    381c:	dc 01       	movw	r26, r24
    381e:	cb 01       	movw	r24, r22
    3820:	8e 01       	movw	r16, r28
    3822:	0d 52       	subi	r16, 0x2D	; 45
    3824:	1e 4f       	sbci	r17, 0xFE	; 254
    3826:	bc 01       	movw	r22, r24
    3828:	cd 01       	movw	r24, r26
    382a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    382e:	dc 01       	movw	r26, r24
    3830:	cb 01       	movw	r24, r22
    3832:	f8 01       	movw	r30, r16
    3834:	91 83       	std	Z+1, r25	; 0x01
    3836:	80 83       	st	Z, r24
    3838:	1f c0       	rjmp	.+62     	; 0x3878 <main+0x1e08>
    383a:	fe 01       	movw	r30, r28
    383c:	ef 52       	subi	r30, 0x2F	; 47
    383e:	fe 4f       	sbci	r31, 0xFE	; 254
    3840:	88 ec       	ldi	r24, 0xC8	; 200
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	91 83       	std	Z+1, r25	; 0x01
    3846:	80 83       	st	Z, r24
    3848:	fe 01       	movw	r30, r28
    384a:	ef 52       	subi	r30, 0x2F	; 47
    384c:	fe 4f       	sbci	r31, 0xFE	; 254
    384e:	80 81       	ld	r24, Z
    3850:	91 81       	ldd	r25, Z+1	; 0x01
    3852:	01 97       	sbiw	r24, 0x01	; 1
    3854:	f1 f7       	brne	.-4      	; 0x3852 <main+0x1de2>
    3856:	fe 01       	movw	r30, r28
    3858:	ef 52       	subi	r30, 0x2F	; 47
    385a:	fe 4f       	sbci	r31, 0xFE	; 254
    385c:	91 83       	std	Z+1, r25	; 0x01
    385e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3860:	de 01       	movw	r26, r28
    3862:	ad 52       	subi	r26, 0x2D	; 45
    3864:	be 4f       	sbci	r27, 0xFE	; 254
    3866:	fe 01       	movw	r30, r28
    3868:	ed 52       	subi	r30, 0x2D	; 45
    386a:	fe 4f       	sbci	r31, 0xFE	; 254
    386c:	80 81       	ld	r24, Z
    386e:	91 81       	ldd	r25, Z+1	; 0x01
    3870:	01 97       	sbiw	r24, 0x01	; 1
    3872:	11 96       	adiw	r26, 0x01	; 1
    3874:	9c 93       	st	X, r25
    3876:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3878:	fe 01       	movw	r30, r28
    387a:	ed 52       	subi	r30, 0x2D	; 45
    387c:	fe 4f       	sbci	r31, 0xFE	; 254
    387e:	80 81       	ld	r24, Z
    3880:	91 81       	ldd	r25, Z+1	; 0x01
    3882:	00 97       	sbiw	r24, 0x00	; 0
    3884:	d1 f6       	brne	.-76     	; 0x383a <main+0x1dca>
    3886:	27 c0       	rjmp	.+78     	; 0x38d6 <main+0x1e66>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3888:	8e 01       	movw	r16, r28
    388a:	0d 52       	subi	r16, 0x2D	; 45
    388c:	1e 4f       	sbci	r17, 0xFE	; 254
    388e:	fe 01       	movw	r30, r28
    3890:	eb 52       	subi	r30, 0x2B	; 43
    3892:	fe 4f       	sbci	r31, 0xFE	; 254
    3894:	60 81       	ld	r22, Z
    3896:	71 81       	ldd	r23, Z+1	; 0x01
    3898:	82 81       	ldd	r24, Z+2	; 0x02
    389a:	93 81       	ldd	r25, Z+3	; 0x03
    389c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38a0:	dc 01       	movw	r26, r24
    38a2:	cb 01       	movw	r24, r22
    38a4:	f8 01       	movw	r30, r16
    38a6:	91 83       	std	Z+1, r25	; 0x01
    38a8:	80 83       	st	Z, r24
    38aa:	de 01       	movw	r26, r28
    38ac:	a1 53       	subi	r26, 0x31	; 49
    38ae:	be 4f       	sbci	r27, 0xFE	; 254
    38b0:	fe 01       	movw	r30, r28
    38b2:	ed 52       	subi	r30, 0x2D	; 45
    38b4:	fe 4f       	sbci	r31, 0xFE	; 254
    38b6:	80 81       	ld	r24, Z
    38b8:	91 81       	ldd	r25, Z+1	; 0x01
    38ba:	8d 93       	st	X+, r24
    38bc:	9c 93       	st	X, r25
    38be:	fe 01       	movw	r30, r28
    38c0:	e1 53       	subi	r30, 0x31	; 49
    38c2:	fe 4f       	sbci	r31, 0xFE	; 254
    38c4:	80 81       	ld	r24, Z
    38c6:	91 81       	ldd	r25, Z+1	; 0x01
    38c8:	01 97       	sbiw	r24, 0x01	; 1
    38ca:	f1 f7       	brne	.-4      	; 0x38c8 <main+0x1e58>
    38cc:	fe 01       	movw	r30, r28
    38ce:	e1 53       	subi	r30, 0x31	; 49
    38d0:	fe 4f       	sbci	r31, 0xFE	; 254
    38d2:	91 83       	std	Z+1, r25	; 0x01
    38d4:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
    38d6:	ce 01       	movw	r24, r28
    38d8:	8a 5e       	subi	r24, 0xEA	; 234
    38da:	9c 4f       	sbci	r25, 0xFC	; 252
    38dc:	60 e0       	ldi	r22, 0x00	; 0
    38de:	41 e0       	ldi	r20, 0x01	; 1
    38e0:	27 e0       	ldi	r18, 0x07	; 7
    38e2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    38e6:	fe 01       	movw	r30, r28
    38e8:	e5 53       	subi	r30, 0x35	; 53
    38ea:	fe 4f       	sbci	r31, 0xFE	; 254
    38ec:	80 e0       	ldi	r24, 0x00	; 0
    38ee:	90 e0       	ldi	r25, 0x00	; 0
    38f0:	a0 e2       	ldi	r26, 0x20	; 32
    38f2:	b1 e4       	ldi	r27, 0x41	; 65
    38f4:	80 83       	st	Z, r24
    38f6:	91 83       	std	Z+1, r25	; 0x01
    38f8:	a2 83       	std	Z+2, r26	; 0x02
    38fa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38fc:	8e 01       	movw	r16, r28
    38fe:	09 53       	subi	r16, 0x39	; 57
    3900:	1e 4f       	sbci	r17, 0xFE	; 254
    3902:	fe 01       	movw	r30, r28
    3904:	e5 53       	subi	r30, 0x35	; 53
    3906:	fe 4f       	sbci	r31, 0xFE	; 254
    3908:	60 81       	ld	r22, Z
    390a:	71 81       	ldd	r23, Z+1	; 0x01
    390c:	82 81       	ldd	r24, Z+2	; 0x02
    390e:	93 81       	ldd	r25, Z+3	; 0x03
    3910:	20 e0       	ldi	r18, 0x00	; 0
    3912:	30 e0       	ldi	r19, 0x00	; 0
    3914:	4a ef       	ldi	r20, 0xFA	; 250
    3916:	54 e4       	ldi	r21, 0x44	; 68
    3918:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    391c:	dc 01       	movw	r26, r24
    391e:	cb 01       	movw	r24, r22
    3920:	f8 01       	movw	r30, r16
    3922:	80 83       	st	Z, r24
    3924:	91 83       	std	Z+1, r25	; 0x01
    3926:	a2 83       	std	Z+2, r26	; 0x02
    3928:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    392a:	fe 01       	movw	r30, r28
    392c:	e9 53       	subi	r30, 0x39	; 57
    392e:	fe 4f       	sbci	r31, 0xFE	; 254
    3930:	60 81       	ld	r22, Z
    3932:	71 81       	ldd	r23, Z+1	; 0x01
    3934:	82 81       	ldd	r24, Z+2	; 0x02
    3936:	93 81       	ldd	r25, Z+3	; 0x03
    3938:	20 e0       	ldi	r18, 0x00	; 0
    393a:	30 e0       	ldi	r19, 0x00	; 0
    393c:	40 e8       	ldi	r20, 0x80	; 128
    393e:	5f e3       	ldi	r21, 0x3F	; 63
    3940:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3944:	88 23       	and	r24, r24
    3946:	44 f4       	brge	.+16     	; 0x3958 <main+0x1ee8>
		__ticks = 1;
    3948:	fe 01       	movw	r30, r28
    394a:	eb 53       	subi	r30, 0x3B	; 59
    394c:	fe 4f       	sbci	r31, 0xFE	; 254
    394e:	81 e0       	ldi	r24, 0x01	; 1
    3950:	90 e0       	ldi	r25, 0x00	; 0
    3952:	91 83       	std	Z+1, r25	; 0x01
    3954:	80 83       	st	Z, r24
    3956:	64 c0       	rjmp	.+200    	; 0x3a20 <main+0x1fb0>
	else if (__tmp > 65535)
    3958:	fe 01       	movw	r30, r28
    395a:	e9 53       	subi	r30, 0x39	; 57
    395c:	fe 4f       	sbci	r31, 0xFE	; 254
    395e:	60 81       	ld	r22, Z
    3960:	71 81       	ldd	r23, Z+1	; 0x01
    3962:	82 81       	ldd	r24, Z+2	; 0x02
    3964:	93 81       	ldd	r25, Z+3	; 0x03
    3966:	20 e0       	ldi	r18, 0x00	; 0
    3968:	3f ef       	ldi	r19, 0xFF	; 255
    396a:	4f e7       	ldi	r20, 0x7F	; 127
    396c:	57 e4       	ldi	r21, 0x47	; 71
    396e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3972:	18 16       	cp	r1, r24
    3974:	0c f0       	brlt	.+2      	; 0x3978 <main+0x1f08>
    3976:	43 c0       	rjmp	.+134    	; 0x39fe <main+0x1f8e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3978:	fe 01       	movw	r30, r28
    397a:	e5 53       	subi	r30, 0x35	; 53
    397c:	fe 4f       	sbci	r31, 0xFE	; 254
    397e:	60 81       	ld	r22, Z
    3980:	71 81       	ldd	r23, Z+1	; 0x01
    3982:	82 81       	ldd	r24, Z+2	; 0x02
    3984:	93 81       	ldd	r25, Z+3	; 0x03
    3986:	20 e0       	ldi	r18, 0x00	; 0
    3988:	30 e0       	ldi	r19, 0x00	; 0
    398a:	40 e2       	ldi	r20, 0x20	; 32
    398c:	51 e4       	ldi	r21, 0x41	; 65
    398e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3992:	dc 01       	movw	r26, r24
    3994:	cb 01       	movw	r24, r22
    3996:	8e 01       	movw	r16, r28
    3998:	0b 53       	subi	r16, 0x3B	; 59
    399a:	1e 4f       	sbci	r17, 0xFE	; 254
    399c:	bc 01       	movw	r22, r24
    399e:	cd 01       	movw	r24, r26
    39a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39a4:	dc 01       	movw	r26, r24
    39a6:	cb 01       	movw	r24, r22
    39a8:	f8 01       	movw	r30, r16
    39aa:	91 83       	std	Z+1, r25	; 0x01
    39ac:	80 83       	st	Z, r24
    39ae:	1f c0       	rjmp	.+62     	; 0x39ee <main+0x1f7e>
    39b0:	fe 01       	movw	r30, r28
    39b2:	ed 53       	subi	r30, 0x3D	; 61
    39b4:	fe 4f       	sbci	r31, 0xFE	; 254
    39b6:	88 ec       	ldi	r24, 0xC8	; 200
    39b8:	90 e0       	ldi	r25, 0x00	; 0
    39ba:	91 83       	std	Z+1, r25	; 0x01
    39bc:	80 83       	st	Z, r24
    39be:	fe 01       	movw	r30, r28
    39c0:	ed 53       	subi	r30, 0x3D	; 61
    39c2:	fe 4f       	sbci	r31, 0xFE	; 254
    39c4:	80 81       	ld	r24, Z
    39c6:	91 81       	ldd	r25, Z+1	; 0x01
    39c8:	01 97       	sbiw	r24, 0x01	; 1
    39ca:	f1 f7       	brne	.-4      	; 0x39c8 <main+0x1f58>
    39cc:	fe 01       	movw	r30, r28
    39ce:	ed 53       	subi	r30, 0x3D	; 61
    39d0:	fe 4f       	sbci	r31, 0xFE	; 254
    39d2:	91 83       	std	Z+1, r25	; 0x01
    39d4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39d6:	de 01       	movw	r26, r28
    39d8:	ab 53       	subi	r26, 0x3B	; 59
    39da:	be 4f       	sbci	r27, 0xFE	; 254
    39dc:	fe 01       	movw	r30, r28
    39de:	eb 53       	subi	r30, 0x3B	; 59
    39e0:	fe 4f       	sbci	r31, 0xFE	; 254
    39e2:	80 81       	ld	r24, Z
    39e4:	91 81       	ldd	r25, Z+1	; 0x01
    39e6:	01 97       	sbiw	r24, 0x01	; 1
    39e8:	11 96       	adiw	r26, 0x01	; 1
    39ea:	9c 93       	st	X, r25
    39ec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ee:	fe 01       	movw	r30, r28
    39f0:	eb 53       	subi	r30, 0x3B	; 59
    39f2:	fe 4f       	sbci	r31, 0xFE	; 254
    39f4:	80 81       	ld	r24, Z
    39f6:	91 81       	ldd	r25, Z+1	; 0x01
    39f8:	00 97       	sbiw	r24, 0x00	; 0
    39fa:	d1 f6       	brne	.-76     	; 0x39b0 <main+0x1f40>
    39fc:	27 c0       	rjmp	.+78     	; 0x3a4c <main+0x1fdc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39fe:	8e 01       	movw	r16, r28
    3a00:	0b 53       	subi	r16, 0x3B	; 59
    3a02:	1e 4f       	sbci	r17, 0xFE	; 254
    3a04:	fe 01       	movw	r30, r28
    3a06:	e9 53       	subi	r30, 0x39	; 57
    3a08:	fe 4f       	sbci	r31, 0xFE	; 254
    3a0a:	60 81       	ld	r22, Z
    3a0c:	71 81       	ldd	r23, Z+1	; 0x01
    3a0e:	82 81       	ldd	r24, Z+2	; 0x02
    3a10:	93 81       	ldd	r25, Z+3	; 0x03
    3a12:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a16:	dc 01       	movw	r26, r24
    3a18:	cb 01       	movw	r24, r22
    3a1a:	f8 01       	movw	r30, r16
    3a1c:	91 83       	std	Z+1, r25	; 0x01
    3a1e:	80 83       	st	Z, r24
    3a20:	de 01       	movw	r26, r28
    3a22:	af 53       	subi	r26, 0x3F	; 63
    3a24:	be 4f       	sbci	r27, 0xFE	; 254
    3a26:	fe 01       	movw	r30, r28
    3a28:	eb 53       	subi	r30, 0x3B	; 59
    3a2a:	fe 4f       	sbci	r31, 0xFE	; 254
    3a2c:	80 81       	ld	r24, Z
    3a2e:	91 81       	ldd	r25, Z+1	; 0x01
    3a30:	8d 93       	st	X+, r24
    3a32:	9c 93       	st	X, r25
    3a34:	fe 01       	movw	r30, r28
    3a36:	ef 53       	subi	r30, 0x3F	; 63
    3a38:	fe 4f       	sbci	r31, 0xFE	; 254
    3a3a:	80 81       	ld	r24, Z
    3a3c:	91 81       	ldd	r25, Z+1	; 0x01
    3a3e:	01 97       	sbiw	r24, 0x01	; 1
    3a40:	f1 f7       	brne	.-4      	; 0x3a3e <main+0x1fce>
    3a42:	fe 01       	movw	r30, r28
    3a44:	ef 53       	subi	r30, 0x3F	; 63
    3a46:	fe 4f       	sbci	r31, 0xFE	; 254
    3a48:	91 83       	std	Z+1, r25	; 0x01
    3a4a:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8WriteSpecialCharacter(Pattern5,0,1,7);
    3a4c:	ce 01       	movw	r24, r28
    3a4e:	82 5f       	subi	r24, 0xF2	; 242
    3a50:	9c 4f       	sbci	r25, 0xFC	; 252
    3a52:	60 e0       	ldi	r22, 0x00	; 0
    3a54:	41 e0       	ldi	r20, 0x01	; 1
    3a56:	27 e0       	ldi	r18, 0x07	; 7
    3a58:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3a5c:	fe 01       	movw	r30, r28
    3a5e:	e3 54       	subi	r30, 0x43	; 67
    3a60:	fe 4f       	sbci	r31, 0xFE	; 254
    3a62:	80 e0       	ldi	r24, 0x00	; 0
    3a64:	90 e0       	ldi	r25, 0x00	; 0
    3a66:	a0 e2       	ldi	r26, 0x20	; 32
    3a68:	b1 e4       	ldi	r27, 0x41	; 65
    3a6a:	80 83       	st	Z, r24
    3a6c:	91 83       	std	Z+1, r25	; 0x01
    3a6e:	a2 83       	std	Z+2, r26	; 0x02
    3a70:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a72:	8e 01       	movw	r16, r28
    3a74:	07 54       	subi	r16, 0x47	; 71
    3a76:	1e 4f       	sbci	r17, 0xFE	; 254
    3a78:	fe 01       	movw	r30, r28
    3a7a:	e3 54       	subi	r30, 0x43	; 67
    3a7c:	fe 4f       	sbci	r31, 0xFE	; 254
    3a7e:	60 81       	ld	r22, Z
    3a80:	71 81       	ldd	r23, Z+1	; 0x01
    3a82:	82 81       	ldd	r24, Z+2	; 0x02
    3a84:	93 81       	ldd	r25, Z+3	; 0x03
    3a86:	20 e0       	ldi	r18, 0x00	; 0
    3a88:	30 e0       	ldi	r19, 0x00	; 0
    3a8a:	4a ef       	ldi	r20, 0xFA	; 250
    3a8c:	54 e4       	ldi	r21, 0x44	; 68
    3a8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a92:	dc 01       	movw	r26, r24
    3a94:	cb 01       	movw	r24, r22
    3a96:	f8 01       	movw	r30, r16
    3a98:	80 83       	st	Z, r24
    3a9a:	91 83       	std	Z+1, r25	; 0x01
    3a9c:	a2 83       	std	Z+2, r26	; 0x02
    3a9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3aa0:	fe 01       	movw	r30, r28
    3aa2:	e7 54       	subi	r30, 0x47	; 71
    3aa4:	fe 4f       	sbci	r31, 0xFE	; 254
    3aa6:	60 81       	ld	r22, Z
    3aa8:	71 81       	ldd	r23, Z+1	; 0x01
    3aaa:	82 81       	ldd	r24, Z+2	; 0x02
    3aac:	93 81       	ldd	r25, Z+3	; 0x03
    3aae:	20 e0       	ldi	r18, 0x00	; 0
    3ab0:	30 e0       	ldi	r19, 0x00	; 0
    3ab2:	40 e8       	ldi	r20, 0x80	; 128
    3ab4:	5f e3       	ldi	r21, 0x3F	; 63
    3ab6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3aba:	88 23       	and	r24, r24
    3abc:	44 f4       	brge	.+16     	; 0x3ace <main+0x205e>
		__ticks = 1;
    3abe:	fe 01       	movw	r30, r28
    3ac0:	e9 54       	subi	r30, 0x49	; 73
    3ac2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ac4:	81 e0       	ldi	r24, 0x01	; 1
    3ac6:	90 e0       	ldi	r25, 0x00	; 0
    3ac8:	91 83       	std	Z+1, r25	; 0x01
    3aca:	80 83       	st	Z, r24
    3acc:	64 c0       	rjmp	.+200    	; 0x3b96 <main+0x2126>
	else if (__tmp > 65535)
    3ace:	fe 01       	movw	r30, r28
    3ad0:	e7 54       	subi	r30, 0x47	; 71
    3ad2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ad4:	60 81       	ld	r22, Z
    3ad6:	71 81       	ldd	r23, Z+1	; 0x01
    3ad8:	82 81       	ldd	r24, Z+2	; 0x02
    3ada:	93 81       	ldd	r25, Z+3	; 0x03
    3adc:	20 e0       	ldi	r18, 0x00	; 0
    3ade:	3f ef       	ldi	r19, 0xFF	; 255
    3ae0:	4f e7       	ldi	r20, 0x7F	; 127
    3ae2:	57 e4       	ldi	r21, 0x47	; 71
    3ae4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3ae8:	18 16       	cp	r1, r24
    3aea:	0c f0       	brlt	.+2      	; 0x3aee <main+0x207e>
    3aec:	43 c0       	rjmp	.+134    	; 0x3b74 <main+0x2104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3aee:	fe 01       	movw	r30, r28
    3af0:	e3 54       	subi	r30, 0x43	; 67
    3af2:	fe 4f       	sbci	r31, 0xFE	; 254
    3af4:	60 81       	ld	r22, Z
    3af6:	71 81       	ldd	r23, Z+1	; 0x01
    3af8:	82 81       	ldd	r24, Z+2	; 0x02
    3afa:	93 81       	ldd	r25, Z+3	; 0x03
    3afc:	20 e0       	ldi	r18, 0x00	; 0
    3afe:	30 e0       	ldi	r19, 0x00	; 0
    3b00:	40 e2       	ldi	r20, 0x20	; 32
    3b02:	51 e4       	ldi	r21, 0x41	; 65
    3b04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b08:	dc 01       	movw	r26, r24
    3b0a:	cb 01       	movw	r24, r22
    3b0c:	8e 01       	movw	r16, r28
    3b0e:	09 54       	subi	r16, 0x49	; 73
    3b10:	1e 4f       	sbci	r17, 0xFE	; 254
    3b12:	bc 01       	movw	r22, r24
    3b14:	cd 01       	movw	r24, r26
    3b16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b1a:	dc 01       	movw	r26, r24
    3b1c:	cb 01       	movw	r24, r22
    3b1e:	f8 01       	movw	r30, r16
    3b20:	91 83       	std	Z+1, r25	; 0x01
    3b22:	80 83       	st	Z, r24
    3b24:	1f c0       	rjmp	.+62     	; 0x3b64 <main+0x20f4>
    3b26:	fe 01       	movw	r30, r28
    3b28:	eb 54       	subi	r30, 0x4B	; 75
    3b2a:	fe 4f       	sbci	r31, 0xFE	; 254
    3b2c:	88 ec       	ldi	r24, 0xC8	; 200
    3b2e:	90 e0       	ldi	r25, 0x00	; 0
    3b30:	91 83       	std	Z+1, r25	; 0x01
    3b32:	80 83       	st	Z, r24
    3b34:	fe 01       	movw	r30, r28
    3b36:	eb 54       	subi	r30, 0x4B	; 75
    3b38:	fe 4f       	sbci	r31, 0xFE	; 254
    3b3a:	80 81       	ld	r24, Z
    3b3c:	91 81       	ldd	r25, Z+1	; 0x01
    3b3e:	01 97       	sbiw	r24, 0x01	; 1
    3b40:	f1 f7       	brne	.-4      	; 0x3b3e <main+0x20ce>
    3b42:	fe 01       	movw	r30, r28
    3b44:	eb 54       	subi	r30, 0x4B	; 75
    3b46:	fe 4f       	sbci	r31, 0xFE	; 254
    3b48:	91 83       	std	Z+1, r25	; 0x01
    3b4a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b4c:	de 01       	movw	r26, r28
    3b4e:	a9 54       	subi	r26, 0x49	; 73
    3b50:	be 4f       	sbci	r27, 0xFE	; 254
    3b52:	fe 01       	movw	r30, r28
    3b54:	e9 54       	subi	r30, 0x49	; 73
    3b56:	fe 4f       	sbci	r31, 0xFE	; 254
    3b58:	80 81       	ld	r24, Z
    3b5a:	91 81       	ldd	r25, Z+1	; 0x01
    3b5c:	01 97       	sbiw	r24, 0x01	; 1
    3b5e:	11 96       	adiw	r26, 0x01	; 1
    3b60:	9c 93       	st	X, r25
    3b62:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b64:	fe 01       	movw	r30, r28
    3b66:	e9 54       	subi	r30, 0x49	; 73
    3b68:	fe 4f       	sbci	r31, 0xFE	; 254
    3b6a:	80 81       	ld	r24, Z
    3b6c:	91 81       	ldd	r25, Z+1	; 0x01
    3b6e:	00 97       	sbiw	r24, 0x00	; 0
    3b70:	d1 f6       	brne	.-76     	; 0x3b26 <main+0x20b6>
    3b72:	27 c0       	rjmp	.+78     	; 0x3bc2 <main+0x2152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b74:	8e 01       	movw	r16, r28
    3b76:	09 54       	subi	r16, 0x49	; 73
    3b78:	1e 4f       	sbci	r17, 0xFE	; 254
    3b7a:	fe 01       	movw	r30, r28
    3b7c:	e7 54       	subi	r30, 0x47	; 71
    3b7e:	fe 4f       	sbci	r31, 0xFE	; 254
    3b80:	60 81       	ld	r22, Z
    3b82:	71 81       	ldd	r23, Z+1	; 0x01
    3b84:	82 81       	ldd	r24, Z+2	; 0x02
    3b86:	93 81       	ldd	r25, Z+3	; 0x03
    3b88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b8c:	dc 01       	movw	r26, r24
    3b8e:	cb 01       	movw	r24, r22
    3b90:	f8 01       	movw	r30, r16
    3b92:	91 83       	std	Z+1, r25	; 0x01
    3b94:	80 83       	st	Z, r24
    3b96:	de 01       	movw	r26, r28
    3b98:	ad 54       	subi	r26, 0x4D	; 77
    3b9a:	be 4f       	sbci	r27, 0xFE	; 254
    3b9c:	fe 01       	movw	r30, r28
    3b9e:	e9 54       	subi	r30, 0x49	; 73
    3ba0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ba2:	80 81       	ld	r24, Z
    3ba4:	91 81       	ldd	r25, Z+1	; 0x01
    3ba6:	8d 93       	st	X+, r24
    3ba8:	9c 93       	st	X, r25
    3baa:	fe 01       	movw	r30, r28
    3bac:	ed 54       	subi	r30, 0x4D	; 77
    3bae:	fe 4f       	sbci	r31, 0xFE	; 254
    3bb0:	80 81       	ld	r24, Z
    3bb2:	91 81       	ldd	r25, Z+1	; 0x01
    3bb4:	01 97       	sbiw	r24, 0x01	; 1
    3bb6:	f1 f7       	brne	.-4      	; 0x3bb4 <main+0x2144>
    3bb8:	fe 01       	movw	r30, r28
    3bba:	ed 54       	subi	r30, 0x4D	; 77
    3bbc:	fe 4f       	sbci	r31, 0xFE	; 254
    3bbe:	91 83       	std	Z+1, r25	; 0x01
    3bc0:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
    3bc2:	ce 01       	movw	r24, r28
    3bc4:	8a 5e       	subi	r24, 0xEA	; 234
    3bc6:	9c 4f       	sbci	r25, 0xFC	; 252
    3bc8:	60 e0       	ldi	r22, 0x00	; 0
    3bca:	41 e0       	ldi	r20, 0x01	; 1
    3bcc:	27 e0       	ldi	r18, 0x07	; 7
    3bce:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3bd2:	fe 01       	movw	r30, r28
    3bd4:	e1 55       	subi	r30, 0x51	; 81
    3bd6:	fe 4f       	sbci	r31, 0xFE	; 254
    3bd8:	80 e0       	ldi	r24, 0x00	; 0
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	a0 e2       	ldi	r26, 0x20	; 32
    3bde:	b1 e4       	ldi	r27, 0x41	; 65
    3be0:	80 83       	st	Z, r24
    3be2:	91 83       	std	Z+1, r25	; 0x01
    3be4:	a2 83       	std	Z+2, r26	; 0x02
    3be6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3be8:	8e 01       	movw	r16, r28
    3bea:	05 55       	subi	r16, 0x55	; 85
    3bec:	1e 4f       	sbci	r17, 0xFE	; 254
    3bee:	fe 01       	movw	r30, r28
    3bf0:	e1 55       	subi	r30, 0x51	; 81
    3bf2:	fe 4f       	sbci	r31, 0xFE	; 254
    3bf4:	60 81       	ld	r22, Z
    3bf6:	71 81       	ldd	r23, Z+1	; 0x01
    3bf8:	82 81       	ldd	r24, Z+2	; 0x02
    3bfa:	93 81       	ldd	r25, Z+3	; 0x03
    3bfc:	20 e0       	ldi	r18, 0x00	; 0
    3bfe:	30 e0       	ldi	r19, 0x00	; 0
    3c00:	4a ef       	ldi	r20, 0xFA	; 250
    3c02:	54 e4       	ldi	r21, 0x44	; 68
    3c04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c08:	dc 01       	movw	r26, r24
    3c0a:	cb 01       	movw	r24, r22
    3c0c:	f8 01       	movw	r30, r16
    3c0e:	80 83       	st	Z, r24
    3c10:	91 83       	std	Z+1, r25	; 0x01
    3c12:	a2 83       	std	Z+2, r26	; 0x02
    3c14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c16:	fe 01       	movw	r30, r28
    3c18:	e5 55       	subi	r30, 0x55	; 85
    3c1a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c1c:	60 81       	ld	r22, Z
    3c1e:	71 81       	ldd	r23, Z+1	; 0x01
    3c20:	82 81       	ldd	r24, Z+2	; 0x02
    3c22:	93 81       	ldd	r25, Z+3	; 0x03
    3c24:	20 e0       	ldi	r18, 0x00	; 0
    3c26:	30 e0       	ldi	r19, 0x00	; 0
    3c28:	40 e8       	ldi	r20, 0x80	; 128
    3c2a:	5f e3       	ldi	r21, 0x3F	; 63
    3c2c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c30:	88 23       	and	r24, r24
    3c32:	44 f4       	brge	.+16     	; 0x3c44 <main+0x21d4>
		__ticks = 1;
    3c34:	fe 01       	movw	r30, r28
    3c36:	e7 55       	subi	r30, 0x57	; 87
    3c38:	fe 4f       	sbci	r31, 0xFE	; 254
    3c3a:	81 e0       	ldi	r24, 0x01	; 1
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	91 83       	std	Z+1, r25	; 0x01
    3c40:	80 83       	st	Z, r24
    3c42:	64 c0       	rjmp	.+200    	; 0x3d0c <main+0x229c>
	else if (__tmp > 65535)
    3c44:	fe 01       	movw	r30, r28
    3c46:	e5 55       	subi	r30, 0x55	; 85
    3c48:	fe 4f       	sbci	r31, 0xFE	; 254
    3c4a:	60 81       	ld	r22, Z
    3c4c:	71 81       	ldd	r23, Z+1	; 0x01
    3c4e:	82 81       	ldd	r24, Z+2	; 0x02
    3c50:	93 81       	ldd	r25, Z+3	; 0x03
    3c52:	20 e0       	ldi	r18, 0x00	; 0
    3c54:	3f ef       	ldi	r19, 0xFF	; 255
    3c56:	4f e7       	ldi	r20, 0x7F	; 127
    3c58:	57 e4       	ldi	r21, 0x47	; 71
    3c5a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c5e:	18 16       	cp	r1, r24
    3c60:	0c f0       	brlt	.+2      	; 0x3c64 <main+0x21f4>
    3c62:	43 c0       	rjmp	.+134    	; 0x3cea <main+0x227a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c64:	fe 01       	movw	r30, r28
    3c66:	e1 55       	subi	r30, 0x51	; 81
    3c68:	fe 4f       	sbci	r31, 0xFE	; 254
    3c6a:	60 81       	ld	r22, Z
    3c6c:	71 81       	ldd	r23, Z+1	; 0x01
    3c6e:	82 81       	ldd	r24, Z+2	; 0x02
    3c70:	93 81       	ldd	r25, Z+3	; 0x03
    3c72:	20 e0       	ldi	r18, 0x00	; 0
    3c74:	30 e0       	ldi	r19, 0x00	; 0
    3c76:	40 e2       	ldi	r20, 0x20	; 32
    3c78:	51 e4       	ldi	r21, 0x41	; 65
    3c7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c7e:	dc 01       	movw	r26, r24
    3c80:	cb 01       	movw	r24, r22
    3c82:	8e 01       	movw	r16, r28
    3c84:	07 55       	subi	r16, 0x57	; 87
    3c86:	1e 4f       	sbci	r17, 0xFE	; 254
    3c88:	bc 01       	movw	r22, r24
    3c8a:	cd 01       	movw	r24, r26
    3c8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c90:	dc 01       	movw	r26, r24
    3c92:	cb 01       	movw	r24, r22
    3c94:	f8 01       	movw	r30, r16
    3c96:	91 83       	std	Z+1, r25	; 0x01
    3c98:	80 83       	st	Z, r24
    3c9a:	1f c0       	rjmp	.+62     	; 0x3cda <main+0x226a>
    3c9c:	fe 01       	movw	r30, r28
    3c9e:	e9 55       	subi	r30, 0x59	; 89
    3ca0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ca2:	88 ec       	ldi	r24, 0xC8	; 200
    3ca4:	90 e0       	ldi	r25, 0x00	; 0
    3ca6:	91 83       	std	Z+1, r25	; 0x01
    3ca8:	80 83       	st	Z, r24
    3caa:	fe 01       	movw	r30, r28
    3cac:	e9 55       	subi	r30, 0x59	; 89
    3cae:	fe 4f       	sbci	r31, 0xFE	; 254
    3cb0:	80 81       	ld	r24, Z
    3cb2:	91 81       	ldd	r25, Z+1	; 0x01
    3cb4:	01 97       	sbiw	r24, 0x01	; 1
    3cb6:	f1 f7       	brne	.-4      	; 0x3cb4 <main+0x2244>
    3cb8:	fe 01       	movw	r30, r28
    3cba:	e9 55       	subi	r30, 0x59	; 89
    3cbc:	fe 4f       	sbci	r31, 0xFE	; 254
    3cbe:	91 83       	std	Z+1, r25	; 0x01
    3cc0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cc2:	de 01       	movw	r26, r28
    3cc4:	a7 55       	subi	r26, 0x57	; 87
    3cc6:	be 4f       	sbci	r27, 0xFE	; 254
    3cc8:	fe 01       	movw	r30, r28
    3cca:	e7 55       	subi	r30, 0x57	; 87
    3ccc:	fe 4f       	sbci	r31, 0xFE	; 254
    3cce:	80 81       	ld	r24, Z
    3cd0:	91 81       	ldd	r25, Z+1	; 0x01
    3cd2:	01 97       	sbiw	r24, 0x01	; 1
    3cd4:	11 96       	adiw	r26, 0x01	; 1
    3cd6:	9c 93       	st	X, r25
    3cd8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cda:	fe 01       	movw	r30, r28
    3cdc:	e7 55       	subi	r30, 0x57	; 87
    3cde:	fe 4f       	sbci	r31, 0xFE	; 254
    3ce0:	80 81       	ld	r24, Z
    3ce2:	91 81       	ldd	r25, Z+1	; 0x01
    3ce4:	00 97       	sbiw	r24, 0x00	; 0
    3ce6:	d1 f6       	brne	.-76     	; 0x3c9c <main+0x222c>
    3ce8:	27 c0       	rjmp	.+78     	; 0x3d38 <main+0x22c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cea:	8e 01       	movw	r16, r28
    3cec:	07 55       	subi	r16, 0x57	; 87
    3cee:	1e 4f       	sbci	r17, 0xFE	; 254
    3cf0:	fe 01       	movw	r30, r28
    3cf2:	e5 55       	subi	r30, 0x55	; 85
    3cf4:	fe 4f       	sbci	r31, 0xFE	; 254
    3cf6:	60 81       	ld	r22, Z
    3cf8:	71 81       	ldd	r23, Z+1	; 0x01
    3cfa:	82 81       	ldd	r24, Z+2	; 0x02
    3cfc:	93 81       	ldd	r25, Z+3	; 0x03
    3cfe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d02:	dc 01       	movw	r26, r24
    3d04:	cb 01       	movw	r24, r22
    3d06:	f8 01       	movw	r30, r16
    3d08:	91 83       	std	Z+1, r25	; 0x01
    3d0a:	80 83       	st	Z, r24
    3d0c:	de 01       	movw	r26, r28
    3d0e:	ab 55       	subi	r26, 0x5B	; 91
    3d10:	be 4f       	sbci	r27, 0xFE	; 254
    3d12:	fe 01       	movw	r30, r28
    3d14:	e7 55       	subi	r30, 0x57	; 87
    3d16:	fe 4f       	sbci	r31, 0xFE	; 254
    3d18:	80 81       	ld	r24, Z
    3d1a:	91 81       	ldd	r25, Z+1	; 0x01
    3d1c:	8d 93       	st	X+, r24
    3d1e:	9c 93       	st	X, r25
    3d20:	fe 01       	movw	r30, r28
    3d22:	eb 55       	subi	r30, 0x5B	; 91
    3d24:	fe 4f       	sbci	r31, 0xFE	; 254
    3d26:	80 81       	ld	r24, Z
    3d28:	91 81       	ldd	r25, Z+1	; 0x01
    3d2a:	01 97       	sbiw	r24, 0x01	; 1
    3d2c:	f1 f7       	brne	.-4      	; 0x3d2a <main+0x22ba>
    3d2e:	fe 01       	movw	r30, r28
    3d30:	eb 55       	subi	r30, 0x5B	; 91
    3d32:	fe 4f       	sbci	r31, 0xFE	; 254
    3d34:	91 83       	std	Z+1, r25	; 0x01
    3d36:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8WriteSpecialCharacter(Pattern5,0,1,7);
    3d38:	ce 01       	movw	r24, r28
    3d3a:	82 5f       	subi	r24, 0xF2	; 242
    3d3c:	9c 4f       	sbci	r25, 0xFC	; 252
    3d3e:	60 e0       	ldi	r22, 0x00	; 0
    3d40:	41 e0       	ldi	r20, 0x01	; 1
    3d42:	27 e0       	ldi	r18, 0x07	; 7
    3d44:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3d48:	fe 01       	movw	r30, r28
    3d4a:	ef 55       	subi	r30, 0x5F	; 95
    3d4c:	fe 4f       	sbci	r31, 0xFE	; 254
    3d4e:	80 e0       	ldi	r24, 0x00	; 0
    3d50:	90 e0       	ldi	r25, 0x00	; 0
    3d52:	a0 e2       	ldi	r26, 0x20	; 32
    3d54:	b1 e4       	ldi	r27, 0x41	; 65
    3d56:	80 83       	st	Z, r24
    3d58:	91 83       	std	Z+1, r25	; 0x01
    3d5a:	a2 83       	std	Z+2, r26	; 0x02
    3d5c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d5e:	8e 01       	movw	r16, r28
    3d60:	03 56       	subi	r16, 0x63	; 99
    3d62:	1e 4f       	sbci	r17, 0xFE	; 254
    3d64:	fe 01       	movw	r30, r28
    3d66:	ef 55       	subi	r30, 0x5F	; 95
    3d68:	fe 4f       	sbci	r31, 0xFE	; 254
    3d6a:	60 81       	ld	r22, Z
    3d6c:	71 81       	ldd	r23, Z+1	; 0x01
    3d6e:	82 81       	ldd	r24, Z+2	; 0x02
    3d70:	93 81       	ldd	r25, Z+3	; 0x03
    3d72:	20 e0       	ldi	r18, 0x00	; 0
    3d74:	30 e0       	ldi	r19, 0x00	; 0
    3d76:	4a ef       	ldi	r20, 0xFA	; 250
    3d78:	54 e4       	ldi	r21, 0x44	; 68
    3d7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d7e:	dc 01       	movw	r26, r24
    3d80:	cb 01       	movw	r24, r22
    3d82:	f8 01       	movw	r30, r16
    3d84:	80 83       	st	Z, r24
    3d86:	91 83       	std	Z+1, r25	; 0x01
    3d88:	a2 83       	std	Z+2, r26	; 0x02
    3d8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d8c:	fe 01       	movw	r30, r28
    3d8e:	e3 56       	subi	r30, 0x63	; 99
    3d90:	fe 4f       	sbci	r31, 0xFE	; 254
    3d92:	60 81       	ld	r22, Z
    3d94:	71 81       	ldd	r23, Z+1	; 0x01
    3d96:	82 81       	ldd	r24, Z+2	; 0x02
    3d98:	93 81       	ldd	r25, Z+3	; 0x03
    3d9a:	20 e0       	ldi	r18, 0x00	; 0
    3d9c:	30 e0       	ldi	r19, 0x00	; 0
    3d9e:	40 e8       	ldi	r20, 0x80	; 128
    3da0:	5f e3       	ldi	r21, 0x3F	; 63
    3da2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3da6:	88 23       	and	r24, r24
    3da8:	44 f4       	brge	.+16     	; 0x3dba <main+0x234a>
		__ticks = 1;
    3daa:	fe 01       	movw	r30, r28
    3dac:	e5 56       	subi	r30, 0x65	; 101
    3dae:	fe 4f       	sbci	r31, 0xFE	; 254
    3db0:	81 e0       	ldi	r24, 0x01	; 1
    3db2:	90 e0       	ldi	r25, 0x00	; 0
    3db4:	91 83       	std	Z+1, r25	; 0x01
    3db6:	80 83       	st	Z, r24
    3db8:	64 c0       	rjmp	.+200    	; 0x3e82 <main+0x2412>
	else if (__tmp > 65535)
    3dba:	fe 01       	movw	r30, r28
    3dbc:	e3 56       	subi	r30, 0x63	; 99
    3dbe:	fe 4f       	sbci	r31, 0xFE	; 254
    3dc0:	60 81       	ld	r22, Z
    3dc2:	71 81       	ldd	r23, Z+1	; 0x01
    3dc4:	82 81       	ldd	r24, Z+2	; 0x02
    3dc6:	93 81       	ldd	r25, Z+3	; 0x03
    3dc8:	20 e0       	ldi	r18, 0x00	; 0
    3dca:	3f ef       	ldi	r19, 0xFF	; 255
    3dcc:	4f e7       	ldi	r20, 0x7F	; 127
    3dce:	57 e4       	ldi	r21, 0x47	; 71
    3dd0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3dd4:	18 16       	cp	r1, r24
    3dd6:	0c f0       	brlt	.+2      	; 0x3dda <main+0x236a>
    3dd8:	43 c0       	rjmp	.+134    	; 0x3e60 <main+0x23f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dda:	fe 01       	movw	r30, r28
    3ddc:	ef 55       	subi	r30, 0x5F	; 95
    3dde:	fe 4f       	sbci	r31, 0xFE	; 254
    3de0:	60 81       	ld	r22, Z
    3de2:	71 81       	ldd	r23, Z+1	; 0x01
    3de4:	82 81       	ldd	r24, Z+2	; 0x02
    3de6:	93 81       	ldd	r25, Z+3	; 0x03
    3de8:	20 e0       	ldi	r18, 0x00	; 0
    3dea:	30 e0       	ldi	r19, 0x00	; 0
    3dec:	40 e2       	ldi	r20, 0x20	; 32
    3dee:	51 e4       	ldi	r21, 0x41	; 65
    3df0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3df4:	dc 01       	movw	r26, r24
    3df6:	cb 01       	movw	r24, r22
    3df8:	8e 01       	movw	r16, r28
    3dfa:	05 56       	subi	r16, 0x65	; 101
    3dfc:	1e 4f       	sbci	r17, 0xFE	; 254
    3dfe:	bc 01       	movw	r22, r24
    3e00:	cd 01       	movw	r24, r26
    3e02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e06:	dc 01       	movw	r26, r24
    3e08:	cb 01       	movw	r24, r22
    3e0a:	f8 01       	movw	r30, r16
    3e0c:	91 83       	std	Z+1, r25	; 0x01
    3e0e:	80 83       	st	Z, r24
    3e10:	1f c0       	rjmp	.+62     	; 0x3e50 <main+0x23e0>
    3e12:	fe 01       	movw	r30, r28
    3e14:	e7 56       	subi	r30, 0x67	; 103
    3e16:	fe 4f       	sbci	r31, 0xFE	; 254
    3e18:	88 ec       	ldi	r24, 0xC8	; 200
    3e1a:	90 e0       	ldi	r25, 0x00	; 0
    3e1c:	91 83       	std	Z+1, r25	; 0x01
    3e1e:	80 83       	st	Z, r24
    3e20:	fe 01       	movw	r30, r28
    3e22:	e7 56       	subi	r30, 0x67	; 103
    3e24:	fe 4f       	sbci	r31, 0xFE	; 254
    3e26:	80 81       	ld	r24, Z
    3e28:	91 81       	ldd	r25, Z+1	; 0x01
    3e2a:	01 97       	sbiw	r24, 0x01	; 1
    3e2c:	f1 f7       	brne	.-4      	; 0x3e2a <main+0x23ba>
    3e2e:	fe 01       	movw	r30, r28
    3e30:	e7 56       	subi	r30, 0x67	; 103
    3e32:	fe 4f       	sbci	r31, 0xFE	; 254
    3e34:	91 83       	std	Z+1, r25	; 0x01
    3e36:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e38:	de 01       	movw	r26, r28
    3e3a:	a5 56       	subi	r26, 0x65	; 101
    3e3c:	be 4f       	sbci	r27, 0xFE	; 254
    3e3e:	fe 01       	movw	r30, r28
    3e40:	e5 56       	subi	r30, 0x65	; 101
    3e42:	fe 4f       	sbci	r31, 0xFE	; 254
    3e44:	80 81       	ld	r24, Z
    3e46:	91 81       	ldd	r25, Z+1	; 0x01
    3e48:	01 97       	sbiw	r24, 0x01	; 1
    3e4a:	11 96       	adiw	r26, 0x01	; 1
    3e4c:	9c 93       	st	X, r25
    3e4e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e50:	fe 01       	movw	r30, r28
    3e52:	e5 56       	subi	r30, 0x65	; 101
    3e54:	fe 4f       	sbci	r31, 0xFE	; 254
    3e56:	80 81       	ld	r24, Z
    3e58:	91 81       	ldd	r25, Z+1	; 0x01
    3e5a:	00 97       	sbiw	r24, 0x00	; 0
    3e5c:	d1 f6       	brne	.-76     	; 0x3e12 <main+0x23a2>
    3e5e:	27 c0       	rjmp	.+78     	; 0x3eae <main+0x243e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e60:	8e 01       	movw	r16, r28
    3e62:	05 56       	subi	r16, 0x65	; 101
    3e64:	1e 4f       	sbci	r17, 0xFE	; 254
    3e66:	fe 01       	movw	r30, r28
    3e68:	e3 56       	subi	r30, 0x63	; 99
    3e6a:	fe 4f       	sbci	r31, 0xFE	; 254
    3e6c:	60 81       	ld	r22, Z
    3e6e:	71 81       	ldd	r23, Z+1	; 0x01
    3e70:	82 81       	ldd	r24, Z+2	; 0x02
    3e72:	93 81       	ldd	r25, Z+3	; 0x03
    3e74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e78:	dc 01       	movw	r26, r24
    3e7a:	cb 01       	movw	r24, r22
    3e7c:	f8 01       	movw	r30, r16
    3e7e:	91 83       	std	Z+1, r25	; 0x01
    3e80:	80 83       	st	Z, r24
    3e82:	de 01       	movw	r26, r28
    3e84:	a9 56       	subi	r26, 0x69	; 105
    3e86:	be 4f       	sbci	r27, 0xFE	; 254
    3e88:	fe 01       	movw	r30, r28
    3e8a:	e5 56       	subi	r30, 0x65	; 101
    3e8c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e8e:	80 81       	ld	r24, Z
    3e90:	91 81       	ldd	r25, Z+1	; 0x01
    3e92:	8d 93       	st	X+, r24
    3e94:	9c 93       	st	X, r25
    3e96:	fe 01       	movw	r30, r28
    3e98:	e9 56       	subi	r30, 0x69	; 105
    3e9a:	fe 4f       	sbci	r31, 0xFE	; 254
    3e9c:	80 81       	ld	r24, Z
    3e9e:	91 81       	ldd	r25, Z+1	; 0x01
    3ea0:	01 97       	sbiw	r24, 0x01	; 1
    3ea2:	f1 f7       	brne	.-4      	; 0x3ea0 <main+0x2430>
    3ea4:	fe 01       	movw	r30, r28
    3ea6:	e9 56       	subi	r30, 0x69	; 105
    3ea8:	fe 4f       	sbci	r31, 0xFE	; 254
    3eaa:	91 83       	std	Z+1, r25	; 0x01
    3eac:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
    3eae:	ce 01       	movw	r24, r28
    3eb0:	8a 5e       	subi	r24, 0xEA	; 234
    3eb2:	9c 4f       	sbci	r25, 0xFC	; 252
    3eb4:	60 e0       	ldi	r22, 0x00	; 0
    3eb6:	41 e0       	ldi	r20, 0x01	; 1
    3eb8:	27 e0       	ldi	r18, 0x07	; 7
    3eba:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3ebe:	fe 01       	movw	r30, r28
    3ec0:	ed 56       	subi	r30, 0x6D	; 109
    3ec2:	fe 4f       	sbci	r31, 0xFE	; 254
    3ec4:	80 e0       	ldi	r24, 0x00	; 0
    3ec6:	90 e0       	ldi	r25, 0x00	; 0
    3ec8:	a0 e2       	ldi	r26, 0x20	; 32
    3eca:	b1 e4       	ldi	r27, 0x41	; 65
    3ecc:	80 83       	st	Z, r24
    3ece:	91 83       	std	Z+1, r25	; 0x01
    3ed0:	a2 83       	std	Z+2, r26	; 0x02
    3ed2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ed4:	8e 01       	movw	r16, r28
    3ed6:	01 57       	subi	r16, 0x71	; 113
    3ed8:	1e 4f       	sbci	r17, 0xFE	; 254
    3eda:	fe 01       	movw	r30, r28
    3edc:	ed 56       	subi	r30, 0x6D	; 109
    3ede:	fe 4f       	sbci	r31, 0xFE	; 254
    3ee0:	60 81       	ld	r22, Z
    3ee2:	71 81       	ldd	r23, Z+1	; 0x01
    3ee4:	82 81       	ldd	r24, Z+2	; 0x02
    3ee6:	93 81       	ldd	r25, Z+3	; 0x03
    3ee8:	20 e0       	ldi	r18, 0x00	; 0
    3eea:	30 e0       	ldi	r19, 0x00	; 0
    3eec:	4a ef       	ldi	r20, 0xFA	; 250
    3eee:	54 e4       	ldi	r21, 0x44	; 68
    3ef0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ef4:	dc 01       	movw	r26, r24
    3ef6:	cb 01       	movw	r24, r22
    3ef8:	f8 01       	movw	r30, r16
    3efa:	80 83       	st	Z, r24
    3efc:	91 83       	std	Z+1, r25	; 0x01
    3efe:	a2 83       	std	Z+2, r26	; 0x02
    3f00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f02:	fe 01       	movw	r30, r28
    3f04:	e1 57       	subi	r30, 0x71	; 113
    3f06:	fe 4f       	sbci	r31, 0xFE	; 254
    3f08:	60 81       	ld	r22, Z
    3f0a:	71 81       	ldd	r23, Z+1	; 0x01
    3f0c:	82 81       	ldd	r24, Z+2	; 0x02
    3f0e:	93 81       	ldd	r25, Z+3	; 0x03
    3f10:	20 e0       	ldi	r18, 0x00	; 0
    3f12:	30 e0       	ldi	r19, 0x00	; 0
    3f14:	40 e8       	ldi	r20, 0x80	; 128
    3f16:	5f e3       	ldi	r21, 0x3F	; 63
    3f18:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f1c:	88 23       	and	r24, r24
    3f1e:	44 f4       	brge	.+16     	; 0x3f30 <main+0x24c0>
		__ticks = 1;
    3f20:	fe 01       	movw	r30, r28
    3f22:	e3 57       	subi	r30, 0x73	; 115
    3f24:	fe 4f       	sbci	r31, 0xFE	; 254
    3f26:	81 e0       	ldi	r24, 0x01	; 1
    3f28:	90 e0       	ldi	r25, 0x00	; 0
    3f2a:	91 83       	std	Z+1, r25	; 0x01
    3f2c:	80 83       	st	Z, r24
    3f2e:	64 c0       	rjmp	.+200    	; 0x3ff8 <main+0x2588>
	else if (__tmp > 65535)
    3f30:	fe 01       	movw	r30, r28
    3f32:	e1 57       	subi	r30, 0x71	; 113
    3f34:	fe 4f       	sbci	r31, 0xFE	; 254
    3f36:	60 81       	ld	r22, Z
    3f38:	71 81       	ldd	r23, Z+1	; 0x01
    3f3a:	82 81       	ldd	r24, Z+2	; 0x02
    3f3c:	93 81       	ldd	r25, Z+3	; 0x03
    3f3e:	20 e0       	ldi	r18, 0x00	; 0
    3f40:	3f ef       	ldi	r19, 0xFF	; 255
    3f42:	4f e7       	ldi	r20, 0x7F	; 127
    3f44:	57 e4       	ldi	r21, 0x47	; 71
    3f46:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f4a:	18 16       	cp	r1, r24
    3f4c:	0c f0       	brlt	.+2      	; 0x3f50 <main+0x24e0>
    3f4e:	43 c0       	rjmp	.+134    	; 0x3fd6 <main+0x2566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f50:	fe 01       	movw	r30, r28
    3f52:	ed 56       	subi	r30, 0x6D	; 109
    3f54:	fe 4f       	sbci	r31, 0xFE	; 254
    3f56:	60 81       	ld	r22, Z
    3f58:	71 81       	ldd	r23, Z+1	; 0x01
    3f5a:	82 81       	ldd	r24, Z+2	; 0x02
    3f5c:	93 81       	ldd	r25, Z+3	; 0x03
    3f5e:	20 e0       	ldi	r18, 0x00	; 0
    3f60:	30 e0       	ldi	r19, 0x00	; 0
    3f62:	40 e2       	ldi	r20, 0x20	; 32
    3f64:	51 e4       	ldi	r21, 0x41	; 65
    3f66:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f6a:	dc 01       	movw	r26, r24
    3f6c:	cb 01       	movw	r24, r22
    3f6e:	8e 01       	movw	r16, r28
    3f70:	03 57       	subi	r16, 0x73	; 115
    3f72:	1e 4f       	sbci	r17, 0xFE	; 254
    3f74:	bc 01       	movw	r22, r24
    3f76:	cd 01       	movw	r24, r26
    3f78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f7c:	dc 01       	movw	r26, r24
    3f7e:	cb 01       	movw	r24, r22
    3f80:	f8 01       	movw	r30, r16
    3f82:	91 83       	std	Z+1, r25	; 0x01
    3f84:	80 83       	st	Z, r24
    3f86:	1f c0       	rjmp	.+62     	; 0x3fc6 <main+0x2556>
    3f88:	fe 01       	movw	r30, r28
    3f8a:	e5 57       	subi	r30, 0x75	; 117
    3f8c:	fe 4f       	sbci	r31, 0xFE	; 254
    3f8e:	88 ec       	ldi	r24, 0xC8	; 200
    3f90:	90 e0       	ldi	r25, 0x00	; 0
    3f92:	91 83       	std	Z+1, r25	; 0x01
    3f94:	80 83       	st	Z, r24
    3f96:	fe 01       	movw	r30, r28
    3f98:	e5 57       	subi	r30, 0x75	; 117
    3f9a:	fe 4f       	sbci	r31, 0xFE	; 254
    3f9c:	80 81       	ld	r24, Z
    3f9e:	91 81       	ldd	r25, Z+1	; 0x01
    3fa0:	01 97       	sbiw	r24, 0x01	; 1
    3fa2:	f1 f7       	brne	.-4      	; 0x3fa0 <main+0x2530>
    3fa4:	fe 01       	movw	r30, r28
    3fa6:	e5 57       	subi	r30, 0x75	; 117
    3fa8:	fe 4f       	sbci	r31, 0xFE	; 254
    3faa:	91 83       	std	Z+1, r25	; 0x01
    3fac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fae:	de 01       	movw	r26, r28
    3fb0:	a3 57       	subi	r26, 0x73	; 115
    3fb2:	be 4f       	sbci	r27, 0xFE	; 254
    3fb4:	fe 01       	movw	r30, r28
    3fb6:	e3 57       	subi	r30, 0x73	; 115
    3fb8:	fe 4f       	sbci	r31, 0xFE	; 254
    3fba:	80 81       	ld	r24, Z
    3fbc:	91 81       	ldd	r25, Z+1	; 0x01
    3fbe:	01 97       	sbiw	r24, 0x01	; 1
    3fc0:	11 96       	adiw	r26, 0x01	; 1
    3fc2:	9c 93       	st	X, r25
    3fc4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fc6:	fe 01       	movw	r30, r28
    3fc8:	e3 57       	subi	r30, 0x73	; 115
    3fca:	fe 4f       	sbci	r31, 0xFE	; 254
    3fcc:	80 81       	ld	r24, Z
    3fce:	91 81       	ldd	r25, Z+1	; 0x01
    3fd0:	00 97       	sbiw	r24, 0x00	; 0
    3fd2:	d1 f6       	brne	.-76     	; 0x3f88 <main+0x2518>
    3fd4:	27 c0       	rjmp	.+78     	; 0x4024 <main+0x25b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fd6:	8e 01       	movw	r16, r28
    3fd8:	03 57       	subi	r16, 0x73	; 115
    3fda:	1e 4f       	sbci	r17, 0xFE	; 254
    3fdc:	fe 01       	movw	r30, r28
    3fde:	e1 57       	subi	r30, 0x71	; 113
    3fe0:	fe 4f       	sbci	r31, 0xFE	; 254
    3fe2:	60 81       	ld	r22, Z
    3fe4:	71 81       	ldd	r23, Z+1	; 0x01
    3fe6:	82 81       	ldd	r24, Z+2	; 0x02
    3fe8:	93 81       	ldd	r25, Z+3	; 0x03
    3fea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fee:	dc 01       	movw	r26, r24
    3ff0:	cb 01       	movw	r24, r22
    3ff2:	f8 01       	movw	r30, r16
    3ff4:	91 83       	std	Z+1, r25	; 0x01
    3ff6:	80 83       	st	Z, r24
    3ff8:	de 01       	movw	r26, r28
    3ffa:	a7 57       	subi	r26, 0x77	; 119
    3ffc:	be 4f       	sbci	r27, 0xFE	; 254
    3ffe:	fe 01       	movw	r30, r28
    4000:	e3 57       	subi	r30, 0x73	; 115
    4002:	fe 4f       	sbci	r31, 0xFE	; 254
    4004:	80 81       	ld	r24, Z
    4006:	91 81       	ldd	r25, Z+1	; 0x01
    4008:	8d 93       	st	X+, r24
    400a:	9c 93       	st	X, r25
    400c:	fe 01       	movw	r30, r28
    400e:	e7 57       	subi	r30, 0x77	; 119
    4010:	fe 4f       	sbci	r31, 0xFE	; 254
    4012:	80 81       	ld	r24, Z
    4014:	91 81       	ldd	r25, Z+1	; 0x01
    4016:	01 97       	sbiw	r24, 0x01	; 1
    4018:	f1 f7       	brne	.-4      	; 0x4016 <main+0x25a6>
    401a:	fe 01       	movw	r30, r28
    401c:	e7 57       	subi	r30, 0x77	; 119
    401e:	fe 4f       	sbci	r31, 0xFE	; 254
    4020:	91 83       	std	Z+1, r25	; 0x01
    4022:	80 83       	st	Z, r24
		_delay_ms(10);

		CLCD_u8SendCommand(0b00000001);
    4024:	81 e0       	ldi	r24, 0x01	; 1
    4026:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
		/* Against roadblocks */




		CLCD_u8SendString(roadblock);
    402a:	ce 01       	movw	r24, r28
    402c:	8a 53       	subi	r24, 0x3A	; 58
    402e:	9d 4f       	sbci	r25, 0xFD	; 253
    4030:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
    4034:	fe 01       	movw	r30, r28
    4036:	eb 57       	subi	r30, 0x7B	; 123
    4038:	fe 4f       	sbci	r31, 0xFE	; 254
    403a:	80 e0       	ldi	r24, 0x00	; 0
    403c:	90 e0       	ldi	r25, 0x00	; 0
    403e:	a6 e1       	ldi	r26, 0x16	; 22
    4040:	b3 e4       	ldi	r27, 0x43	; 67
    4042:	80 83       	st	Z, r24
    4044:	91 83       	std	Z+1, r25	; 0x01
    4046:	a2 83       	std	Z+2, r26	; 0x02
    4048:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    404a:	8e 01       	movw	r16, r28
    404c:	0f 57       	subi	r16, 0x7F	; 127
    404e:	1e 4f       	sbci	r17, 0xFE	; 254
    4050:	fe 01       	movw	r30, r28
    4052:	eb 57       	subi	r30, 0x7B	; 123
    4054:	fe 4f       	sbci	r31, 0xFE	; 254
    4056:	60 81       	ld	r22, Z
    4058:	71 81       	ldd	r23, Z+1	; 0x01
    405a:	82 81       	ldd	r24, Z+2	; 0x02
    405c:	93 81       	ldd	r25, Z+3	; 0x03
    405e:	20 e0       	ldi	r18, 0x00	; 0
    4060:	30 e0       	ldi	r19, 0x00	; 0
    4062:	4a ef       	ldi	r20, 0xFA	; 250
    4064:	54 e4       	ldi	r21, 0x44	; 68
    4066:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    406a:	dc 01       	movw	r26, r24
    406c:	cb 01       	movw	r24, r22
    406e:	f8 01       	movw	r30, r16
    4070:	80 83       	st	Z, r24
    4072:	91 83       	std	Z+1, r25	; 0x01
    4074:	a2 83       	std	Z+2, r26	; 0x02
    4076:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4078:	fe 01       	movw	r30, r28
    407a:	ef 57       	subi	r30, 0x7F	; 127
    407c:	fe 4f       	sbci	r31, 0xFE	; 254
    407e:	60 81       	ld	r22, Z
    4080:	71 81       	ldd	r23, Z+1	; 0x01
    4082:	82 81       	ldd	r24, Z+2	; 0x02
    4084:	93 81       	ldd	r25, Z+3	; 0x03
    4086:	20 e0       	ldi	r18, 0x00	; 0
    4088:	30 e0       	ldi	r19, 0x00	; 0
    408a:	40 e8       	ldi	r20, 0x80	; 128
    408c:	5f e3       	ldi	r21, 0x3F	; 63
    408e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4092:	88 23       	and	r24, r24
    4094:	44 f4       	brge	.+16     	; 0x40a6 <main+0x2636>
		__ticks = 1;
    4096:	fe 01       	movw	r30, r28
    4098:	e1 58       	subi	r30, 0x81	; 129
    409a:	fe 4f       	sbci	r31, 0xFE	; 254
    409c:	81 e0       	ldi	r24, 0x01	; 1
    409e:	90 e0       	ldi	r25, 0x00	; 0
    40a0:	91 83       	std	Z+1, r25	; 0x01
    40a2:	80 83       	st	Z, r24
    40a4:	64 c0       	rjmp	.+200    	; 0x416e <main+0x26fe>
	else if (__tmp > 65535)
    40a6:	fe 01       	movw	r30, r28
    40a8:	ef 57       	subi	r30, 0x7F	; 127
    40aa:	fe 4f       	sbci	r31, 0xFE	; 254
    40ac:	60 81       	ld	r22, Z
    40ae:	71 81       	ldd	r23, Z+1	; 0x01
    40b0:	82 81       	ldd	r24, Z+2	; 0x02
    40b2:	93 81       	ldd	r25, Z+3	; 0x03
    40b4:	20 e0       	ldi	r18, 0x00	; 0
    40b6:	3f ef       	ldi	r19, 0xFF	; 255
    40b8:	4f e7       	ldi	r20, 0x7F	; 127
    40ba:	57 e4       	ldi	r21, 0x47	; 71
    40bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    40c0:	18 16       	cp	r1, r24
    40c2:	0c f0       	brlt	.+2      	; 0x40c6 <main+0x2656>
    40c4:	43 c0       	rjmp	.+134    	; 0x414c <main+0x26dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40c6:	fe 01       	movw	r30, r28
    40c8:	eb 57       	subi	r30, 0x7B	; 123
    40ca:	fe 4f       	sbci	r31, 0xFE	; 254
    40cc:	60 81       	ld	r22, Z
    40ce:	71 81       	ldd	r23, Z+1	; 0x01
    40d0:	82 81       	ldd	r24, Z+2	; 0x02
    40d2:	93 81       	ldd	r25, Z+3	; 0x03
    40d4:	20 e0       	ldi	r18, 0x00	; 0
    40d6:	30 e0       	ldi	r19, 0x00	; 0
    40d8:	40 e2       	ldi	r20, 0x20	; 32
    40da:	51 e4       	ldi	r21, 0x41	; 65
    40dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40e0:	dc 01       	movw	r26, r24
    40e2:	cb 01       	movw	r24, r22
    40e4:	8e 01       	movw	r16, r28
    40e6:	01 58       	subi	r16, 0x81	; 129
    40e8:	1e 4f       	sbci	r17, 0xFE	; 254
    40ea:	bc 01       	movw	r22, r24
    40ec:	cd 01       	movw	r24, r26
    40ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40f2:	dc 01       	movw	r26, r24
    40f4:	cb 01       	movw	r24, r22
    40f6:	f8 01       	movw	r30, r16
    40f8:	91 83       	std	Z+1, r25	; 0x01
    40fa:	80 83       	st	Z, r24
    40fc:	1f c0       	rjmp	.+62     	; 0x413c <main+0x26cc>
    40fe:	fe 01       	movw	r30, r28
    4100:	e3 58       	subi	r30, 0x83	; 131
    4102:	fe 4f       	sbci	r31, 0xFE	; 254
    4104:	88 ec       	ldi	r24, 0xC8	; 200
    4106:	90 e0       	ldi	r25, 0x00	; 0
    4108:	91 83       	std	Z+1, r25	; 0x01
    410a:	80 83       	st	Z, r24
    410c:	fe 01       	movw	r30, r28
    410e:	e3 58       	subi	r30, 0x83	; 131
    4110:	fe 4f       	sbci	r31, 0xFE	; 254
    4112:	80 81       	ld	r24, Z
    4114:	91 81       	ldd	r25, Z+1	; 0x01
    4116:	01 97       	sbiw	r24, 0x01	; 1
    4118:	f1 f7       	brne	.-4      	; 0x4116 <main+0x26a6>
    411a:	fe 01       	movw	r30, r28
    411c:	e3 58       	subi	r30, 0x83	; 131
    411e:	fe 4f       	sbci	r31, 0xFE	; 254
    4120:	91 83       	std	Z+1, r25	; 0x01
    4122:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4124:	de 01       	movw	r26, r28
    4126:	a1 58       	subi	r26, 0x81	; 129
    4128:	be 4f       	sbci	r27, 0xFE	; 254
    412a:	fe 01       	movw	r30, r28
    412c:	e1 58       	subi	r30, 0x81	; 129
    412e:	fe 4f       	sbci	r31, 0xFE	; 254
    4130:	80 81       	ld	r24, Z
    4132:	91 81       	ldd	r25, Z+1	; 0x01
    4134:	01 97       	sbiw	r24, 0x01	; 1
    4136:	11 96       	adiw	r26, 0x01	; 1
    4138:	9c 93       	st	X, r25
    413a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    413c:	fe 01       	movw	r30, r28
    413e:	e1 58       	subi	r30, 0x81	; 129
    4140:	fe 4f       	sbci	r31, 0xFE	; 254
    4142:	80 81       	ld	r24, Z
    4144:	91 81       	ldd	r25, Z+1	; 0x01
    4146:	00 97       	sbiw	r24, 0x00	; 0
    4148:	d1 f6       	brne	.-76     	; 0x40fe <main+0x268e>
    414a:	27 c0       	rjmp	.+78     	; 0x419a <main+0x272a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    414c:	8e 01       	movw	r16, r28
    414e:	01 58       	subi	r16, 0x81	; 129
    4150:	1e 4f       	sbci	r17, 0xFE	; 254
    4152:	fe 01       	movw	r30, r28
    4154:	ef 57       	subi	r30, 0x7F	; 127
    4156:	fe 4f       	sbci	r31, 0xFE	; 254
    4158:	60 81       	ld	r22, Z
    415a:	71 81       	ldd	r23, Z+1	; 0x01
    415c:	82 81       	ldd	r24, Z+2	; 0x02
    415e:	93 81       	ldd	r25, Z+3	; 0x03
    4160:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4164:	dc 01       	movw	r26, r24
    4166:	cb 01       	movw	r24, r22
    4168:	f8 01       	movw	r30, r16
    416a:	91 83       	std	Z+1, r25	; 0x01
    416c:	80 83       	st	Z, r24
    416e:	de 01       	movw	r26, r28
    4170:	a5 58       	subi	r26, 0x85	; 133
    4172:	be 4f       	sbci	r27, 0xFE	; 254
    4174:	fe 01       	movw	r30, r28
    4176:	e1 58       	subi	r30, 0x81	; 129
    4178:	fe 4f       	sbci	r31, 0xFE	; 254
    417a:	80 81       	ld	r24, Z
    417c:	91 81       	ldd	r25, Z+1	; 0x01
    417e:	8d 93       	st	X+, r24
    4180:	9c 93       	st	X, r25
    4182:	fe 01       	movw	r30, r28
    4184:	e5 58       	subi	r30, 0x85	; 133
    4186:	fe 4f       	sbci	r31, 0xFE	; 254
    4188:	80 81       	ld	r24, Z
    418a:	91 81       	ldd	r25, Z+1	; 0x01
    418c:	01 97       	sbiw	r24, 0x01	; 1
    418e:	f1 f7       	brne	.-4      	; 0x418c <main+0x271c>
    4190:	fe 01       	movw	r30, r28
    4192:	e5 58       	subi	r30, 0x85	; 133
    4194:	fe 4f       	sbci	r31, 0xFE	; 254
    4196:	91 83       	std	Z+1, r25	; 0x01
    4198:	80 83       	st	Z, r24
		_delay_ms(150);
		CLCD_u8SendCommand(0b00000001);
    419a:	81 e0       	ldi	r24, 0x01	; 1
    419c:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>





		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,1);
    41a0:	ce 01       	movw	r24, r28
    41a2:	82 5e       	subi	r24, 0xE2	; 226
    41a4:	9c 4f       	sbci	r25, 0xFC	; 252
    41a6:	60 e0       	ldi	r22, 0x00	; 0
    41a8:	41 e0       	ldi	r20, 0x01	; 1
    41aa:	21 e0       	ldi	r18, 0x01	; 1
    41ac:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>

		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,14);
    41b0:	ce 01       	movw	r24, r28
    41b2:	8a 5d       	subi	r24, 0xDA	; 218
    41b4:	9c 4f       	sbci	r25, 0xFC	; 252
    41b6:	61 e0       	ldi	r22, 0x01	; 1
    41b8:	41 e0       	ldi	r20, 0x01	; 1
    41ba:	2e e0       	ldi	r18, 0x0E	; 14
    41bc:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    41c0:	fe 01       	movw	r30, r28
    41c2:	e9 58       	subi	r30, 0x89	; 137
    41c4:	fe 4f       	sbci	r31, 0xFE	; 254
    41c6:	80 e0       	ldi	r24, 0x00	; 0
    41c8:	90 e0       	ldi	r25, 0x00	; 0
    41ca:	a0 e2       	ldi	r26, 0x20	; 32
    41cc:	b1 e4       	ldi	r27, 0x41	; 65
    41ce:	80 83       	st	Z, r24
    41d0:	91 83       	std	Z+1, r25	; 0x01
    41d2:	a2 83       	std	Z+2, r26	; 0x02
    41d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41d6:	8e 01       	movw	r16, r28
    41d8:	0d 58       	subi	r16, 0x8D	; 141
    41da:	1e 4f       	sbci	r17, 0xFE	; 254
    41dc:	fe 01       	movw	r30, r28
    41de:	e9 58       	subi	r30, 0x89	; 137
    41e0:	fe 4f       	sbci	r31, 0xFE	; 254
    41e2:	60 81       	ld	r22, Z
    41e4:	71 81       	ldd	r23, Z+1	; 0x01
    41e6:	82 81       	ldd	r24, Z+2	; 0x02
    41e8:	93 81       	ldd	r25, Z+3	; 0x03
    41ea:	20 e0       	ldi	r18, 0x00	; 0
    41ec:	30 e0       	ldi	r19, 0x00	; 0
    41ee:	4a ef       	ldi	r20, 0xFA	; 250
    41f0:	54 e4       	ldi	r21, 0x44	; 68
    41f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41f6:	dc 01       	movw	r26, r24
    41f8:	cb 01       	movw	r24, r22
    41fa:	f8 01       	movw	r30, r16
    41fc:	80 83       	st	Z, r24
    41fe:	91 83       	std	Z+1, r25	; 0x01
    4200:	a2 83       	std	Z+2, r26	; 0x02
    4202:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4204:	fe 01       	movw	r30, r28
    4206:	ed 58       	subi	r30, 0x8D	; 141
    4208:	fe 4f       	sbci	r31, 0xFE	; 254
    420a:	60 81       	ld	r22, Z
    420c:	71 81       	ldd	r23, Z+1	; 0x01
    420e:	82 81       	ldd	r24, Z+2	; 0x02
    4210:	93 81       	ldd	r25, Z+3	; 0x03
    4212:	20 e0       	ldi	r18, 0x00	; 0
    4214:	30 e0       	ldi	r19, 0x00	; 0
    4216:	40 e8       	ldi	r20, 0x80	; 128
    4218:	5f e3       	ldi	r21, 0x3F	; 63
    421a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    421e:	88 23       	and	r24, r24
    4220:	44 f4       	brge	.+16     	; 0x4232 <main+0x27c2>
		__ticks = 1;
    4222:	fe 01       	movw	r30, r28
    4224:	ef 58       	subi	r30, 0x8F	; 143
    4226:	fe 4f       	sbci	r31, 0xFE	; 254
    4228:	81 e0       	ldi	r24, 0x01	; 1
    422a:	90 e0       	ldi	r25, 0x00	; 0
    422c:	91 83       	std	Z+1, r25	; 0x01
    422e:	80 83       	st	Z, r24
    4230:	64 c0       	rjmp	.+200    	; 0x42fa <main+0x288a>
	else if (__tmp > 65535)
    4232:	fe 01       	movw	r30, r28
    4234:	ed 58       	subi	r30, 0x8D	; 141
    4236:	fe 4f       	sbci	r31, 0xFE	; 254
    4238:	60 81       	ld	r22, Z
    423a:	71 81       	ldd	r23, Z+1	; 0x01
    423c:	82 81       	ldd	r24, Z+2	; 0x02
    423e:	93 81       	ldd	r25, Z+3	; 0x03
    4240:	20 e0       	ldi	r18, 0x00	; 0
    4242:	3f ef       	ldi	r19, 0xFF	; 255
    4244:	4f e7       	ldi	r20, 0x7F	; 127
    4246:	57 e4       	ldi	r21, 0x47	; 71
    4248:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    424c:	18 16       	cp	r1, r24
    424e:	0c f0       	brlt	.+2      	; 0x4252 <main+0x27e2>
    4250:	43 c0       	rjmp	.+134    	; 0x42d8 <main+0x2868>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4252:	fe 01       	movw	r30, r28
    4254:	e9 58       	subi	r30, 0x89	; 137
    4256:	fe 4f       	sbci	r31, 0xFE	; 254
    4258:	60 81       	ld	r22, Z
    425a:	71 81       	ldd	r23, Z+1	; 0x01
    425c:	82 81       	ldd	r24, Z+2	; 0x02
    425e:	93 81       	ldd	r25, Z+3	; 0x03
    4260:	20 e0       	ldi	r18, 0x00	; 0
    4262:	30 e0       	ldi	r19, 0x00	; 0
    4264:	40 e2       	ldi	r20, 0x20	; 32
    4266:	51 e4       	ldi	r21, 0x41	; 65
    4268:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    426c:	dc 01       	movw	r26, r24
    426e:	cb 01       	movw	r24, r22
    4270:	8e 01       	movw	r16, r28
    4272:	0f 58       	subi	r16, 0x8F	; 143
    4274:	1e 4f       	sbci	r17, 0xFE	; 254
    4276:	bc 01       	movw	r22, r24
    4278:	cd 01       	movw	r24, r26
    427a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    427e:	dc 01       	movw	r26, r24
    4280:	cb 01       	movw	r24, r22
    4282:	f8 01       	movw	r30, r16
    4284:	91 83       	std	Z+1, r25	; 0x01
    4286:	80 83       	st	Z, r24
    4288:	1f c0       	rjmp	.+62     	; 0x42c8 <main+0x2858>
    428a:	fe 01       	movw	r30, r28
    428c:	e1 59       	subi	r30, 0x91	; 145
    428e:	fe 4f       	sbci	r31, 0xFE	; 254
    4290:	88 ec       	ldi	r24, 0xC8	; 200
    4292:	90 e0       	ldi	r25, 0x00	; 0
    4294:	91 83       	std	Z+1, r25	; 0x01
    4296:	80 83       	st	Z, r24
    4298:	fe 01       	movw	r30, r28
    429a:	e1 59       	subi	r30, 0x91	; 145
    429c:	fe 4f       	sbci	r31, 0xFE	; 254
    429e:	80 81       	ld	r24, Z
    42a0:	91 81       	ldd	r25, Z+1	; 0x01
    42a2:	01 97       	sbiw	r24, 0x01	; 1
    42a4:	f1 f7       	brne	.-4      	; 0x42a2 <main+0x2832>
    42a6:	fe 01       	movw	r30, r28
    42a8:	e1 59       	subi	r30, 0x91	; 145
    42aa:	fe 4f       	sbci	r31, 0xFE	; 254
    42ac:	91 83       	std	Z+1, r25	; 0x01
    42ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42b0:	de 01       	movw	r26, r28
    42b2:	af 58       	subi	r26, 0x8F	; 143
    42b4:	be 4f       	sbci	r27, 0xFE	; 254
    42b6:	fe 01       	movw	r30, r28
    42b8:	ef 58       	subi	r30, 0x8F	; 143
    42ba:	fe 4f       	sbci	r31, 0xFE	; 254
    42bc:	80 81       	ld	r24, Z
    42be:	91 81       	ldd	r25, Z+1	; 0x01
    42c0:	01 97       	sbiw	r24, 0x01	; 1
    42c2:	11 96       	adiw	r26, 0x01	; 1
    42c4:	9c 93       	st	X, r25
    42c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42c8:	fe 01       	movw	r30, r28
    42ca:	ef 58       	subi	r30, 0x8F	; 143
    42cc:	fe 4f       	sbci	r31, 0xFE	; 254
    42ce:	80 81       	ld	r24, Z
    42d0:	91 81       	ldd	r25, Z+1	; 0x01
    42d2:	00 97       	sbiw	r24, 0x00	; 0
    42d4:	d1 f6       	brne	.-76     	; 0x428a <main+0x281a>
    42d6:	27 c0       	rjmp	.+78     	; 0x4326 <main+0x28b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42d8:	8e 01       	movw	r16, r28
    42da:	0f 58       	subi	r16, 0x8F	; 143
    42dc:	1e 4f       	sbci	r17, 0xFE	; 254
    42de:	fe 01       	movw	r30, r28
    42e0:	ed 58       	subi	r30, 0x8D	; 141
    42e2:	fe 4f       	sbci	r31, 0xFE	; 254
    42e4:	60 81       	ld	r22, Z
    42e6:	71 81       	ldd	r23, Z+1	; 0x01
    42e8:	82 81       	ldd	r24, Z+2	; 0x02
    42ea:	93 81       	ldd	r25, Z+3	; 0x03
    42ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42f0:	dc 01       	movw	r26, r24
    42f2:	cb 01       	movw	r24, r22
    42f4:	f8 01       	movw	r30, r16
    42f6:	91 83       	std	Z+1, r25	; 0x01
    42f8:	80 83       	st	Z, r24
    42fa:	de 01       	movw	r26, r28
    42fc:	a3 59       	subi	r26, 0x93	; 147
    42fe:	be 4f       	sbci	r27, 0xFE	; 254
    4300:	fe 01       	movw	r30, r28
    4302:	ef 58       	subi	r30, 0x8F	; 143
    4304:	fe 4f       	sbci	r31, 0xFE	; 254
    4306:	80 81       	ld	r24, Z
    4308:	91 81       	ldd	r25, Z+1	; 0x01
    430a:	8d 93       	st	X+, r24
    430c:	9c 93       	st	X, r25
    430e:	fe 01       	movw	r30, r28
    4310:	e3 59       	subi	r30, 0x93	; 147
    4312:	fe 4f       	sbci	r31, 0xFE	; 254
    4314:	80 81       	ld	r24, Z
    4316:	91 81       	ldd	r25, Z+1	; 0x01
    4318:	01 97       	sbiw	r24, 0x01	; 1
    431a:	f1 f7       	brne	.-4      	; 0x4318 <main+0x28a8>
    431c:	fe 01       	movw	r30, r28
    431e:	e3 59       	subi	r30, 0x93	; 147
    4320:	fe 4f       	sbci	r31, 0xFE	; 254
    4322:	91 83       	std	Z+1, r25	; 0x01
    4324:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    4326:	81 e0       	ldi	r24, 0x01	; 1
    4328:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,2);
    432c:	ce 01       	movw	r24, r28
    432e:	8a 50       	subi	r24, 0x0A	; 10
    4330:	9d 4f       	sbci	r25, 0xFD	; 253
    4332:	60 e0       	ldi	r22, 0x00	; 0
    4334:	41 e0       	ldi	r20, 0x01	; 1
    4336:	22 e0       	ldi	r18, 0x02	; 2
    4338:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,13);
    433c:	ce 01       	movw	r24, r28
    433e:	8a 5d       	subi	r24, 0xDA	; 218
    4340:	9c 4f       	sbci	r25, 0xFC	; 252
    4342:	61 e0       	ldi	r22, 0x01	; 1
    4344:	41 e0       	ldi	r20, 0x01	; 1
    4346:	2d e0       	ldi	r18, 0x0D	; 13
    4348:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    434c:	fe 01       	movw	r30, r28
    434e:	e7 59       	subi	r30, 0x97	; 151
    4350:	fe 4f       	sbci	r31, 0xFE	; 254
    4352:	80 e0       	ldi	r24, 0x00	; 0
    4354:	90 e0       	ldi	r25, 0x00	; 0
    4356:	a0 e2       	ldi	r26, 0x20	; 32
    4358:	b1 e4       	ldi	r27, 0x41	; 65
    435a:	80 83       	st	Z, r24
    435c:	91 83       	std	Z+1, r25	; 0x01
    435e:	a2 83       	std	Z+2, r26	; 0x02
    4360:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4362:	8e 01       	movw	r16, r28
    4364:	0b 59       	subi	r16, 0x9B	; 155
    4366:	1e 4f       	sbci	r17, 0xFE	; 254
    4368:	fe 01       	movw	r30, r28
    436a:	e7 59       	subi	r30, 0x97	; 151
    436c:	fe 4f       	sbci	r31, 0xFE	; 254
    436e:	60 81       	ld	r22, Z
    4370:	71 81       	ldd	r23, Z+1	; 0x01
    4372:	82 81       	ldd	r24, Z+2	; 0x02
    4374:	93 81       	ldd	r25, Z+3	; 0x03
    4376:	20 e0       	ldi	r18, 0x00	; 0
    4378:	30 e0       	ldi	r19, 0x00	; 0
    437a:	4a ef       	ldi	r20, 0xFA	; 250
    437c:	54 e4       	ldi	r21, 0x44	; 68
    437e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4382:	dc 01       	movw	r26, r24
    4384:	cb 01       	movw	r24, r22
    4386:	f8 01       	movw	r30, r16
    4388:	80 83       	st	Z, r24
    438a:	91 83       	std	Z+1, r25	; 0x01
    438c:	a2 83       	std	Z+2, r26	; 0x02
    438e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4390:	fe 01       	movw	r30, r28
    4392:	eb 59       	subi	r30, 0x9B	; 155
    4394:	fe 4f       	sbci	r31, 0xFE	; 254
    4396:	60 81       	ld	r22, Z
    4398:	71 81       	ldd	r23, Z+1	; 0x01
    439a:	82 81       	ldd	r24, Z+2	; 0x02
    439c:	93 81       	ldd	r25, Z+3	; 0x03
    439e:	20 e0       	ldi	r18, 0x00	; 0
    43a0:	30 e0       	ldi	r19, 0x00	; 0
    43a2:	40 e8       	ldi	r20, 0x80	; 128
    43a4:	5f e3       	ldi	r21, 0x3F	; 63
    43a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    43aa:	88 23       	and	r24, r24
    43ac:	44 f4       	brge	.+16     	; 0x43be <main+0x294e>
		__ticks = 1;
    43ae:	fe 01       	movw	r30, r28
    43b0:	ed 59       	subi	r30, 0x9D	; 157
    43b2:	fe 4f       	sbci	r31, 0xFE	; 254
    43b4:	81 e0       	ldi	r24, 0x01	; 1
    43b6:	90 e0       	ldi	r25, 0x00	; 0
    43b8:	91 83       	std	Z+1, r25	; 0x01
    43ba:	80 83       	st	Z, r24
    43bc:	64 c0       	rjmp	.+200    	; 0x4486 <main+0x2a16>
	else if (__tmp > 65535)
    43be:	fe 01       	movw	r30, r28
    43c0:	eb 59       	subi	r30, 0x9B	; 155
    43c2:	fe 4f       	sbci	r31, 0xFE	; 254
    43c4:	60 81       	ld	r22, Z
    43c6:	71 81       	ldd	r23, Z+1	; 0x01
    43c8:	82 81       	ldd	r24, Z+2	; 0x02
    43ca:	93 81       	ldd	r25, Z+3	; 0x03
    43cc:	20 e0       	ldi	r18, 0x00	; 0
    43ce:	3f ef       	ldi	r19, 0xFF	; 255
    43d0:	4f e7       	ldi	r20, 0x7F	; 127
    43d2:	57 e4       	ldi	r21, 0x47	; 71
    43d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    43d8:	18 16       	cp	r1, r24
    43da:	0c f0       	brlt	.+2      	; 0x43de <main+0x296e>
    43dc:	43 c0       	rjmp	.+134    	; 0x4464 <main+0x29f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43de:	fe 01       	movw	r30, r28
    43e0:	e7 59       	subi	r30, 0x97	; 151
    43e2:	fe 4f       	sbci	r31, 0xFE	; 254
    43e4:	60 81       	ld	r22, Z
    43e6:	71 81       	ldd	r23, Z+1	; 0x01
    43e8:	82 81       	ldd	r24, Z+2	; 0x02
    43ea:	93 81       	ldd	r25, Z+3	; 0x03
    43ec:	20 e0       	ldi	r18, 0x00	; 0
    43ee:	30 e0       	ldi	r19, 0x00	; 0
    43f0:	40 e2       	ldi	r20, 0x20	; 32
    43f2:	51 e4       	ldi	r21, 0x41	; 65
    43f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43f8:	dc 01       	movw	r26, r24
    43fa:	cb 01       	movw	r24, r22
    43fc:	8e 01       	movw	r16, r28
    43fe:	0d 59       	subi	r16, 0x9D	; 157
    4400:	1e 4f       	sbci	r17, 0xFE	; 254
    4402:	bc 01       	movw	r22, r24
    4404:	cd 01       	movw	r24, r26
    4406:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    440a:	dc 01       	movw	r26, r24
    440c:	cb 01       	movw	r24, r22
    440e:	f8 01       	movw	r30, r16
    4410:	91 83       	std	Z+1, r25	; 0x01
    4412:	80 83       	st	Z, r24
    4414:	1f c0       	rjmp	.+62     	; 0x4454 <main+0x29e4>
    4416:	fe 01       	movw	r30, r28
    4418:	ef 59       	subi	r30, 0x9F	; 159
    441a:	fe 4f       	sbci	r31, 0xFE	; 254
    441c:	88 ec       	ldi	r24, 0xC8	; 200
    441e:	90 e0       	ldi	r25, 0x00	; 0
    4420:	91 83       	std	Z+1, r25	; 0x01
    4422:	80 83       	st	Z, r24
    4424:	fe 01       	movw	r30, r28
    4426:	ef 59       	subi	r30, 0x9F	; 159
    4428:	fe 4f       	sbci	r31, 0xFE	; 254
    442a:	80 81       	ld	r24, Z
    442c:	91 81       	ldd	r25, Z+1	; 0x01
    442e:	01 97       	sbiw	r24, 0x01	; 1
    4430:	f1 f7       	brne	.-4      	; 0x442e <main+0x29be>
    4432:	fe 01       	movw	r30, r28
    4434:	ef 59       	subi	r30, 0x9F	; 159
    4436:	fe 4f       	sbci	r31, 0xFE	; 254
    4438:	91 83       	std	Z+1, r25	; 0x01
    443a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    443c:	de 01       	movw	r26, r28
    443e:	ad 59       	subi	r26, 0x9D	; 157
    4440:	be 4f       	sbci	r27, 0xFE	; 254
    4442:	fe 01       	movw	r30, r28
    4444:	ed 59       	subi	r30, 0x9D	; 157
    4446:	fe 4f       	sbci	r31, 0xFE	; 254
    4448:	80 81       	ld	r24, Z
    444a:	91 81       	ldd	r25, Z+1	; 0x01
    444c:	01 97       	sbiw	r24, 0x01	; 1
    444e:	11 96       	adiw	r26, 0x01	; 1
    4450:	9c 93       	st	X, r25
    4452:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4454:	fe 01       	movw	r30, r28
    4456:	ed 59       	subi	r30, 0x9D	; 157
    4458:	fe 4f       	sbci	r31, 0xFE	; 254
    445a:	80 81       	ld	r24, Z
    445c:	91 81       	ldd	r25, Z+1	; 0x01
    445e:	00 97       	sbiw	r24, 0x00	; 0
    4460:	d1 f6       	brne	.-76     	; 0x4416 <main+0x29a6>
    4462:	27 c0       	rjmp	.+78     	; 0x44b2 <main+0x2a42>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4464:	8e 01       	movw	r16, r28
    4466:	0d 59       	subi	r16, 0x9D	; 157
    4468:	1e 4f       	sbci	r17, 0xFE	; 254
    446a:	fe 01       	movw	r30, r28
    446c:	eb 59       	subi	r30, 0x9B	; 155
    446e:	fe 4f       	sbci	r31, 0xFE	; 254
    4470:	60 81       	ld	r22, Z
    4472:	71 81       	ldd	r23, Z+1	; 0x01
    4474:	82 81       	ldd	r24, Z+2	; 0x02
    4476:	93 81       	ldd	r25, Z+3	; 0x03
    4478:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    447c:	dc 01       	movw	r26, r24
    447e:	cb 01       	movw	r24, r22
    4480:	f8 01       	movw	r30, r16
    4482:	91 83       	std	Z+1, r25	; 0x01
    4484:	80 83       	st	Z, r24
    4486:	de 01       	movw	r26, r28
    4488:	a1 5a       	subi	r26, 0xA1	; 161
    448a:	be 4f       	sbci	r27, 0xFE	; 254
    448c:	fe 01       	movw	r30, r28
    448e:	ed 59       	subi	r30, 0x9D	; 157
    4490:	fe 4f       	sbci	r31, 0xFE	; 254
    4492:	80 81       	ld	r24, Z
    4494:	91 81       	ldd	r25, Z+1	; 0x01
    4496:	8d 93       	st	X+, r24
    4498:	9c 93       	st	X, r25
    449a:	fe 01       	movw	r30, r28
    449c:	e1 5a       	subi	r30, 0xA1	; 161
    449e:	fe 4f       	sbci	r31, 0xFE	; 254
    44a0:	80 81       	ld	r24, Z
    44a2:	91 81       	ldd	r25, Z+1	; 0x01
    44a4:	01 97       	sbiw	r24, 0x01	; 1
    44a6:	f1 f7       	brne	.-4      	; 0x44a4 <main+0x2a34>
    44a8:	fe 01       	movw	r30, r28
    44aa:	e1 5a       	subi	r30, 0xA1	; 161
    44ac:	fe 4f       	sbci	r31, 0xFE	; 254
    44ae:	91 83       	std	Z+1, r25	; 0x01
    44b0:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    44b2:	81 e0       	ldi	r24, 0x01	; 1
    44b4:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,3);
    44b8:	ce 01       	movw	r24, r28
    44ba:	82 5e       	subi	r24, 0xE2	; 226
    44bc:	9c 4f       	sbci	r25, 0xFC	; 252
    44be:	60 e0       	ldi	r22, 0x00	; 0
    44c0:	41 e0       	ldi	r20, 0x01	; 1
    44c2:	23 e0       	ldi	r18, 0x03	; 3
    44c4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,12);
    44c8:	ce 01       	movw	r24, r28
    44ca:	8a 5d       	subi	r24, 0xDA	; 218
    44cc:	9c 4f       	sbci	r25, 0xFC	; 252
    44ce:	61 e0       	ldi	r22, 0x01	; 1
    44d0:	41 e0       	ldi	r20, 0x01	; 1
    44d2:	2c e0       	ldi	r18, 0x0C	; 12
    44d4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    44d8:	fe 01       	movw	r30, r28
    44da:	e5 5a       	subi	r30, 0xA5	; 165
    44dc:	fe 4f       	sbci	r31, 0xFE	; 254
    44de:	80 e0       	ldi	r24, 0x00	; 0
    44e0:	90 e0       	ldi	r25, 0x00	; 0
    44e2:	a0 e2       	ldi	r26, 0x20	; 32
    44e4:	b1 e4       	ldi	r27, 0x41	; 65
    44e6:	80 83       	st	Z, r24
    44e8:	91 83       	std	Z+1, r25	; 0x01
    44ea:	a2 83       	std	Z+2, r26	; 0x02
    44ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44ee:	8e 01       	movw	r16, r28
    44f0:	09 5a       	subi	r16, 0xA9	; 169
    44f2:	1e 4f       	sbci	r17, 0xFE	; 254
    44f4:	fe 01       	movw	r30, r28
    44f6:	e5 5a       	subi	r30, 0xA5	; 165
    44f8:	fe 4f       	sbci	r31, 0xFE	; 254
    44fa:	60 81       	ld	r22, Z
    44fc:	71 81       	ldd	r23, Z+1	; 0x01
    44fe:	82 81       	ldd	r24, Z+2	; 0x02
    4500:	93 81       	ldd	r25, Z+3	; 0x03
    4502:	20 e0       	ldi	r18, 0x00	; 0
    4504:	30 e0       	ldi	r19, 0x00	; 0
    4506:	4a ef       	ldi	r20, 0xFA	; 250
    4508:	54 e4       	ldi	r21, 0x44	; 68
    450a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    450e:	dc 01       	movw	r26, r24
    4510:	cb 01       	movw	r24, r22
    4512:	f8 01       	movw	r30, r16
    4514:	80 83       	st	Z, r24
    4516:	91 83       	std	Z+1, r25	; 0x01
    4518:	a2 83       	std	Z+2, r26	; 0x02
    451a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    451c:	fe 01       	movw	r30, r28
    451e:	e9 5a       	subi	r30, 0xA9	; 169
    4520:	fe 4f       	sbci	r31, 0xFE	; 254
    4522:	60 81       	ld	r22, Z
    4524:	71 81       	ldd	r23, Z+1	; 0x01
    4526:	82 81       	ldd	r24, Z+2	; 0x02
    4528:	93 81       	ldd	r25, Z+3	; 0x03
    452a:	20 e0       	ldi	r18, 0x00	; 0
    452c:	30 e0       	ldi	r19, 0x00	; 0
    452e:	40 e8       	ldi	r20, 0x80	; 128
    4530:	5f e3       	ldi	r21, 0x3F	; 63
    4532:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4536:	88 23       	and	r24, r24
    4538:	44 f4       	brge	.+16     	; 0x454a <main+0x2ada>
		__ticks = 1;
    453a:	fe 01       	movw	r30, r28
    453c:	eb 5a       	subi	r30, 0xAB	; 171
    453e:	fe 4f       	sbci	r31, 0xFE	; 254
    4540:	81 e0       	ldi	r24, 0x01	; 1
    4542:	90 e0       	ldi	r25, 0x00	; 0
    4544:	91 83       	std	Z+1, r25	; 0x01
    4546:	80 83       	st	Z, r24
    4548:	64 c0       	rjmp	.+200    	; 0x4612 <main+0x2ba2>
	else if (__tmp > 65535)
    454a:	fe 01       	movw	r30, r28
    454c:	e9 5a       	subi	r30, 0xA9	; 169
    454e:	fe 4f       	sbci	r31, 0xFE	; 254
    4550:	60 81       	ld	r22, Z
    4552:	71 81       	ldd	r23, Z+1	; 0x01
    4554:	82 81       	ldd	r24, Z+2	; 0x02
    4556:	93 81       	ldd	r25, Z+3	; 0x03
    4558:	20 e0       	ldi	r18, 0x00	; 0
    455a:	3f ef       	ldi	r19, 0xFF	; 255
    455c:	4f e7       	ldi	r20, 0x7F	; 127
    455e:	57 e4       	ldi	r21, 0x47	; 71
    4560:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4564:	18 16       	cp	r1, r24
    4566:	0c f0       	brlt	.+2      	; 0x456a <main+0x2afa>
    4568:	43 c0       	rjmp	.+134    	; 0x45f0 <main+0x2b80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    456a:	fe 01       	movw	r30, r28
    456c:	e5 5a       	subi	r30, 0xA5	; 165
    456e:	fe 4f       	sbci	r31, 0xFE	; 254
    4570:	60 81       	ld	r22, Z
    4572:	71 81       	ldd	r23, Z+1	; 0x01
    4574:	82 81       	ldd	r24, Z+2	; 0x02
    4576:	93 81       	ldd	r25, Z+3	; 0x03
    4578:	20 e0       	ldi	r18, 0x00	; 0
    457a:	30 e0       	ldi	r19, 0x00	; 0
    457c:	40 e2       	ldi	r20, 0x20	; 32
    457e:	51 e4       	ldi	r21, 0x41	; 65
    4580:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4584:	dc 01       	movw	r26, r24
    4586:	cb 01       	movw	r24, r22
    4588:	8e 01       	movw	r16, r28
    458a:	0b 5a       	subi	r16, 0xAB	; 171
    458c:	1e 4f       	sbci	r17, 0xFE	; 254
    458e:	bc 01       	movw	r22, r24
    4590:	cd 01       	movw	r24, r26
    4592:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4596:	dc 01       	movw	r26, r24
    4598:	cb 01       	movw	r24, r22
    459a:	f8 01       	movw	r30, r16
    459c:	91 83       	std	Z+1, r25	; 0x01
    459e:	80 83       	st	Z, r24
    45a0:	1f c0       	rjmp	.+62     	; 0x45e0 <main+0x2b70>
    45a2:	fe 01       	movw	r30, r28
    45a4:	ed 5a       	subi	r30, 0xAD	; 173
    45a6:	fe 4f       	sbci	r31, 0xFE	; 254
    45a8:	88 ec       	ldi	r24, 0xC8	; 200
    45aa:	90 e0       	ldi	r25, 0x00	; 0
    45ac:	91 83       	std	Z+1, r25	; 0x01
    45ae:	80 83       	st	Z, r24
    45b0:	fe 01       	movw	r30, r28
    45b2:	ed 5a       	subi	r30, 0xAD	; 173
    45b4:	fe 4f       	sbci	r31, 0xFE	; 254
    45b6:	80 81       	ld	r24, Z
    45b8:	91 81       	ldd	r25, Z+1	; 0x01
    45ba:	01 97       	sbiw	r24, 0x01	; 1
    45bc:	f1 f7       	brne	.-4      	; 0x45ba <main+0x2b4a>
    45be:	fe 01       	movw	r30, r28
    45c0:	ed 5a       	subi	r30, 0xAD	; 173
    45c2:	fe 4f       	sbci	r31, 0xFE	; 254
    45c4:	91 83       	std	Z+1, r25	; 0x01
    45c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45c8:	de 01       	movw	r26, r28
    45ca:	ab 5a       	subi	r26, 0xAB	; 171
    45cc:	be 4f       	sbci	r27, 0xFE	; 254
    45ce:	fe 01       	movw	r30, r28
    45d0:	eb 5a       	subi	r30, 0xAB	; 171
    45d2:	fe 4f       	sbci	r31, 0xFE	; 254
    45d4:	80 81       	ld	r24, Z
    45d6:	91 81       	ldd	r25, Z+1	; 0x01
    45d8:	01 97       	sbiw	r24, 0x01	; 1
    45da:	11 96       	adiw	r26, 0x01	; 1
    45dc:	9c 93       	st	X, r25
    45de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45e0:	fe 01       	movw	r30, r28
    45e2:	eb 5a       	subi	r30, 0xAB	; 171
    45e4:	fe 4f       	sbci	r31, 0xFE	; 254
    45e6:	80 81       	ld	r24, Z
    45e8:	91 81       	ldd	r25, Z+1	; 0x01
    45ea:	00 97       	sbiw	r24, 0x00	; 0
    45ec:	d1 f6       	brne	.-76     	; 0x45a2 <main+0x2b32>
    45ee:	27 c0       	rjmp	.+78     	; 0x463e <main+0x2bce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45f0:	8e 01       	movw	r16, r28
    45f2:	0b 5a       	subi	r16, 0xAB	; 171
    45f4:	1e 4f       	sbci	r17, 0xFE	; 254
    45f6:	fe 01       	movw	r30, r28
    45f8:	e9 5a       	subi	r30, 0xA9	; 169
    45fa:	fe 4f       	sbci	r31, 0xFE	; 254
    45fc:	60 81       	ld	r22, Z
    45fe:	71 81       	ldd	r23, Z+1	; 0x01
    4600:	82 81       	ldd	r24, Z+2	; 0x02
    4602:	93 81       	ldd	r25, Z+3	; 0x03
    4604:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4608:	dc 01       	movw	r26, r24
    460a:	cb 01       	movw	r24, r22
    460c:	f8 01       	movw	r30, r16
    460e:	91 83       	std	Z+1, r25	; 0x01
    4610:	80 83       	st	Z, r24
    4612:	de 01       	movw	r26, r28
    4614:	af 5a       	subi	r26, 0xAF	; 175
    4616:	be 4f       	sbci	r27, 0xFE	; 254
    4618:	fe 01       	movw	r30, r28
    461a:	eb 5a       	subi	r30, 0xAB	; 171
    461c:	fe 4f       	sbci	r31, 0xFE	; 254
    461e:	80 81       	ld	r24, Z
    4620:	91 81       	ldd	r25, Z+1	; 0x01
    4622:	8d 93       	st	X+, r24
    4624:	9c 93       	st	X, r25
    4626:	fe 01       	movw	r30, r28
    4628:	ef 5a       	subi	r30, 0xAF	; 175
    462a:	fe 4f       	sbci	r31, 0xFE	; 254
    462c:	80 81       	ld	r24, Z
    462e:	91 81       	ldd	r25, Z+1	; 0x01
    4630:	01 97       	sbiw	r24, 0x01	; 1
    4632:	f1 f7       	brne	.-4      	; 0x4630 <main+0x2bc0>
    4634:	fe 01       	movw	r30, r28
    4636:	ef 5a       	subi	r30, 0xAF	; 175
    4638:	fe 4f       	sbci	r31, 0xFE	; 254
    463a:	91 83       	std	Z+1, r25	; 0x01
    463c:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    463e:	81 e0       	ldi	r24, 0x01	; 1
    4640:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,4);
    4644:	ce 01       	movw	r24, r28
    4646:	8a 50       	subi	r24, 0x0A	; 10
    4648:	9d 4f       	sbci	r25, 0xFD	; 253
    464a:	60 e0       	ldi	r22, 0x00	; 0
    464c:	41 e0       	ldi	r20, 0x01	; 1
    464e:	24 e0       	ldi	r18, 0x04	; 4
    4650:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,11);
    4654:	ce 01       	movw	r24, r28
    4656:	8a 5d       	subi	r24, 0xDA	; 218
    4658:	9c 4f       	sbci	r25, 0xFC	; 252
    465a:	61 e0       	ldi	r22, 0x01	; 1
    465c:	41 e0       	ldi	r20, 0x01	; 1
    465e:	2b e0       	ldi	r18, 0x0B	; 11
    4660:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4664:	fe 01       	movw	r30, r28
    4666:	e3 5b       	subi	r30, 0xB3	; 179
    4668:	fe 4f       	sbci	r31, 0xFE	; 254
    466a:	80 e0       	ldi	r24, 0x00	; 0
    466c:	90 e0       	ldi	r25, 0x00	; 0
    466e:	a0 e2       	ldi	r26, 0x20	; 32
    4670:	b1 e4       	ldi	r27, 0x41	; 65
    4672:	80 83       	st	Z, r24
    4674:	91 83       	std	Z+1, r25	; 0x01
    4676:	a2 83       	std	Z+2, r26	; 0x02
    4678:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    467a:	8e 01       	movw	r16, r28
    467c:	07 5b       	subi	r16, 0xB7	; 183
    467e:	1e 4f       	sbci	r17, 0xFE	; 254
    4680:	fe 01       	movw	r30, r28
    4682:	e3 5b       	subi	r30, 0xB3	; 179
    4684:	fe 4f       	sbci	r31, 0xFE	; 254
    4686:	60 81       	ld	r22, Z
    4688:	71 81       	ldd	r23, Z+1	; 0x01
    468a:	82 81       	ldd	r24, Z+2	; 0x02
    468c:	93 81       	ldd	r25, Z+3	; 0x03
    468e:	20 e0       	ldi	r18, 0x00	; 0
    4690:	30 e0       	ldi	r19, 0x00	; 0
    4692:	4a ef       	ldi	r20, 0xFA	; 250
    4694:	54 e4       	ldi	r21, 0x44	; 68
    4696:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    469a:	dc 01       	movw	r26, r24
    469c:	cb 01       	movw	r24, r22
    469e:	f8 01       	movw	r30, r16
    46a0:	80 83       	st	Z, r24
    46a2:	91 83       	std	Z+1, r25	; 0x01
    46a4:	a2 83       	std	Z+2, r26	; 0x02
    46a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46a8:	fe 01       	movw	r30, r28
    46aa:	e7 5b       	subi	r30, 0xB7	; 183
    46ac:	fe 4f       	sbci	r31, 0xFE	; 254
    46ae:	60 81       	ld	r22, Z
    46b0:	71 81       	ldd	r23, Z+1	; 0x01
    46b2:	82 81       	ldd	r24, Z+2	; 0x02
    46b4:	93 81       	ldd	r25, Z+3	; 0x03
    46b6:	20 e0       	ldi	r18, 0x00	; 0
    46b8:	30 e0       	ldi	r19, 0x00	; 0
    46ba:	40 e8       	ldi	r20, 0x80	; 128
    46bc:	5f e3       	ldi	r21, 0x3F	; 63
    46be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    46c2:	88 23       	and	r24, r24
    46c4:	44 f4       	brge	.+16     	; 0x46d6 <main+0x2c66>
		__ticks = 1;
    46c6:	fe 01       	movw	r30, r28
    46c8:	e9 5b       	subi	r30, 0xB9	; 185
    46ca:	fe 4f       	sbci	r31, 0xFE	; 254
    46cc:	81 e0       	ldi	r24, 0x01	; 1
    46ce:	90 e0       	ldi	r25, 0x00	; 0
    46d0:	91 83       	std	Z+1, r25	; 0x01
    46d2:	80 83       	st	Z, r24
    46d4:	64 c0       	rjmp	.+200    	; 0x479e <main+0x2d2e>
	else if (__tmp > 65535)
    46d6:	fe 01       	movw	r30, r28
    46d8:	e7 5b       	subi	r30, 0xB7	; 183
    46da:	fe 4f       	sbci	r31, 0xFE	; 254
    46dc:	60 81       	ld	r22, Z
    46de:	71 81       	ldd	r23, Z+1	; 0x01
    46e0:	82 81       	ldd	r24, Z+2	; 0x02
    46e2:	93 81       	ldd	r25, Z+3	; 0x03
    46e4:	20 e0       	ldi	r18, 0x00	; 0
    46e6:	3f ef       	ldi	r19, 0xFF	; 255
    46e8:	4f e7       	ldi	r20, 0x7F	; 127
    46ea:	57 e4       	ldi	r21, 0x47	; 71
    46ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    46f0:	18 16       	cp	r1, r24
    46f2:	0c f0       	brlt	.+2      	; 0x46f6 <main+0x2c86>
    46f4:	43 c0       	rjmp	.+134    	; 0x477c <main+0x2d0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46f6:	fe 01       	movw	r30, r28
    46f8:	e3 5b       	subi	r30, 0xB3	; 179
    46fa:	fe 4f       	sbci	r31, 0xFE	; 254
    46fc:	60 81       	ld	r22, Z
    46fe:	71 81       	ldd	r23, Z+1	; 0x01
    4700:	82 81       	ldd	r24, Z+2	; 0x02
    4702:	93 81       	ldd	r25, Z+3	; 0x03
    4704:	20 e0       	ldi	r18, 0x00	; 0
    4706:	30 e0       	ldi	r19, 0x00	; 0
    4708:	40 e2       	ldi	r20, 0x20	; 32
    470a:	51 e4       	ldi	r21, 0x41	; 65
    470c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4710:	dc 01       	movw	r26, r24
    4712:	cb 01       	movw	r24, r22
    4714:	8e 01       	movw	r16, r28
    4716:	09 5b       	subi	r16, 0xB9	; 185
    4718:	1e 4f       	sbci	r17, 0xFE	; 254
    471a:	bc 01       	movw	r22, r24
    471c:	cd 01       	movw	r24, r26
    471e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4722:	dc 01       	movw	r26, r24
    4724:	cb 01       	movw	r24, r22
    4726:	f8 01       	movw	r30, r16
    4728:	91 83       	std	Z+1, r25	; 0x01
    472a:	80 83       	st	Z, r24
    472c:	1f c0       	rjmp	.+62     	; 0x476c <main+0x2cfc>
    472e:	fe 01       	movw	r30, r28
    4730:	eb 5b       	subi	r30, 0xBB	; 187
    4732:	fe 4f       	sbci	r31, 0xFE	; 254
    4734:	88 ec       	ldi	r24, 0xC8	; 200
    4736:	90 e0       	ldi	r25, 0x00	; 0
    4738:	91 83       	std	Z+1, r25	; 0x01
    473a:	80 83       	st	Z, r24
    473c:	fe 01       	movw	r30, r28
    473e:	eb 5b       	subi	r30, 0xBB	; 187
    4740:	fe 4f       	sbci	r31, 0xFE	; 254
    4742:	80 81       	ld	r24, Z
    4744:	91 81       	ldd	r25, Z+1	; 0x01
    4746:	01 97       	sbiw	r24, 0x01	; 1
    4748:	f1 f7       	brne	.-4      	; 0x4746 <main+0x2cd6>
    474a:	fe 01       	movw	r30, r28
    474c:	eb 5b       	subi	r30, 0xBB	; 187
    474e:	fe 4f       	sbci	r31, 0xFE	; 254
    4750:	91 83       	std	Z+1, r25	; 0x01
    4752:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4754:	de 01       	movw	r26, r28
    4756:	a9 5b       	subi	r26, 0xB9	; 185
    4758:	be 4f       	sbci	r27, 0xFE	; 254
    475a:	fe 01       	movw	r30, r28
    475c:	e9 5b       	subi	r30, 0xB9	; 185
    475e:	fe 4f       	sbci	r31, 0xFE	; 254
    4760:	80 81       	ld	r24, Z
    4762:	91 81       	ldd	r25, Z+1	; 0x01
    4764:	01 97       	sbiw	r24, 0x01	; 1
    4766:	11 96       	adiw	r26, 0x01	; 1
    4768:	9c 93       	st	X, r25
    476a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    476c:	fe 01       	movw	r30, r28
    476e:	e9 5b       	subi	r30, 0xB9	; 185
    4770:	fe 4f       	sbci	r31, 0xFE	; 254
    4772:	80 81       	ld	r24, Z
    4774:	91 81       	ldd	r25, Z+1	; 0x01
    4776:	00 97       	sbiw	r24, 0x00	; 0
    4778:	d1 f6       	brne	.-76     	; 0x472e <main+0x2cbe>
    477a:	27 c0       	rjmp	.+78     	; 0x47ca <main+0x2d5a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    477c:	8e 01       	movw	r16, r28
    477e:	09 5b       	subi	r16, 0xB9	; 185
    4780:	1e 4f       	sbci	r17, 0xFE	; 254
    4782:	fe 01       	movw	r30, r28
    4784:	e7 5b       	subi	r30, 0xB7	; 183
    4786:	fe 4f       	sbci	r31, 0xFE	; 254
    4788:	60 81       	ld	r22, Z
    478a:	71 81       	ldd	r23, Z+1	; 0x01
    478c:	82 81       	ldd	r24, Z+2	; 0x02
    478e:	93 81       	ldd	r25, Z+3	; 0x03
    4790:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4794:	dc 01       	movw	r26, r24
    4796:	cb 01       	movw	r24, r22
    4798:	f8 01       	movw	r30, r16
    479a:	91 83       	std	Z+1, r25	; 0x01
    479c:	80 83       	st	Z, r24
    479e:	de 01       	movw	r26, r28
    47a0:	ad 5b       	subi	r26, 0xBD	; 189
    47a2:	be 4f       	sbci	r27, 0xFE	; 254
    47a4:	fe 01       	movw	r30, r28
    47a6:	e9 5b       	subi	r30, 0xB9	; 185
    47a8:	fe 4f       	sbci	r31, 0xFE	; 254
    47aa:	80 81       	ld	r24, Z
    47ac:	91 81       	ldd	r25, Z+1	; 0x01
    47ae:	8d 93       	st	X+, r24
    47b0:	9c 93       	st	X, r25
    47b2:	fe 01       	movw	r30, r28
    47b4:	ed 5b       	subi	r30, 0xBD	; 189
    47b6:	fe 4f       	sbci	r31, 0xFE	; 254
    47b8:	80 81       	ld	r24, Z
    47ba:	91 81       	ldd	r25, Z+1	; 0x01
    47bc:	01 97       	sbiw	r24, 0x01	; 1
    47be:	f1 f7       	brne	.-4      	; 0x47bc <main+0x2d4c>
    47c0:	fe 01       	movw	r30, r28
    47c2:	ed 5b       	subi	r30, 0xBD	; 189
    47c4:	fe 4f       	sbci	r31, 0xFE	; 254
    47c6:	91 83       	std	Z+1, r25	; 0x01
    47c8:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    47ca:	81 e0       	ldi	r24, 0x01	; 1
    47cc:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,5);
    47d0:	ce 01       	movw	r24, r28
    47d2:	82 5e       	subi	r24, 0xE2	; 226
    47d4:	9c 4f       	sbci	r25, 0xFC	; 252
    47d6:	60 e0       	ldi	r22, 0x00	; 0
    47d8:	41 e0       	ldi	r20, 0x01	; 1
    47da:	25 e0       	ldi	r18, 0x05	; 5
    47dc:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,10);
    47e0:	ce 01       	movw	r24, r28
    47e2:	8a 5d       	subi	r24, 0xDA	; 218
    47e4:	9c 4f       	sbci	r25, 0xFC	; 252
    47e6:	61 e0       	ldi	r22, 0x01	; 1
    47e8:	41 e0       	ldi	r20, 0x01	; 1
    47ea:	2a e0       	ldi	r18, 0x0A	; 10
    47ec:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    47f0:	fe 01       	movw	r30, r28
    47f2:	e1 5c       	subi	r30, 0xC1	; 193
    47f4:	fe 4f       	sbci	r31, 0xFE	; 254
    47f6:	80 e0       	ldi	r24, 0x00	; 0
    47f8:	90 e0       	ldi	r25, 0x00	; 0
    47fa:	a0 e2       	ldi	r26, 0x20	; 32
    47fc:	b1 e4       	ldi	r27, 0x41	; 65
    47fe:	80 83       	st	Z, r24
    4800:	91 83       	std	Z+1, r25	; 0x01
    4802:	a2 83       	std	Z+2, r26	; 0x02
    4804:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4806:	8e 01       	movw	r16, r28
    4808:	05 5c       	subi	r16, 0xC5	; 197
    480a:	1e 4f       	sbci	r17, 0xFE	; 254
    480c:	fe 01       	movw	r30, r28
    480e:	e1 5c       	subi	r30, 0xC1	; 193
    4810:	fe 4f       	sbci	r31, 0xFE	; 254
    4812:	60 81       	ld	r22, Z
    4814:	71 81       	ldd	r23, Z+1	; 0x01
    4816:	82 81       	ldd	r24, Z+2	; 0x02
    4818:	93 81       	ldd	r25, Z+3	; 0x03
    481a:	20 e0       	ldi	r18, 0x00	; 0
    481c:	30 e0       	ldi	r19, 0x00	; 0
    481e:	4a ef       	ldi	r20, 0xFA	; 250
    4820:	54 e4       	ldi	r21, 0x44	; 68
    4822:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4826:	dc 01       	movw	r26, r24
    4828:	cb 01       	movw	r24, r22
    482a:	f8 01       	movw	r30, r16
    482c:	80 83       	st	Z, r24
    482e:	91 83       	std	Z+1, r25	; 0x01
    4830:	a2 83       	std	Z+2, r26	; 0x02
    4832:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4834:	fe 01       	movw	r30, r28
    4836:	e5 5c       	subi	r30, 0xC5	; 197
    4838:	fe 4f       	sbci	r31, 0xFE	; 254
    483a:	60 81       	ld	r22, Z
    483c:	71 81       	ldd	r23, Z+1	; 0x01
    483e:	82 81       	ldd	r24, Z+2	; 0x02
    4840:	93 81       	ldd	r25, Z+3	; 0x03
    4842:	20 e0       	ldi	r18, 0x00	; 0
    4844:	30 e0       	ldi	r19, 0x00	; 0
    4846:	40 e8       	ldi	r20, 0x80	; 128
    4848:	5f e3       	ldi	r21, 0x3F	; 63
    484a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    484e:	88 23       	and	r24, r24
    4850:	44 f4       	brge	.+16     	; 0x4862 <main+0x2df2>
		__ticks = 1;
    4852:	fe 01       	movw	r30, r28
    4854:	e7 5c       	subi	r30, 0xC7	; 199
    4856:	fe 4f       	sbci	r31, 0xFE	; 254
    4858:	81 e0       	ldi	r24, 0x01	; 1
    485a:	90 e0       	ldi	r25, 0x00	; 0
    485c:	91 83       	std	Z+1, r25	; 0x01
    485e:	80 83       	st	Z, r24
    4860:	64 c0       	rjmp	.+200    	; 0x492a <main+0x2eba>
	else if (__tmp > 65535)
    4862:	fe 01       	movw	r30, r28
    4864:	e5 5c       	subi	r30, 0xC5	; 197
    4866:	fe 4f       	sbci	r31, 0xFE	; 254
    4868:	60 81       	ld	r22, Z
    486a:	71 81       	ldd	r23, Z+1	; 0x01
    486c:	82 81       	ldd	r24, Z+2	; 0x02
    486e:	93 81       	ldd	r25, Z+3	; 0x03
    4870:	20 e0       	ldi	r18, 0x00	; 0
    4872:	3f ef       	ldi	r19, 0xFF	; 255
    4874:	4f e7       	ldi	r20, 0x7F	; 127
    4876:	57 e4       	ldi	r21, 0x47	; 71
    4878:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    487c:	18 16       	cp	r1, r24
    487e:	0c f0       	brlt	.+2      	; 0x4882 <main+0x2e12>
    4880:	43 c0       	rjmp	.+134    	; 0x4908 <main+0x2e98>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4882:	fe 01       	movw	r30, r28
    4884:	e1 5c       	subi	r30, 0xC1	; 193
    4886:	fe 4f       	sbci	r31, 0xFE	; 254
    4888:	60 81       	ld	r22, Z
    488a:	71 81       	ldd	r23, Z+1	; 0x01
    488c:	82 81       	ldd	r24, Z+2	; 0x02
    488e:	93 81       	ldd	r25, Z+3	; 0x03
    4890:	20 e0       	ldi	r18, 0x00	; 0
    4892:	30 e0       	ldi	r19, 0x00	; 0
    4894:	40 e2       	ldi	r20, 0x20	; 32
    4896:	51 e4       	ldi	r21, 0x41	; 65
    4898:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    489c:	dc 01       	movw	r26, r24
    489e:	cb 01       	movw	r24, r22
    48a0:	8e 01       	movw	r16, r28
    48a2:	07 5c       	subi	r16, 0xC7	; 199
    48a4:	1e 4f       	sbci	r17, 0xFE	; 254
    48a6:	bc 01       	movw	r22, r24
    48a8:	cd 01       	movw	r24, r26
    48aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ae:	dc 01       	movw	r26, r24
    48b0:	cb 01       	movw	r24, r22
    48b2:	f8 01       	movw	r30, r16
    48b4:	91 83       	std	Z+1, r25	; 0x01
    48b6:	80 83       	st	Z, r24
    48b8:	1f c0       	rjmp	.+62     	; 0x48f8 <main+0x2e88>
    48ba:	fe 01       	movw	r30, r28
    48bc:	e9 5c       	subi	r30, 0xC9	; 201
    48be:	fe 4f       	sbci	r31, 0xFE	; 254
    48c0:	88 ec       	ldi	r24, 0xC8	; 200
    48c2:	90 e0       	ldi	r25, 0x00	; 0
    48c4:	91 83       	std	Z+1, r25	; 0x01
    48c6:	80 83       	st	Z, r24
    48c8:	fe 01       	movw	r30, r28
    48ca:	e9 5c       	subi	r30, 0xC9	; 201
    48cc:	fe 4f       	sbci	r31, 0xFE	; 254
    48ce:	80 81       	ld	r24, Z
    48d0:	91 81       	ldd	r25, Z+1	; 0x01
    48d2:	01 97       	sbiw	r24, 0x01	; 1
    48d4:	f1 f7       	brne	.-4      	; 0x48d2 <main+0x2e62>
    48d6:	fe 01       	movw	r30, r28
    48d8:	e9 5c       	subi	r30, 0xC9	; 201
    48da:	fe 4f       	sbci	r31, 0xFE	; 254
    48dc:	91 83       	std	Z+1, r25	; 0x01
    48de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48e0:	de 01       	movw	r26, r28
    48e2:	a7 5c       	subi	r26, 0xC7	; 199
    48e4:	be 4f       	sbci	r27, 0xFE	; 254
    48e6:	fe 01       	movw	r30, r28
    48e8:	e7 5c       	subi	r30, 0xC7	; 199
    48ea:	fe 4f       	sbci	r31, 0xFE	; 254
    48ec:	80 81       	ld	r24, Z
    48ee:	91 81       	ldd	r25, Z+1	; 0x01
    48f0:	01 97       	sbiw	r24, 0x01	; 1
    48f2:	11 96       	adiw	r26, 0x01	; 1
    48f4:	9c 93       	st	X, r25
    48f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48f8:	fe 01       	movw	r30, r28
    48fa:	e7 5c       	subi	r30, 0xC7	; 199
    48fc:	fe 4f       	sbci	r31, 0xFE	; 254
    48fe:	80 81       	ld	r24, Z
    4900:	91 81       	ldd	r25, Z+1	; 0x01
    4902:	00 97       	sbiw	r24, 0x00	; 0
    4904:	d1 f6       	brne	.-76     	; 0x48ba <main+0x2e4a>
    4906:	27 c0       	rjmp	.+78     	; 0x4956 <main+0x2ee6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4908:	8e 01       	movw	r16, r28
    490a:	07 5c       	subi	r16, 0xC7	; 199
    490c:	1e 4f       	sbci	r17, 0xFE	; 254
    490e:	fe 01       	movw	r30, r28
    4910:	e5 5c       	subi	r30, 0xC5	; 197
    4912:	fe 4f       	sbci	r31, 0xFE	; 254
    4914:	60 81       	ld	r22, Z
    4916:	71 81       	ldd	r23, Z+1	; 0x01
    4918:	82 81       	ldd	r24, Z+2	; 0x02
    491a:	93 81       	ldd	r25, Z+3	; 0x03
    491c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4920:	dc 01       	movw	r26, r24
    4922:	cb 01       	movw	r24, r22
    4924:	f8 01       	movw	r30, r16
    4926:	91 83       	std	Z+1, r25	; 0x01
    4928:	80 83       	st	Z, r24
    492a:	de 01       	movw	r26, r28
    492c:	ab 5c       	subi	r26, 0xCB	; 203
    492e:	be 4f       	sbci	r27, 0xFE	; 254
    4930:	fe 01       	movw	r30, r28
    4932:	e7 5c       	subi	r30, 0xC7	; 199
    4934:	fe 4f       	sbci	r31, 0xFE	; 254
    4936:	80 81       	ld	r24, Z
    4938:	91 81       	ldd	r25, Z+1	; 0x01
    493a:	8d 93       	st	X+, r24
    493c:	9c 93       	st	X, r25
    493e:	fe 01       	movw	r30, r28
    4940:	eb 5c       	subi	r30, 0xCB	; 203
    4942:	fe 4f       	sbci	r31, 0xFE	; 254
    4944:	80 81       	ld	r24, Z
    4946:	91 81       	ldd	r25, Z+1	; 0x01
    4948:	01 97       	sbiw	r24, 0x01	; 1
    494a:	f1 f7       	brne	.-4      	; 0x4948 <main+0x2ed8>
    494c:	fe 01       	movw	r30, r28
    494e:	eb 5c       	subi	r30, 0xCB	; 203
    4950:	fe 4f       	sbci	r31, 0xFE	; 254
    4952:	91 83       	std	Z+1, r25	; 0x01
    4954:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    4956:	81 e0       	ldi	r24, 0x01	; 1
    4958:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,6);
    495c:	ce 01       	movw	r24, r28
    495e:	8a 50       	subi	r24, 0x0A	; 10
    4960:	9d 4f       	sbci	r25, 0xFD	; 253
    4962:	60 e0       	ldi	r22, 0x00	; 0
    4964:	41 e0       	ldi	r20, 0x01	; 1
    4966:	26 e0       	ldi	r18, 0x06	; 6
    4968:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,9);
    496c:	ce 01       	movw	r24, r28
    496e:	8a 5d       	subi	r24, 0xDA	; 218
    4970:	9c 4f       	sbci	r25, 0xFC	; 252
    4972:	61 e0       	ldi	r22, 0x01	; 1
    4974:	41 e0       	ldi	r20, 0x01	; 1
    4976:	29 e0       	ldi	r18, 0x09	; 9
    4978:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    497c:	fe 01       	movw	r30, r28
    497e:	ef 5c       	subi	r30, 0xCF	; 207
    4980:	fe 4f       	sbci	r31, 0xFE	; 254
    4982:	80 e0       	ldi	r24, 0x00	; 0
    4984:	90 e0       	ldi	r25, 0x00	; 0
    4986:	a0 e2       	ldi	r26, 0x20	; 32
    4988:	b1 e4       	ldi	r27, 0x41	; 65
    498a:	80 83       	st	Z, r24
    498c:	91 83       	std	Z+1, r25	; 0x01
    498e:	a2 83       	std	Z+2, r26	; 0x02
    4990:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4992:	8e 01       	movw	r16, r28
    4994:	03 5d       	subi	r16, 0xD3	; 211
    4996:	1e 4f       	sbci	r17, 0xFE	; 254
    4998:	fe 01       	movw	r30, r28
    499a:	ef 5c       	subi	r30, 0xCF	; 207
    499c:	fe 4f       	sbci	r31, 0xFE	; 254
    499e:	60 81       	ld	r22, Z
    49a0:	71 81       	ldd	r23, Z+1	; 0x01
    49a2:	82 81       	ldd	r24, Z+2	; 0x02
    49a4:	93 81       	ldd	r25, Z+3	; 0x03
    49a6:	20 e0       	ldi	r18, 0x00	; 0
    49a8:	30 e0       	ldi	r19, 0x00	; 0
    49aa:	4a ef       	ldi	r20, 0xFA	; 250
    49ac:	54 e4       	ldi	r21, 0x44	; 68
    49ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49b2:	dc 01       	movw	r26, r24
    49b4:	cb 01       	movw	r24, r22
    49b6:	f8 01       	movw	r30, r16
    49b8:	80 83       	st	Z, r24
    49ba:	91 83       	std	Z+1, r25	; 0x01
    49bc:	a2 83       	std	Z+2, r26	; 0x02
    49be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    49c0:	fe 01       	movw	r30, r28
    49c2:	e3 5d       	subi	r30, 0xD3	; 211
    49c4:	fe 4f       	sbci	r31, 0xFE	; 254
    49c6:	60 81       	ld	r22, Z
    49c8:	71 81       	ldd	r23, Z+1	; 0x01
    49ca:	82 81       	ldd	r24, Z+2	; 0x02
    49cc:	93 81       	ldd	r25, Z+3	; 0x03
    49ce:	20 e0       	ldi	r18, 0x00	; 0
    49d0:	30 e0       	ldi	r19, 0x00	; 0
    49d2:	40 e8       	ldi	r20, 0x80	; 128
    49d4:	5f e3       	ldi	r21, 0x3F	; 63
    49d6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    49da:	88 23       	and	r24, r24
    49dc:	44 f4       	brge	.+16     	; 0x49ee <main+0x2f7e>
		__ticks = 1;
    49de:	fe 01       	movw	r30, r28
    49e0:	e5 5d       	subi	r30, 0xD5	; 213
    49e2:	fe 4f       	sbci	r31, 0xFE	; 254
    49e4:	81 e0       	ldi	r24, 0x01	; 1
    49e6:	90 e0       	ldi	r25, 0x00	; 0
    49e8:	91 83       	std	Z+1, r25	; 0x01
    49ea:	80 83       	st	Z, r24
    49ec:	64 c0       	rjmp	.+200    	; 0x4ab6 <main+0x3046>
	else if (__tmp > 65535)
    49ee:	fe 01       	movw	r30, r28
    49f0:	e3 5d       	subi	r30, 0xD3	; 211
    49f2:	fe 4f       	sbci	r31, 0xFE	; 254
    49f4:	60 81       	ld	r22, Z
    49f6:	71 81       	ldd	r23, Z+1	; 0x01
    49f8:	82 81       	ldd	r24, Z+2	; 0x02
    49fa:	93 81       	ldd	r25, Z+3	; 0x03
    49fc:	20 e0       	ldi	r18, 0x00	; 0
    49fe:	3f ef       	ldi	r19, 0xFF	; 255
    4a00:	4f e7       	ldi	r20, 0x7F	; 127
    4a02:	57 e4       	ldi	r21, 0x47	; 71
    4a04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a08:	18 16       	cp	r1, r24
    4a0a:	0c f0       	brlt	.+2      	; 0x4a0e <main+0x2f9e>
    4a0c:	43 c0       	rjmp	.+134    	; 0x4a94 <main+0x3024>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a0e:	fe 01       	movw	r30, r28
    4a10:	ef 5c       	subi	r30, 0xCF	; 207
    4a12:	fe 4f       	sbci	r31, 0xFE	; 254
    4a14:	60 81       	ld	r22, Z
    4a16:	71 81       	ldd	r23, Z+1	; 0x01
    4a18:	82 81       	ldd	r24, Z+2	; 0x02
    4a1a:	93 81       	ldd	r25, Z+3	; 0x03
    4a1c:	20 e0       	ldi	r18, 0x00	; 0
    4a1e:	30 e0       	ldi	r19, 0x00	; 0
    4a20:	40 e2       	ldi	r20, 0x20	; 32
    4a22:	51 e4       	ldi	r21, 0x41	; 65
    4a24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a28:	dc 01       	movw	r26, r24
    4a2a:	cb 01       	movw	r24, r22
    4a2c:	8e 01       	movw	r16, r28
    4a2e:	05 5d       	subi	r16, 0xD5	; 213
    4a30:	1e 4f       	sbci	r17, 0xFE	; 254
    4a32:	bc 01       	movw	r22, r24
    4a34:	cd 01       	movw	r24, r26
    4a36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a3a:	dc 01       	movw	r26, r24
    4a3c:	cb 01       	movw	r24, r22
    4a3e:	f8 01       	movw	r30, r16
    4a40:	91 83       	std	Z+1, r25	; 0x01
    4a42:	80 83       	st	Z, r24
    4a44:	1f c0       	rjmp	.+62     	; 0x4a84 <main+0x3014>
    4a46:	fe 01       	movw	r30, r28
    4a48:	e7 5d       	subi	r30, 0xD7	; 215
    4a4a:	fe 4f       	sbci	r31, 0xFE	; 254
    4a4c:	88 ec       	ldi	r24, 0xC8	; 200
    4a4e:	90 e0       	ldi	r25, 0x00	; 0
    4a50:	91 83       	std	Z+1, r25	; 0x01
    4a52:	80 83       	st	Z, r24
    4a54:	fe 01       	movw	r30, r28
    4a56:	e7 5d       	subi	r30, 0xD7	; 215
    4a58:	fe 4f       	sbci	r31, 0xFE	; 254
    4a5a:	80 81       	ld	r24, Z
    4a5c:	91 81       	ldd	r25, Z+1	; 0x01
    4a5e:	01 97       	sbiw	r24, 0x01	; 1
    4a60:	f1 f7       	brne	.-4      	; 0x4a5e <main+0x2fee>
    4a62:	fe 01       	movw	r30, r28
    4a64:	e7 5d       	subi	r30, 0xD7	; 215
    4a66:	fe 4f       	sbci	r31, 0xFE	; 254
    4a68:	91 83       	std	Z+1, r25	; 0x01
    4a6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a6c:	de 01       	movw	r26, r28
    4a6e:	a5 5d       	subi	r26, 0xD5	; 213
    4a70:	be 4f       	sbci	r27, 0xFE	; 254
    4a72:	fe 01       	movw	r30, r28
    4a74:	e5 5d       	subi	r30, 0xD5	; 213
    4a76:	fe 4f       	sbci	r31, 0xFE	; 254
    4a78:	80 81       	ld	r24, Z
    4a7a:	91 81       	ldd	r25, Z+1	; 0x01
    4a7c:	01 97       	sbiw	r24, 0x01	; 1
    4a7e:	11 96       	adiw	r26, 0x01	; 1
    4a80:	9c 93       	st	X, r25
    4a82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a84:	fe 01       	movw	r30, r28
    4a86:	e5 5d       	subi	r30, 0xD5	; 213
    4a88:	fe 4f       	sbci	r31, 0xFE	; 254
    4a8a:	80 81       	ld	r24, Z
    4a8c:	91 81       	ldd	r25, Z+1	; 0x01
    4a8e:	00 97       	sbiw	r24, 0x00	; 0
    4a90:	d1 f6       	brne	.-76     	; 0x4a46 <main+0x2fd6>
    4a92:	27 c0       	rjmp	.+78     	; 0x4ae2 <main+0x3072>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a94:	8e 01       	movw	r16, r28
    4a96:	05 5d       	subi	r16, 0xD5	; 213
    4a98:	1e 4f       	sbci	r17, 0xFE	; 254
    4a9a:	fe 01       	movw	r30, r28
    4a9c:	e3 5d       	subi	r30, 0xD3	; 211
    4a9e:	fe 4f       	sbci	r31, 0xFE	; 254
    4aa0:	60 81       	ld	r22, Z
    4aa2:	71 81       	ldd	r23, Z+1	; 0x01
    4aa4:	82 81       	ldd	r24, Z+2	; 0x02
    4aa6:	93 81       	ldd	r25, Z+3	; 0x03
    4aa8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4aac:	dc 01       	movw	r26, r24
    4aae:	cb 01       	movw	r24, r22
    4ab0:	f8 01       	movw	r30, r16
    4ab2:	91 83       	std	Z+1, r25	; 0x01
    4ab4:	80 83       	st	Z, r24
    4ab6:	de 01       	movw	r26, r28
    4ab8:	a9 5d       	subi	r26, 0xD9	; 217
    4aba:	be 4f       	sbci	r27, 0xFE	; 254
    4abc:	fe 01       	movw	r30, r28
    4abe:	e5 5d       	subi	r30, 0xD5	; 213
    4ac0:	fe 4f       	sbci	r31, 0xFE	; 254
    4ac2:	80 81       	ld	r24, Z
    4ac4:	91 81       	ldd	r25, Z+1	; 0x01
    4ac6:	8d 93       	st	X+, r24
    4ac8:	9c 93       	st	X, r25
    4aca:	fe 01       	movw	r30, r28
    4acc:	e9 5d       	subi	r30, 0xD9	; 217
    4ace:	fe 4f       	sbci	r31, 0xFE	; 254
    4ad0:	80 81       	ld	r24, Z
    4ad2:	91 81       	ldd	r25, Z+1	; 0x01
    4ad4:	01 97       	sbiw	r24, 0x01	; 1
    4ad6:	f1 f7       	brne	.-4      	; 0x4ad4 <main+0x3064>
    4ad8:	fe 01       	movw	r30, r28
    4ada:	e9 5d       	subi	r30, 0xD9	; 217
    4adc:	fe 4f       	sbci	r31, 0xFE	; 254
    4ade:	91 83       	std	Z+1, r25	; 0x01
    4ae0:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    4ae2:	81 e0       	ldi	r24, 0x01	; 1
    4ae4:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,7);
    4ae8:	ce 01       	movw	r24, r28
    4aea:	82 5e       	subi	r24, 0xE2	; 226
    4aec:	9c 4f       	sbci	r25, 0xFC	; 252
    4aee:	60 e0       	ldi	r22, 0x00	; 0
    4af0:	41 e0       	ldi	r20, 0x01	; 1
    4af2:	27 e0       	ldi	r18, 0x07	; 7
    4af4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,8);
    4af8:	ce 01       	movw	r24, r28
    4afa:	8a 5d       	subi	r24, 0xDA	; 218
    4afc:	9c 4f       	sbci	r25, 0xFC	; 252
    4afe:	61 e0       	ldi	r22, 0x01	; 1
    4b00:	41 e0       	ldi	r20, 0x01	; 1
    4b02:	28 e0       	ldi	r18, 0x08	; 8
    4b04:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4b08:	fe 01       	movw	r30, r28
    4b0a:	ed 5d       	subi	r30, 0xDD	; 221
    4b0c:	fe 4f       	sbci	r31, 0xFE	; 254
    4b0e:	80 e0       	ldi	r24, 0x00	; 0
    4b10:	90 e0       	ldi	r25, 0x00	; 0
    4b12:	a0 e2       	ldi	r26, 0x20	; 32
    4b14:	b1 e4       	ldi	r27, 0x41	; 65
    4b16:	80 83       	st	Z, r24
    4b18:	91 83       	std	Z+1, r25	; 0x01
    4b1a:	a2 83       	std	Z+2, r26	; 0x02
    4b1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b1e:	8e 01       	movw	r16, r28
    4b20:	01 5e       	subi	r16, 0xE1	; 225
    4b22:	1e 4f       	sbci	r17, 0xFE	; 254
    4b24:	fe 01       	movw	r30, r28
    4b26:	ed 5d       	subi	r30, 0xDD	; 221
    4b28:	fe 4f       	sbci	r31, 0xFE	; 254
    4b2a:	60 81       	ld	r22, Z
    4b2c:	71 81       	ldd	r23, Z+1	; 0x01
    4b2e:	82 81       	ldd	r24, Z+2	; 0x02
    4b30:	93 81       	ldd	r25, Z+3	; 0x03
    4b32:	20 e0       	ldi	r18, 0x00	; 0
    4b34:	30 e0       	ldi	r19, 0x00	; 0
    4b36:	4a ef       	ldi	r20, 0xFA	; 250
    4b38:	54 e4       	ldi	r21, 0x44	; 68
    4b3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b3e:	dc 01       	movw	r26, r24
    4b40:	cb 01       	movw	r24, r22
    4b42:	f8 01       	movw	r30, r16
    4b44:	80 83       	st	Z, r24
    4b46:	91 83       	std	Z+1, r25	; 0x01
    4b48:	a2 83       	std	Z+2, r26	; 0x02
    4b4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b4c:	fe 01       	movw	r30, r28
    4b4e:	e1 5e       	subi	r30, 0xE1	; 225
    4b50:	fe 4f       	sbci	r31, 0xFE	; 254
    4b52:	60 81       	ld	r22, Z
    4b54:	71 81       	ldd	r23, Z+1	; 0x01
    4b56:	82 81       	ldd	r24, Z+2	; 0x02
    4b58:	93 81       	ldd	r25, Z+3	; 0x03
    4b5a:	20 e0       	ldi	r18, 0x00	; 0
    4b5c:	30 e0       	ldi	r19, 0x00	; 0
    4b5e:	40 e8       	ldi	r20, 0x80	; 128
    4b60:	5f e3       	ldi	r21, 0x3F	; 63
    4b62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4b66:	88 23       	and	r24, r24
    4b68:	44 f4       	brge	.+16     	; 0x4b7a <main+0x310a>
		__ticks = 1;
    4b6a:	fe 01       	movw	r30, r28
    4b6c:	e3 5e       	subi	r30, 0xE3	; 227
    4b6e:	fe 4f       	sbci	r31, 0xFE	; 254
    4b70:	81 e0       	ldi	r24, 0x01	; 1
    4b72:	90 e0       	ldi	r25, 0x00	; 0
    4b74:	91 83       	std	Z+1, r25	; 0x01
    4b76:	80 83       	st	Z, r24
    4b78:	64 c0       	rjmp	.+200    	; 0x4c42 <main+0x31d2>
	else if (__tmp > 65535)
    4b7a:	fe 01       	movw	r30, r28
    4b7c:	e1 5e       	subi	r30, 0xE1	; 225
    4b7e:	fe 4f       	sbci	r31, 0xFE	; 254
    4b80:	60 81       	ld	r22, Z
    4b82:	71 81       	ldd	r23, Z+1	; 0x01
    4b84:	82 81       	ldd	r24, Z+2	; 0x02
    4b86:	93 81       	ldd	r25, Z+3	; 0x03
    4b88:	20 e0       	ldi	r18, 0x00	; 0
    4b8a:	3f ef       	ldi	r19, 0xFF	; 255
    4b8c:	4f e7       	ldi	r20, 0x7F	; 127
    4b8e:	57 e4       	ldi	r21, 0x47	; 71
    4b90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4b94:	18 16       	cp	r1, r24
    4b96:	0c f0       	brlt	.+2      	; 0x4b9a <main+0x312a>
    4b98:	43 c0       	rjmp	.+134    	; 0x4c20 <main+0x31b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b9a:	fe 01       	movw	r30, r28
    4b9c:	ed 5d       	subi	r30, 0xDD	; 221
    4b9e:	fe 4f       	sbci	r31, 0xFE	; 254
    4ba0:	60 81       	ld	r22, Z
    4ba2:	71 81       	ldd	r23, Z+1	; 0x01
    4ba4:	82 81       	ldd	r24, Z+2	; 0x02
    4ba6:	93 81       	ldd	r25, Z+3	; 0x03
    4ba8:	20 e0       	ldi	r18, 0x00	; 0
    4baa:	30 e0       	ldi	r19, 0x00	; 0
    4bac:	40 e2       	ldi	r20, 0x20	; 32
    4bae:	51 e4       	ldi	r21, 0x41	; 65
    4bb0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4bb4:	dc 01       	movw	r26, r24
    4bb6:	cb 01       	movw	r24, r22
    4bb8:	8e 01       	movw	r16, r28
    4bba:	03 5e       	subi	r16, 0xE3	; 227
    4bbc:	1e 4f       	sbci	r17, 0xFE	; 254
    4bbe:	bc 01       	movw	r22, r24
    4bc0:	cd 01       	movw	r24, r26
    4bc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4bc6:	dc 01       	movw	r26, r24
    4bc8:	cb 01       	movw	r24, r22
    4bca:	f8 01       	movw	r30, r16
    4bcc:	91 83       	std	Z+1, r25	; 0x01
    4bce:	80 83       	st	Z, r24
    4bd0:	1f c0       	rjmp	.+62     	; 0x4c10 <main+0x31a0>
    4bd2:	fe 01       	movw	r30, r28
    4bd4:	e5 5e       	subi	r30, 0xE5	; 229
    4bd6:	fe 4f       	sbci	r31, 0xFE	; 254
    4bd8:	88 ec       	ldi	r24, 0xC8	; 200
    4bda:	90 e0       	ldi	r25, 0x00	; 0
    4bdc:	91 83       	std	Z+1, r25	; 0x01
    4bde:	80 83       	st	Z, r24
    4be0:	fe 01       	movw	r30, r28
    4be2:	e5 5e       	subi	r30, 0xE5	; 229
    4be4:	fe 4f       	sbci	r31, 0xFE	; 254
    4be6:	80 81       	ld	r24, Z
    4be8:	91 81       	ldd	r25, Z+1	; 0x01
    4bea:	01 97       	sbiw	r24, 0x01	; 1
    4bec:	f1 f7       	brne	.-4      	; 0x4bea <main+0x317a>
    4bee:	fe 01       	movw	r30, r28
    4bf0:	e5 5e       	subi	r30, 0xE5	; 229
    4bf2:	fe 4f       	sbci	r31, 0xFE	; 254
    4bf4:	91 83       	std	Z+1, r25	; 0x01
    4bf6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4bf8:	de 01       	movw	r26, r28
    4bfa:	a3 5e       	subi	r26, 0xE3	; 227
    4bfc:	be 4f       	sbci	r27, 0xFE	; 254
    4bfe:	fe 01       	movw	r30, r28
    4c00:	e3 5e       	subi	r30, 0xE3	; 227
    4c02:	fe 4f       	sbci	r31, 0xFE	; 254
    4c04:	80 81       	ld	r24, Z
    4c06:	91 81       	ldd	r25, Z+1	; 0x01
    4c08:	01 97       	sbiw	r24, 0x01	; 1
    4c0a:	11 96       	adiw	r26, 0x01	; 1
    4c0c:	9c 93       	st	X, r25
    4c0e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c10:	fe 01       	movw	r30, r28
    4c12:	e3 5e       	subi	r30, 0xE3	; 227
    4c14:	fe 4f       	sbci	r31, 0xFE	; 254
    4c16:	80 81       	ld	r24, Z
    4c18:	91 81       	ldd	r25, Z+1	; 0x01
    4c1a:	00 97       	sbiw	r24, 0x00	; 0
    4c1c:	d1 f6       	brne	.-76     	; 0x4bd2 <main+0x3162>
    4c1e:	27 c0       	rjmp	.+78     	; 0x4c6e <main+0x31fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c20:	8e 01       	movw	r16, r28
    4c22:	03 5e       	subi	r16, 0xE3	; 227
    4c24:	1e 4f       	sbci	r17, 0xFE	; 254
    4c26:	fe 01       	movw	r30, r28
    4c28:	e1 5e       	subi	r30, 0xE1	; 225
    4c2a:	fe 4f       	sbci	r31, 0xFE	; 254
    4c2c:	60 81       	ld	r22, Z
    4c2e:	71 81       	ldd	r23, Z+1	; 0x01
    4c30:	82 81       	ldd	r24, Z+2	; 0x02
    4c32:	93 81       	ldd	r25, Z+3	; 0x03
    4c34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c38:	dc 01       	movw	r26, r24
    4c3a:	cb 01       	movw	r24, r22
    4c3c:	f8 01       	movw	r30, r16
    4c3e:	91 83       	std	Z+1, r25	; 0x01
    4c40:	80 83       	st	Z, r24
    4c42:	de 01       	movw	r26, r28
    4c44:	a7 5e       	subi	r26, 0xE7	; 231
    4c46:	be 4f       	sbci	r27, 0xFE	; 254
    4c48:	fe 01       	movw	r30, r28
    4c4a:	e3 5e       	subi	r30, 0xE3	; 227
    4c4c:	fe 4f       	sbci	r31, 0xFE	; 254
    4c4e:	80 81       	ld	r24, Z
    4c50:	91 81       	ldd	r25, Z+1	; 0x01
    4c52:	8d 93       	st	X+, r24
    4c54:	9c 93       	st	X, r25
    4c56:	fe 01       	movw	r30, r28
    4c58:	e7 5e       	subi	r30, 0xE7	; 231
    4c5a:	fe 4f       	sbci	r31, 0xFE	; 254
    4c5c:	80 81       	ld	r24, Z
    4c5e:	91 81       	ldd	r25, Z+1	; 0x01
    4c60:	01 97       	sbiw	r24, 0x01	; 1
    4c62:	f1 f7       	brne	.-4      	; 0x4c60 <main+0x31f0>
    4c64:	fe 01       	movw	r30, r28
    4c66:	e7 5e       	subi	r30, 0xE7	; 231
    4c68:	fe 4f       	sbci	r31, 0xFE	; 254
    4c6a:	91 83       	std	Z+1, r25	; 0x01
    4c6c:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    4c6e:	81 e0       	ldi	r24, 0x01	; 1
    4c70:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,0,8);
    4c74:	ce 01       	movw	r24, r28
    4c76:	8a 50       	subi	r24, 0x0A	; 10
    4c78:	9d 4f       	sbci	r25, 0xFD	; 253
    4c7a:	60 e0       	ldi	r22, 0x00	; 0
    4c7c:	40 e0       	ldi	r20, 0x00	; 0
    4c7e:	28 e0       	ldi	r18, 0x08	; 8
    4c80:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,8);
    4c84:	ce 01       	movw	r24, r28
    4c86:	8a 5d       	subi	r24, 0xDA	; 218
    4c88:	9c 4f       	sbci	r25, 0xFC	; 252
    4c8a:	61 e0       	ldi	r22, 0x01	; 1
    4c8c:	41 e0       	ldi	r20, 0x01	; 1
    4c8e:	28 e0       	ldi	r18, 0x08	; 8
    4c90:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4c94:	fe 01       	movw	r30, r28
    4c96:	eb 5e       	subi	r30, 0xEB	; 235
    4c98:	fe 4f       	sbci	r31, 0xFE	; 254
    4c9a:	80 e0       	ldi	r24, 0x00	; 0
    4c9c:	90 e0       	ldi	r25, 0x00	; 0
    4c9e:	a0 e2       	ldi	r26, 0x20	; 32
    4ca0:	b1 e4       	ldi	r27, 0x41	; 65
    4ca2:	80 83       	st	Z, r24
    4ca4:	91 83       	std	Z+1, r25	; 0x01
    4ca6:	a2 83       	std	Z+2, r26	; 0x02
    4ca8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4caa:	8e 01       	movw	r16, r28
    4cac:	0f 5e       	subi	r16, 0xEF	; 239
    4cae:	1e 4f       	sbci	r17, 0xFE	; 254
    4cb0:	fe 01       	movw	r30, r28
    4cb2:	eb 5e       	subi	r30, 0xEB	; 235
    4cb4:	fe 4f       	sbci	r31, 0xFE	; 254
    4cb6:	60 81       	ld	r22, Z
    4cb8:	71 81       	ldd	r23, Z+1	; 0x01
    4cba:	82 81       	ldd	r24, Z+2	; 0x02
    4cbc:	93 81       	ldd	r25, Z+3	; 0x03
    4cbe:	20 e0       	ldi	r18, 0x00	; 0
    4cc0:	30 e0       	ldi	r19, 0x00	; 0
    4cc2:	4a ef       	ldi	r20, 0xFA	; 250
    4cc4:	54 e4       	ldi	r21, 0x44	; 68
    4cc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4cca:	dc 01       	movw	r26, r24
    4ccc:	cb 01       	movw	r24, r22
    4cce:	f8 01       	movw	r30, r16
    4cd0:	80 83       	st	Z, r24
    4cd2:	91 83       	std	Z+1, r25	; 0x01
    4cd4:	a2 83       	std	Z+2, r26	; 0x02
    4cd6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4cd8:	fe 01       	movw	r30, r28
    4cda:	ef 5e       	subi	r30, 0xEF	; 239
    4cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    4cde:	60 81       	ld	r22, Z
    4ce0:	71 81       	ldd	r23, Z+1	; 0x01
    4ce2:	82 81       	ldd	r24, Z+2	; 0x02
    4ce4:	93 81       	ldd	r25, Z+3	; 0x03
    4ce6:	20 e0       	ldi	r18, 0x00	; 0
    4ce8:	30 e0       	ldi	r19, 0x00	; 0
    4cea:	40 e8       	ldi	r20, 0x80	; 128
    4cec:	5f e3       	ldi	r21, 0x3F	; 63
    4cee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4cf2:	88 23       	and	r24, r24
    4cf4:	44 f4       	brge	.+16     	; 0x4d06 <main+0x3296>
		__ticks = 1;
    4cf6:	fe 01       	movw	r30, r28
    4cf8:	e1 5f       	subi	r30, 0xF1	; 241
    4cfa:	fe 4f       	sbci	r31, 0xFE	; 254
    4cfc:	81 e0       	ldi	r24, 0x01	; 1
    4cfe:	90 e0       	ldi	r25, 0x00	; 0
    4d00:	91 83       	std	Z+1, r25	; 0x01
    4d02:	80 83       	st	Z, r24
    4d04:	64 c0       	rjmp	.+200    	; 0x4dce <main+0x335e>
	else if (__tmp > 65535)
    4d06:	fe 01       	movw	r30, r28
    4d08:	ef 5e       	subi	r30, 0xEF	; 239
    4d0a:	fe 4f       	sbci	r31, 0xFE	; 254
    4d0c:	60 81       	ld	r22, Z
    4d0e:	71 81       	ldd	r23, Z+1	; 0x01
    4d10:	82 81       	ldd	r24, Z+2	; 0x02
    4d12:	93 81       	ldd	r25, Z+3	; 0x03
    4d14:	20 e0       	ldi	r18, 0x00	; 0
    4d16:	3f ef       	ldi	r19, 0xFF	; 255
    4d18:	4f e7       	ldi	r20, 0x7F	; 127
    4d1a:	57 e4       	ldi	r21, 0x47	; 71
    4d1c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4d20:	18 16       	cp	r1, r24
    4d22:	0c f0       	brlt	.+2      	; 0x4d26 <main+0x32b6>
    4d24:	43 c0       	rjmp	.+134    	; 0x4dac <main+0x333c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d26:	fe 01       	movw	r30, r28
    4d28:	eb 5e       	subi	r30, 0xEB	; 235
    4d2a:	fe 4f       	sbci	r31, 0xFE	; 254
    4d2c:	60 81       	ld	r22, Z
    4d2e:	71 81       	ldd	r23, Z+1	; 0x01
    4d30:	82 81       	ldd	r24, Z+2	; 0x02
    4d32:	93 81       	ldd	r25, Z+3	; 0x03
    4d34:	20 e0       	ldi	r18, 0x00	; 0
    4d36:	30 e0       	ldi	r19, 0x00	; 0
    4d38:	40 e2       	ldi	r20, 0x20	; 32
    4d3a:	51 e4       	ldi	r21, 0x41	; 65
    4d3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d40:	dc 01       	movw	r26, r24
    4d42:	cb 01       	movw	r24, r22
    4d44:	8e 01       	movw	r16, r28
    4d46:	01 5f       	subi	r16, 0xF1	; 241
    4d48:	1e 4f       	sbci	r17, 0xFE	; 254
    4d4a:	bc 01       	movw	r22, r24
    4d4c:	cd 01       	movw	r24, r26
    4d4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d52:	dc 01       	movw	r26, r24
    4d54:	cb 01       	movw	r24, r22
    4d56:	f8 01       	movw	r30, r16
    4d58:	91 83       	std	Z+1, r25	; 0x01
    4d5a:	80 83       	st	Z, r24
    4d5c:	1f c0       	rjmp	.+62     	; 0x4d9c <main+0x332c>
    4d5e:	fe 01       	movw	r30, r28
    4d60:	e3 5f       	subi	r30, 0xF3	; 243
    4d62:	fe 4f       	sbci	r31, 0xFE	; 254
    4d64:	88 ec       	ldi	r24, 0xC8	; 200
    4d66:	90 e0       	ldi	r25, 0x00	; 0
    4d68:	91 83       	std	Z+1, r25	; 0x01
    4d6a:	80 83       	st	Z, r24
    4d6c:	fe 01       	movw	r30, r28
    4d6e:	e3 5f       	subi	r30, 0xF3	; 243
    4d70:	fe 4f       	sbci	r31, 0xFE	; 254
    4d72:	80 81       	ld	r24, Z
    4d74:	91 81       	ldd	r25, Z+1	; 0x01
    4d76:	01 97       	sbiw	r24, 0x01	; 1
    4d78:	f1 f7       	brne	.-4      	; 0x4d76 <main+0x3306>
    4d7a:	fe 01       	movw	r30, r28
    4d7c:	e3 5f       	subi	r30, 0xF3	; 243
    4d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d80:	91 83       	std	Z+1, r25	; 0x01
    4d82:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d84:	de 01       	movw	r26, r28
    4d86:	a1 5f       	subi	r26, 0xF1	; 241
    4d88:	be 4f       	sbci	r27, 0xFE	; 254
    4d8a:	fe 01       	movw	r30, r28
    4d8c:	e1 5f       	subi	r30, 0xF1	; 241
    4d8e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d90:	80 81       	ld	r24, Z
    4d92:	91 81       	ldd	r25, Z+1	; 0x01
    4d94:	01 97       	sbiw	r24, 0x01	; 1
    4d96:	11 96       	adiw	r26, 0x01	; 1
    4d98:	9c 93       	st	X, r25
    4d9a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d9c:	fe 01       	movw	r30, r28
    4d9e:	e1 5f       	subi	r30, 0xF1	; 241
    4da0:	fe 4f       	sbci	r31, 0xFE	; 254
    4da2:	80 81       	ld	r24, Z
    4da4:	91 81       	ldd	r25, Z+1	; 0x01
    4da6:	00 97       	sbiw	r24, 0x00	; 0
    4da8:	d1 f6       	brne	.-76     	; 0x4d5e <main+0x32ee>
    4daa:	27 c0       	rjmp	.+78     	; 0x4dfa <main+0x338a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4dac:	8e 01       	movw	r16, r28
    4dae:	01 5f       	subi	r16, 0xF1	; 241
    4db0:	1e 4f       	sbci	r17, 0xFE	; 254
    4db2:	fe 01       	movw	r30, r28
    4db4:	ef 5e       	subi	r30, 0xEF	; 239
    4db6:	fe 4f       	sbci	r31, 0xFE	; 254
    4db8:	60 81       	ld	r22, Z
    4dba:	71 81       	ldd	r23, Z+1	; 0x01
    4dbc:	82 81       	ldd	r24, Z+2	; 0x02
    4dbe:	93 81       	ldd	r25, Z+3	; 0x03
    4dc0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4dc4:	dc 01       	movw	r26, r24
    4dc6:	cb 01       	movw	r24, r22
    4dc8:	f8 01       	movw	r30, r16
    4dca:	91 83       	std	Z+1, r25	; 0x01
    4dcc:	80 83       	st	Z, r24
    4dce:	de 01       	movw	r26, r28
    4dd0:	a5 5f       	subi	r26, 0xF5	; 245
    4dd2:	be 4f       	sbci	r27, 0xFE	; 254
    4dd4:	fe 01       	movw	r30, r28
    4dd6:	e1 5f       	subi	r30, 0xF1	; 241
    4dd8:	fe 4f       	sbci	r31, 0xFE	; 254
    4dda:	80 81       	ld	r24, Z
    4ddc:	91 81       	ldd	r25, Z+1	; 0x01
    4dde:	8d 93       	st	X+, r24
    4de0:	9c 93       	st	X, r25
    4de2:	fe 01       	movw	r30, r28
    4de4:	e5 5f       	subi	r30, 0xF5	; 245
    4de6:	fe 4f       	sbci	r31, 0xFE	; 254
    4de8:	80 81       	ld	r24, Z
    4dea:	91 81       	ldd	r25, Z+1	; 0x01
    4dec:	01 97       	sbiw	r24, 0x01	; 1
    4dee:	f1 f7       	brne	.-4      	; 0x4dec <main+0x337c>
    4df0:	fe 01       	movw	r30, r28
    4df2:	e5 5f       	subi	r30, 0xF5	; 245
    4df4:	fe 4f       	sbci	r31, 0xFE	; 254
    4df6:	91 83       	std	Z+1, r25	; 0x01
    4df8:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    4dfa:	81 e0       	ldi	r24, 0x01	; 1
    4dfc:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,9);
    4e00:	ce 01       	movw	r24, r28
    4e02:	82 5e       	subi	r24, 0xE2	; 226
    4e04:	9c 4f       	sbci	r25, 0xFC	; 252
    4e06:	60 e0       	ldi	r22, 0x00	; 0
    4e08:	41 e0       	ldi	r20, 0x01	; 1
    4e0a:	29 e0       	ldi	r18, 0x09	; 9
    4e0c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,7);
    4e10:	ce 01       	movw	r24, r28
    4e12:	8a 5d       	subi	r24, 0xDA	; 218
    4e14:	9c 4f       	sbci	r25, 0xFC	; 252
    4e16:	61 e0       	ldi	r22, 0x01	; 1
    4e18:	41 e0       	ldi	r20, 0x01	; 1
    4e1a:	27 e0       	ldi	r18, 0x07	; 7
    4e1c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4e20:	fe 01       	movw	r30, r28
    4e22:	e9 5f       	subi	r30, 0xF9	; 249
    4e24:	fe 4f       	sbci	r31, 0xFE	; 254
    4e26:	80 e0       	ldi	r24, 0x00	; 0
    4e28:	90 e0       	ldi	r25, 0x00	; 0
    4e2a:	a0 e2       	ldi	r26, 0x20	; 32
    4e2c:	b1 e4       	ldi	r27, 0x41	; 65
    4e2e:	80 83       	st	Z, r24
    4e30:	91 83       	std	Z+1, r25	; 0x01
    4e32:	a2 83       	std	Z+2, r26	; 0x02
    4e34:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e36:	8e 01       	movw	r16, r28
    4e38:	0d 5f       	subi	r16, 0xFD	; 253
    4e3a:	1e 4f       	sbci	r17, 0xFE	; 254
    4e3c:	fe 01       	movw	r30, r28
    4e3e:	e9 5f       	subi	r30, 0xF9	; 249
    4e40:	fe 4f       	sbci	r31, 0xFE	; 254
    4e42:	60 81       	ld	r22, Z
    4e44:	71 81       	ldd	r23, Z+1	; 0x01
    4e46:	82 81       	ldd	r24, Z+2	; 0x02
    4e48:	93 81       	ldd	r25, Z+3	; 0x03
    4e4a:	20 e0       	ldi	r18, 0x00	; 0
    4e4c:	30 e0       	ldi	r19, 0x00	; 0
    4e4e:	4a ef       	ldi	r20, 0xFA	; 250
    4e50:	54 e4       	ldi	r21, 0x44	; 68
    4e52:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e56:	dc 01       	movw	r26, r24
    4e58:	cb 01       	movw	r24, r22
    4e5a:	f8 01       	movw	r30, r16
    4e5c:	80 83       	st	Z, r24
    4e5e:	91 83       	std	Z+1, r25	; 0x01
    4e60:	a2 83       	std	Z+2, r26	; 0x02
    4e62:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4e64:	fe 01       	movw	r30, r28
    4e66:	ed 5f       	subi	r30, 0xFD	; 253
    4e68:	fe 4f       	sbci	r31, 0xFE	; 254
    4e6a:	60 81       	ld	r22, Z
    4e6c:	71 81       	ldd	r23, Z+1	; 0x01
    4e6e:	82 81       	ldd	r24, Z+2	; 0x02
    4e70:	93 81       	ldd	r25, Z+3	; 0x03
    4e72:	20 e0       	ldi	r18, 0x00	; 0
    4e74:	30 e0       	ldi	r19, 0x00	; 0
    4e76:	40 e8       	ldi	r20, 0x80	; 128
    4e78:	5f e3       	ldi	r21, 0x3F	; 63
    4e7a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4e7e:	88 23       	and	r24, r24
    4e80:	44 f4       	brge	.+16     	; 0x4e92 <main+0x3422>
		__ticks = 1;
    4e82:	fe 01       	movw	r30, r28
    4e84:	ef 5f       	subi	r30, 0xFF	; 255
    4e86:	fe 4f       	sbci	r31, 0xFE	; 254
    4e88:	81 e0       	ldi	r24, 0x01	; 1
    4e8a:	90 e0       	ldi	r25, 0x00	; 0
    4e8c:	91 83       	std	Z+1, r25	; 0x01
    4e8e:	80 83       	st	Z, r24
    4e90:	64 c0       	rjmp	.+200    	; 0x4f5a <main+0x34ea>
	else if (__tmp > 65535)
    4e92:	fe 01       	movw	r30, r28
    4e94:	ed 5f       	subi	r30, 0xFD	; 253
    4e96:	fe 4f       	sbci	r31, 0xFE	; 254
    4e98:	60 81       	ld	r22, Z
    4e9a:	71 81       	ldd	r23, Z+1	; 0x01
    4e9c:	82 81       	ldd	r24, Z+2	; 0x02
    4e9e:	93 81       	ldd	r25, Z+3	; 0x03
    4ea0:	20 e0       	ldi	r18, 0x00	; 0
    4ea2:	3f ef       	ldi	r19, 0xFF	; 255
    4ea4:	4f e7       	ldi	r20, 0x7F	; 127
    4ea6:	57 e4       	ldi	r21, 0x47	; 71
    4ea8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4eac:	18 16       	cp	r1, r24
    4eae:	0c f0       	brlt	.+2      	; 0x4eb2 <main+0x3442>
    4eb0:	43 c0       	rjmp	.+134    	; 0x4f38 <main+0x34c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4eb2:	fe 01       	movw	r30, r28
    4eb4:	e9 5f       	subi	r30, 0xF9	; 249
    4eb6:	fe 4f       	sbci	r31, 0xFE	; 254
    4eb8:	60 81       	ld	r22, Z
    4eba:	71 81       	ldd	r23, Z+1	; 0x01
    4ebc:	82 81       	ldd	r24, Z+2	; 0x02
    4ebe:	93 81       	ldd	r25, Z+3	; 0x03
    4ec0:	20 e0       	ldi	r18, 0x00	; 0
    4ec2:	30 e0       	ldi	r19, 0x00	; 0
    4ec4:	40 e2       	ldi	r20, 0x20	; 32
    4ec6:	51 e4       	ldi	r21, 0x41	; 65
    4ec8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ecc:	dc 01       	movw	r26, r24
    4ece:	cb 01       	movw	r24, r22
    4ed0:	8e 01       	movw	r16, r28
    4ed2:	0f 5f       	subi	r16, 0xFF	; 255
    4ed4:	1e 4f       	sbci	r17, 0xFE	; 254
    4ed6:	bc 01       	movw	r22, r24
    4ed8:	cd 01       	movw	r24, r26
    4eda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4ede:	dc 01       	movw	r26, r24
    4ee0:	cb 01       	movw	r24, r22
    4ee2:	f8 01       	movw	r30, r16
    4ee4:	91 83       	std	Z+1, r25	; 0x01
    4ee6:	80 83       	st	Z, r24
    4ee8:	1f c0       	rjmp	.+62     	; 0x4f28 <main+0x34b8>
    4eea:	fe 01       	movw	r30, r28
    4eec:	e1 50       	subi	r30, 0x01	; 1
    4eee:	ff 4f       	sbci	r31, 0xFF	; 255
    4ef0:	88 ec       	ldi	r24, 0xC8	; 200
    4ef2:	90 e0       	ldi	r25, 0x00	; 0
    4ef4:	91 83       	std	Z+1, r25	; 0x01
    4ef6:	80 83       	st	Z, r24
    4ef8:	fe 01       	movw	r30, r28
    4efa:	e1 50       	subi	r30, 0x01	; 1
    4efc:	ff 4f       	sbci	r31, 0xFF	; 255
    4efe:	80 81       	ld	r24, Z
    4f00:	91 81       	ldd	r25, Z+1	; 0x01
    4f02:	01 97       	sbiw	r24, 0x01	; 1
    4f04:	f1 f7       	brne	.-4      	; 0x4f02 <main+0x3492>
    4f06:	fe 01       	movw	r30, r28
    4f08:	e1 50       	subi	r30, 0x01	; 1
    4f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    4f0c:	91 83       	std	Z+1, r25	; 0x01
    4f0e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f10:	de 01       	movw	r26, r28
    4f12:	af 5f       	subi	r26, 0xFF	; 255
    4f14:	be 4f       	sbci	r27, 0xFE	; 254
    4f16:	fe 01       	movw	r30, r28
    4f18:	ef 5f       	subi	r30, 0xFF	; 255
    4f1a:	fe 4f       	sbci	r31, 0xFE	; 254
    4f1c:	80 81       	ld	r24, Z
    4f1e:	91 81       	ldd	r25, Z+1	; 0x01
    4f20:	01 97       	sbiw	r24, 0x01	; 1
    4f22:	11 96       	adiw	r26, 0x01	; 1
    4f24:	9c 93       	st	X, r25
    4f26:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f28:	fe 01       	movw	r30, r28
    4f2a:	ef 5f       	subi	r30, 0xFF	; 255
    4f2c:	fe 4f       	sbci	r31, 0xFE	; 254
    4f2e:	80 81       	ld	r24, Z
    4f30:	91 81       	ldd	r25, Z+1	; 0x01
    4f32:	00 97       	sbiw	r24, 0x00	; 0
    4f34:	d1 f6       	brne	.-76     	; 0x4eea <main+0x347a>
    4f36:	27 c0       	rjmp	.+78     	; 0x4f86 <main+0x3516>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f38:	8e 01       	movw	r16, r28
    4f3a:	0f 5f       	subi	r16, 0xFF	; 255
    4f3c:	1e 4f       	sbci	r17, 0xFE	; 254
    4f3e:	fe 01       	movw	r30, r28
    4f40:	ed 5f       	subi	r30, 0xFD	; 253
    4f42:	fe 4f       	sbci	r31, 0xFE	; 254
    4f44:	60 81       	ld	r22, Z
    4f46:	71 81       	ldd	r23, Z+1	; 0x01
    4f48:	82 81       	ldd	r24, Z+2	; 0x02
    4f4a:	93 81       	ldd	r25, Z+3	; 0x03
    4f4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f50:	dc 01       	movw	r26, r24
    4f52:	cb 01       	movw	r24, r22
    4f54:	f8 01       	movw	r30, r16
    4f56:	91 83       	std	Z+1, r25	; 0x01
    4f58:	80 83       	st	Z, r24
    4f5a:	de 01       	movw	r26, r28
    4f5c:	a3 50       	subi	r26, 0x03	; 3
    4f5e:	bf 4f       	sbci	r27, 0xFF	; 255
    4f60:	fe 01       	movw	r30, r28
    4f62:	ef 5f       	subi	r30, 0xFF	; 255
    4f64:	fe 4f       	sbci	r31, 0xFE	; 254
    4f66:	80 81       	ld	r24, Z
    4f68:	91 81       	ldd	r25, Z+1	; 0x01
    4f6a:	8d 93       	st	X+, r24
    4f6c:	9c 93       	st	X, r25
    4f6e:	fe 01       	movw	r30, r28
    4f70:	e3 50       	subi	r30, 0x03	; 3
    4f72:	ff 4f       	sbci	r31, 0xFF	; 255
    4f74:	80 81       	ld	r24, Z
    4f76:	91 81       	ldd	r25, Z+1	; 0x01
    4f78:	01 97       	sbiw	r24, 0x01	; 1
    4f7a:	f1 f7       	brne	.-4      	; 0x4f78 <main+0x3508>
    4f7c:	fe 01       	movw	r30, r28
    4f7e:	e3 50       	subi	r30, 0x03	; 3
    4f80:	ff 4f       	sbci	r31, 0xFF	; 255
    4f82:	91 83       	std	Z+1, r25	; 0x01
    4f84:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    4f86:	81 e0       	ldi	r24, 0x01	; 1
    4f88:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,10);
    4f8c:	ce 01       	movw	r24, r28
    4f8e:	8a 50       	subi	r24, 0x0A	; 10
    4f90:	9d 4f       	sbci	r25, 0xFD	; 253
    4f92:	60 e0       	ldi	r22, 0x00	; 0
    4f94:	41 e0       	ldi	r20, 0x01	; 1
    4f96:	2a e0       	ldi	r18, 0x0A	; 10
    4f98:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,6);
    4f9c:	ce 01       	movw	r24, r28
    4f9e:	8a 5d       	subi	r24, 0xDA	; 218
    4fa0:	9c 4f       	sbci	r25, 0xFC	; 252
    4fa2:	61 e0       	ldi	r22, 0x01	; 1
    4fa4:	41 e0       	ldi	r20, 0x01	; 1
    4fa6:	26 e0       	ldi	r18, 0x06	; 6
    4fa8:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4fac:	fe 01       	movw	r30, r28
    4fae:	e7 50       	subi	r30, 0x07	; 7
    4fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fb2:	80 e0       	ldi	r24, 0x00	; 0
    4fb4:	90 e0       	ldi	r25, 0x00	; 0
    4fb6:	a0 e2       	ldi	r26, 0x20	; 32
    4fb8:	b1 e4       	ldi	r27, 0x41	; 65
    4fba:	80 83       	st	Z, r24
    4fbc:	91 83       	std	Z+1, r25	; 0x01
    4fbe:	a2 83       	std	Z+2, r26	; 0x02
    4fc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fc2:	8e 01       	movw	r16, r28
    4fc4:	0b 50       	subi	r16, 0x0B	; 11
    4fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    4fc8:	fe 01       	movw	r30, r28
    4fca:	e7 50       	subi	r30, 0x07	; 7
    4fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    4fce:	60 81       	ld	r22, Z
    4fd0:	71 81       	ldd	r23, Z+1	; 0x01
    4fd2:	82 81       	ldd	r24, Z+2	; 0x02
    4fd4:	93 81       	ldd	r25, Z+3	; 0x03
    4fd6:	20 e0       	ldi	r18, 0x00	; 0
    4fd8:	30 e0       	ldi	r19, 0x00	; 0
    4fda:	4a ef       	ldi	r20, 0xFA	; 250
    4fdc:	54 e4       	ldi	r21, 0x44	; 68
    4fde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4fe2:	dc 01       	movw	r26, r24
    4fe4:	cb 01       	movw	r24, r22
    4fe6:	f8 01       	movw	r30, r16
    4fe8:	80 83       	st	Z, r24
    4fea:	91 83       	std	Z+1, r25	; 0x01
    4fec:	a2 83       	std	Z+2, r26	; 0x02
    4fee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ff0:	fe 01       	movw	r30, r28
    4ff2:	eb 50       	subi	r30, 0x0B	; 11
    4ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff6:	60 81       	ld	r22, Z
    4ff8:	71 81       	ldd	r23, Z+1	; 0x01
    4ffa:	82 81       	ldd	r24, Z+2	; 0x02
    4ffc:	93 81       	ldd	r25, Z+3	; 0x03
    4ffe:	20 e0       	ldi	r18, 0x00	; 0
    5000:	30 e0       	ldi	r19, 0x00	; 0
    5002:	40 e8       	ldi	r20, 0x80	; 128
    5004:	5f e3       	ldi	r21, 0x3F	; 63
    5006:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    500a:	88 23       	and	r24, r24
    500c:	44 f4       	brge	.+16     	; 0x501e <main+0x35ae>
		__ticks = 1;
    500e:	fe 01       	movw	r30, r28
    5010:	ed 50       	subi	r30, 0x0D	; 13
    5012:	ff 4f       	sbci	r31, 0xFF	; 255
    5014:	81 e0       	ldi	r24, 0x01	; 1
    5016:	90 e0       	ldi	r25, 0x00	; 0
    5018:	91 83       	std	Z+1, r25	; 0x01
    501a:	80 83       	st	Z, r24
    501c:	64 c0       	rjmp	.+200    	; 0x50e6 <main+0x3676>
	else if (__tmp > 65535)
    501e:	fe 01       	movw	r30, r28
    5020:	eb 50       	subi	r30, 0x0B	; 11
    5022:	ff 4f       	sbci	r31, 0xFF	; 255
    5024:	60 81       	ld	r22, Z
    5026:	71 81       	ldd	r23, Z+1	; 0x01
    5028:	82 81       	ldd	r24, Z+2	; 0x02
    502a:	93 81       	ldd	r25, Z+3	; 0x03
    502c:	20 e0       	ldi	r18, 0x00	; 0
    502e:	3f ef       	ldi	r19, 0xFF	; 255
    5030:	4f e7       	ldi	r20, 0x7F	; 127
    5032:	57 e4       	ldi	r21, 0x47	; 71
    5034:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5038:	18 16       	cp	r1, r24
    503a:	0c f0       	brlt	.+2      	; 0x503e <main+0x35ce>
    503c:	43 c0       	rjmp	.+134    	; 0x50c4 <main+0x3654>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    503e:	fe 01       	movw	r30, r28
    5040:	e7 50       	subi	r30, 0x07	; 7
    5042:	ff 4f       	sbci	r31, 0xFF	; 255
    5044:	60 81       	ld	r22, Z
    5046:	71 81       	ldd	r23, Z+1	; 0x01
    5048:	82 81       	ldd	r24, Z+2	; 0x02
    504a:	93 81       	ldd	r25, Z+3	; 0x03
    504c:	20 e0       	ldi	r18, 0x00	; 0
    504e:	30 e0       	ldi	r19, 0x00	; 0
    5050:	40 e2       	ldi	r20, 0x20	; 32
    5052:	51 e4       	ldi	r21, 0x41	; 65
    5054:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5058:	dc 01       	movw	r26, r24
    505a:	cb 01       	movw	r24, r22
    505c:	8e 01       	movw	r16, r28
    505e:	0d 50       	subi	r16, 0x0D	; 13
    5060:	1f 4f       	sbci	r17, 0xFF	; 255
    5062:	bc 01       	movw	r22, r24
    5064:	cd 01       	movw	r24, r26
    5066:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    506a:	dc 01       	movw	r26, r24
    506c:	cb 01       	movw	r24, r22
    506e:	f8 01       	movw	r30, r16
    5070:	91 83       	std	Z+1, r25	; 0x01
    5072:	80 83       	st	Z, r24
    5074:	1f c0       	rjmp	.+62     	; 0x50b4 <main+0x3644>
    5076:	fe 01       	movw	r30, r28
    5078:	ef 50       	subi	r30, 0x0F	; 15
    507a:	ff 4f       	sbci	r31, 0xFF	; 255
    507c:	88 ec       	ldi	r24, 0xC8	; 200
    507e:	90 e0       	ldi	r25, 0x00	; 0
    5080:	91 83       	std	Z+1, r25	; 0x01
    5082:	80 83       	st	Z, r24
    5084:	fe 01       	movw	r30, r28
    5086:	ef 50       	subi	r30, 0x0F	; 15
    5088:	ff 4f       	sbci	r31, 0xFF	; 255
    508a:	80 81       	ld	r24, Z
    508c:	91 81       	ldd	r25, Z+1	; 0x01
    508e:	01 97       	sbiw	r24, 0x01	; 1
    5090:	f1 f7       	brne	.-4      	; 0x508e <main+0x361e>
    5092:	fe 01       	movw	r30, r28
    5094:	ef 50       	subi	r30, 0x0F	; 15
    5096:	ff 4f       	sbci	r31, 0xFF	; 255
    5098:	91 83       	std	Z+1, r25	; 0x01
    509a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    509c:	de 01       	movw	r26, r28
    509e:	ad 50       	subi	r26, 0x0D	; 13
    50a0:	bf 4f       	sbci	r27, 0xFF	; 255
    50a2:	fe 01       	movw	r30, r28
    50a4:	ed 50       	subi	r30, 0x0D	; 13
    50a6:	ff 4f       	sbci	r31, 0xFF	; 255
    50a8:	80 81       	ld	r24, Z
    50aa:	91 81       	ldd	r25, Z+1	; 0x01
    50ac:	01 97       	sbiw	r24, 0x01	; 1
    50ae:	11 96       	adiw	r26, 0x01	; 1
    50b0:	9c 93       	st	X, r25
    50b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50b4:	fe 01       	movw	r30, r28
    50b6:	ed 50       	subi	r30, 0x0D	; 13
    50b8:	ff 4f       	sbci	r31, 0xFF	; 255
    50ba:	80 81       	ld	r24, Z
    50bc:	91 81       	ldd	r25, Z+1	; 0x01
    50be:	00 97       	sbiw	r24, 0x00	; 0
    50c0:	d1 f6       	brne	.-76     	; 0x5076 <main+0x3606>
    50c2:	27 c0       	rjmp	.+78     	; 0x5112 <main+0x36a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50c4:	8e 01       	movw	r16, r28
    50c6:	0d 50       	subi	r16, 0x0D	; 13
    50c8:	1f 4f       	sbci	r17, 0xFF	; 255
    50ca:	fe 01       	movw	r30, r28
    50cc:	eb 50       	subi	r30, 0x0B	; 11
    50ce:	ff 4f       	sbci	r31, 0xFF	; 255
    50d0:	60 81       	ld	r22, Z
    50d2:	71 81       	ldd	r23, Z+1	; 0x01
    50d4:	82 81       	ldd	r24, Z+2	; 0x02
    50d6:	93 81       	ldd	r25, Z+3	; 0x03
    50d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50dc:	dc 01       	movw	r26, r24
    50de:	cb 01       	movw	r24, r22
    50e0:	f8 01       	movw	r30, r16
    50e2:	91 83       	std	Z+1, r25	; 0x01
    50e4:	80 83       	st	Z, r24
    50e6:	de 01       	movw	r26, r28
    50e8:	a1 51       	subi	r26, 0x11	; 17
    50ea:	bf 4f       	sbci	r27, 0xFF	; 255
    50ec:	fe 01       	movw	r30, r28
    50ee:	ed 50       	subi	r30, 0x0D	; 13
    50f0:	ff 4f       	sbci	r31, 0xFF	; 255
    50f2:	80 81       	ld	r24, Z
    50f4:	91 81       	ldd	r25, Z+1	; 0x01
    50f6:	8d 93       	st	X+, r24
    50f8:	9c 93       	st	X, r25
    50fa:	fe 01       	movw	r30, r28
    50fc:	e1 51       	subi	r30, 0x11	; 17
    50fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5100:	80 81       	ld	r24, Z
    5102:	91 81       	ldd	r25, Z+1	; 0x01
    5104:	01 97       	sbiw	r24, 0x01	; 1
    5106:	f1 f7       	brne	.-4      	; 0x5104 <main+0x3694>
    5108:	fe 01       	movw	r30, r28
    510a:	e1 51       	subi	r30, 0x11	; 17
    510c:	ff 4f       	sbci	r31, 0xFF	; 255
    510e:	91 83       	std	Z+1, r25	; 0x01
    5110:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    5112:	81 e0       	ldi	r24, 0x01	; 1
    5114:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,11);
    5118:	ce 01       	movw	r24, r28
    511a:	82 5e       	subi	r24, 0xE2	; 226
    511c:	9c 4f       	sbci	r25, 0xFC	; 252
    511e:	60 e0       	ldi	r22, 0x00	; 0
    5120:	41 e0       	ldi	r20, 0x01	; 1
    5122:	2b e0       	ldi	r18, 0x0B	; 11
    5124:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,5);
    5128:	ce 01       	movw	r24, r28
    512a:	8a 5d       	subi	r24, 0xDA	; 218
    512c:	9c 4f       	sbci	r25, 0xFC	; 252
    512e:	61 e0       	ldi	r22, 0x01	; 1
    5130:	41 e0       	ldi	r20, 0x01	; 1
    5132:	25 e0       	ldi	r18, 0x05	; 5
    5134:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5138:	fe 01       	movw	r30, r28
    513a:	e5 51       	subi	r30, 0x15	; 21
    513c:	ff 4f       	sbci	r31, 0xFF	; 255
    513e:	80 e0       	ldi	r24, 0x00	; 0
    5140:	90 e0       	ldi	r25, 0x00	; 0
    5142:	a0 e2       	ldi	r26, 0x20	; 32
    5144:	b1 e4       	ldi	r27, 0x41	; 65
    5146:	80 83       	st	Z, r24
    5148:	91 83       	std	Z+1, r25	; 0x01
    514a:	a2 83       	std	Z+2, r26	; 0x02
    514c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    514e:	8e 01       	movw	r16, r28
    5150:	09 51       	subi	r16, 0x19	; 25
    5152:	1f 4f       	sbci	r17, 0xFF	; 255
    5154:	fe 01       	movw	r30, r28
    5156:	e5 51       	subi	r30, 0x15	; 21
    5158:	ff 4f       	sbci	r31, 0xFF	; 255
    515a:	60 81       	ld	r22, Z
    515c:	71 81       	ldd	r23, Z+1	; 0x01
    515e:	82 81       	ldd	r24, Z+2	; 0x02
    5160:	93 81       	ldd	r25, Z+3	; 0x03
    5162:	20 e0       	ldi	r18, 0x00	; 0
    5164:	30 e0       	ldi	r19, 0x00	; 0
    5166:	4a ef       	ldi	r20, 0xFA	; 250
    5168:	54 e4       	ldi	r21, 0x44	; 68
    516a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    516e:	dc 01       	movw	r26, r24
    5170:	cb 01       	movw	r24, r22
    5172:	f8 01       	movw	r30, r16
    5174:	80 83       	st	Z, r24
    5176:	91 83       	std	Z+1, r25	; 0x01
    5178:	a2 83       	std	Z+2, r26	; 0x02
    517a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    517c:	fe 01       	movw	r30, r28
    517e:	e9 51       	subi	r30, 0x19	; 25
    5180:	ff 4f       	sbci	r31, 0xFF	; 255
    5182:	60 81       	ld	r22, Z
    5184:	71 81       	ldd	r23, Z+1	; 0x01
    5186:	82 81       	ldd	r24, Z+2	; 0x02
    5188:	93 81       	ldd	r25, Z+3	; 0x03
    518a:	20 e0       	ldi	r18, 0x00	; 0
    518c:	30 e0       	ldi	r19, 0x00	; 0
    518e:	40 e8       	ldi	r20, 0x80	; 128
    5190:	5f e3       	ldi	r21, 0x3F	; 63
    5192:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5196:	88 23       	and	r24, r24
    5198:	44 f4       	brge	.+16     	; 0x51aa <main+0x373a>
		__ticks = 1;
    519a:	fe 01       	movw	r30, r28
    519c:	eb 51       	subi	r30, 0x1B	; 27
    519e:	ff 4f       	sbci	r31, 0xFF	; 255
    51a0:	81 e0       	ldi	r24, 0x01	; 1
    51a2:	90 e0       	ldi	r25, 0x00	; 0
    51a4:	91 83       	std	Z+1, r25	; 0x01
    51a6:	80 83       	st	Z, r24
    51a8:	64 c0       	rjmp	.+200    	; 0x5272 <main+0x3802>
	else if (__tmp > 65535)
    51aa:	fe 01       	movw	r30, r28
    51ac:	e9 51       	subi	r30, 0x19	; 25
    51ae:	ff 4f       	sbci	r31, 0xFF	; 255
    51b0:	60 81       	ld	r22, Z
    51b2:	71 81       	ldd	r23, Z+1	; 0x01
    51b4:	82 81       	ldd	r24, Z+2	; 0x02
    51b6:	93 81       	ldd	r25, Z+3	; 0x03
    51b8:	20 e0       	ldi	r18, 0x00	; 0
    51ba:	3f ef       	ldi	r19, 0xFF	; 255
    51bc:	4f e7       	ldi	r20, 0x7F	; 127
    51be:	57 e4       	ldi	r21, 0x47	; 71
    51c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    51c4:	18 16       	cp	r1, r24
    51c6:	0c f0       	brlt	.+2      	; 0x51ca <main+0x375a>
    51c8:	43 c0       	rjmp	.+134    	; 0x5250 <main+0x37e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51ca:	fe 01       	movw	r30, r28
    51cc:	e5 51       	subi	r30, 0x15	; 21
    51ce:	ff 4f       	sbci	r31, 0xFF	; 255
    51d0:	60 81       	ld	r22, Z
    51d2:	71 81       	ldd	r23, Z+1	; 0x01
    51d4:	82 81       	ldd	r24, Z+2	; 0x02
    51d6:	93 81       	ldd	r25, Z+3	; 0x03
    51d8:	20 e0       	ldi	r18, 0x00	; 0
    51da:	30 e0       	ldi	r19, 0x00	; 0
    51dc:	40 e2       	ldi	r20, 0x20	; 32
    51de:	51 e4       	ldi	r21, 0x41	; 65
    51e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    51e4:	dc 01       	movw	r26, r24
    51e6:	cb 01       	movw	r24, r22
    51e8:	8e 01       	movw	r16, r28
    51ea:	0b 51       	subi	r16, 0x1B	; 27
    51ec:	1f 4f       	sbci	r17, 0xFF	; 255
    51ee:	bc 01       	movw	r22, r24
    51f0:	cd 01       	movw	r24, r26
    51f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    51f6:	dc 01       	movw	r26, r24
    51f8:	cb 01       	movw	r24, r22
    51fa:	f8 01       	movw	r30, r16
    51fc:	91 83       	std	Z+1, r25	; 0x01
    51fe:	80 83       	st	Z, r24
    5200:	1f c0       	rjmp	.+62     	; 0x5240 <main+0x37d0>
    5202:	fe 01       	movw	r30, r28
    5204:	ed 51       	subi	r30, 0x1D	; 29
    5206:	ff 4f       	sbci	r31, 0xFF	; 255
    5208:	88 ec       	ldi	r24, 0xC8	; 200
    520a:	90 e0       	ldi	r25, 0x00	; 0
    520c:	91 83       	std	Z+1, r25	; 0x01
    520e:	80 83       	st	Z, r24
    5210:	fe 01       	movw	r30, r28
    5212:	ed 51       	subi	r30, 0x1D	; 29
    5214:	ff 4f       	sbci	r31, 0xFF	; 255
    5216:	80 81       	ld	r24, Z
    5218:	91 81       	ldd	r25, Z+1	; 0x01
    521a:	01 97       	sbiw	r24, 0x01	; 1
    521c:	f1 f7       	brne	.-4      	; 0x521a <main+0x37aa>
    521e:	fe 01       	movw	r30, r28
    5220:	ed 51       	subi	r30, 0x1D	; 29
    5222:	ff 4f       	sbci	r31, 0xFF	; 255
    5224:	91 83       	std	Z+1, r25	; 0x01
    5226:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5228:	de 01       	movw	r26, r28
    522a:	ab 51       	subi	r26, 0x1B	; 27
    522c:	bf 4f       	sbci	r27, 0xFF	; 255
    522e:	fe 01       	movw	r30, r28
    5230:	eb 51       	subi	r30, 0x1B	; 27
    5232:	ff 4f       	sbci	r31, 0xFF	; 255
    5234:	80 81       	ld	r24, Z
    5236:	91 81       	ldd	r25, Z+1	; 0x01
    5238:	01 97       	sbiw	r24, 0x01	; 1
    523a:	11 96       	adiw	r26, 0x01	; 1
    523c:	9c 93       	st	X, r25
    523e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5240:	fe 01       	movw	r30, r28
    5242:	eb 51       	subi	r30, 0x1B	; 27
    5244:	ff 4f       	sbci	r31, 0xFF	; 255
    5246:	80 81       	ld	r24, Z
    5248:	91 81       	ldd	r25, Z+1	; 0x01
    524a:	00 97       	sbiw	r24, 0x00	; 0
    524c:	d1 f6       	brne	.-76     	; 0x5202 <main+0x3792>
    524e:	27 c0       	rjmp	.+78     	; 0x529e <main+0x382e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5250:	8e 01       	movw	r16, r28
    5252:	0b 51       	subi	r16, 0x1B	; 27
    5254:	1f 4f       	sbci	r17, 0xFF	; 255
    5256:	fe 01       	movw	r30, r28
    5258:	e9 51       	subi	r30, 0x19	; 25
    525a:	ff 4f       	sbci	r31, 0xFF	; 255
    525c:	60 81       	ld	r22, Z
    525e:	71 81       	ldd	r23, Z+1	; 0x01
    5260:	82 81       	ldd	r24, Z+2	; 0x02
    5262:	93 81       	ldd	r25, Z+3	; 0x03
    5264:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5268:	dc 01       	movw	r26, r24
    526a:	cb 01       	movw	r24, r22
    526c:	f8 01       	movw	r30, r16
    526e:	91 83       	std	Z+1, r25	; 0x01
    5270:	80 83       	st	Z, r24
    5272:	de 01       	movw	r26, r28
    5274:	af 51       	subi	r26, 0x1F	; 31
    5276:	bf 4f       	sbci	r27, 0xFF	; 255
    5278:	fe 01       	movw	r30, r28
    527a:	eb 51       	subi	r30, 0x1B	; 27
    527c:	ff 4f       	sbci	r31, 0xFF	; 255
    527e:	80 81       	ld	r24, Z
    5280:	91 81       	ldd	r25, Z+1	; 0x01
    5282:	8d 93       	st	X+, r24
    5284:	9c 93       	st	X, r25
    5286:	fe 01       	movw	r30, r28
    5288:	ef 51       	subi	r30, 0x1F	; 31
    528a:	ff 4f       	sbci	r31, 0xFF	; 255
    528c:	80 81       	ld	r24, Z
    528e:	91 81       	ldd	r25, Z+1	; 0x01
    5290:	01 97       	sbiw	r24, 0x01	; 1
    5292:	f1 f7       	brne	.-4      	; 0x5290 <main+0x3820>
    5294:	fe 01       	movw	r30, r28
    5296:	ef 51       	subi	r30, 0x1F	; 31
    5298:	ff 4f       	sbci	r31, 0xFF	; 255
    529a:	91 83       	std	Z+1, r25	; 0x01
    529c:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    529e:	81 e0       	ldi	r24, 0x01	; 1
    52a0:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>



		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,0);
    52a4:	ce 01       	movw	r24, r28
    52a6:	8a 50       	subi	r24, 0x0A	; 10
    52a8:	9d 4f       	sbci	r25, 0xFD	; 253
    52aa:	60 e0       	ldi	r22, 0x00	; 0
    52ac:	41 e0       	ldi	r20, 0x01	; 1
    52ae:	20 e0       	ldi	r18, 0x00	; 0
    52b0:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,15);
    52b4:	ce 01       	movw	r24, r28
    52b6:	8a 5d       	subi	r24, 0xDA	; 218
    52b8:	9c 4f       	sbci	r25, 0xFC	; 252
    52ba:	61 e0       	ldi	r22, 0x01	; 1
    52bc:	41 e0       	ldi	r20, 0x01	; 1
    52be:	2f e0       	ldi	r18, 0x0F	; 15
    52c0:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    52c4:	fe 01       	movw	r30, r28
    52c6:	e3 52       	subi	r30, 0x23	; 35
    52c8:	ff 4f       	sbci	r31, 0xFF	; 255
    52ca:	80 e0       	ldi	r24, 0x00	; 0
    52cc:	90 e0       	ldi	r25, 0x00	; 0
    52ce:	a0 e2       	ldi	r26, 0x20	; 32
    52d0:	b1 e4       	ldi	r27, 0x41	; 65
    52d2:	80 83       	st	Z, r24
    52d4:	91 83       	std	Z+1, r25	; 0x01
    52d6:	a2 83       	std	Z+2, r26	; 0x02
    52d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    52da:	8e 01       	movw	r16, r28
    52dc:	07 52       	subi	r16, 0x27	; 39
    52de:	1f 4f       	sbci	r17, 0xFF	; 255
    52e0:	fe 01       	movw	r30, r28
    52e2:	e3 52       	subi	r30, 0x23	; 35
    52e4:	ff 4f       	sbci	r31, 0xFF	; 255
    52e6:	60 81       	ld	r22, Z
    52e8:	71 81       	ldd	r23, Z+1	; 0x01
    52ea:	82 81       	ldd	r24, Z+2	; 0x02
    52ec:	93 81       	ldd	r25, Z+3	; 0x03
    52ee:	20 e0       	ldi	r18, 0x00	; 0
    52f0:	30 e0       	ldi	r19, 0x00	; 0
    52f2:	4a ef       	ldi	r20, 0xFA	; 250
    52f4:	54 e4       	ldi	r21, 0x44	; 68
    52f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    52fa:	dc 01       	movw	r26, r24
    52fc:	cb 01       	movw	r24, r22
    52fe:	f8 01       	movw	r30, r16
    5300:	80 83       	st	Z, r24
    5302:	91 83       	std	Z+1, r25	; 0x01
    5304:	a2 83       	std	Z+2, r26	; 0x02
    5306:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5308:	fe 01       	movw	r30, r28
    530a:	e7 52       	subi	r30, 0x27	; 39
    530c:	ff 4f       	sbci	r31, 0xFF	; 255
    530e:	60 81       	ld	r22, Z
    5310:	71 81       	ldd	r23, Z+1	; 0x01
    5312:	82 81       	ldd	r24, Z+2	; 0x02
    5314:	93 81       	ldd	r25, Z+3	; 0x03
    5316:	20 e0       	ldi	r18, 0x00	; 0
    5318:	30 e0       	ldi	r19, 0x00	; 0
    531a:	40 e8       	ldi	r20, 0x80	; 128
    531c:	5f e3       	ldi	r21, 0x3F	; 63
    531e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5322:	88 23       	and	r24, r24
    5324:	44 f4       	brge	.+16     	; 0x5336 <main+0x38c6>
		__ticks = 1;
    5326:	fe 01       	movw	r30, r28
    5328:	e9 52       	subi	r30, 0x29	; 41
    532a:	ff 4f       	sbci	r31, 0xFF	; 255
    532c:	81 e0       	ldi	r24, 0x01	; 1
    532e:	90 e0       	ldi	r25, 0x00	; 0
    5330:	91 83       	std	Z+1, r25	; 0x01
    5332:	80 83       	st	Z, r24
    5334:	64 c0       	rjmp	.+200    	; 0x53fe <main+0x398e>
	else if (__tmp > 65535)
    5336:	fe 01       	movw	r30, r28
    5338:	e7 52       	subi	r30, 0x27	; 39
    533a:	ff 4f       	sbci	r31, 0xFF	; 255
    533c:	60 81       	ld	r22, Z
    533e:	71 81       	ldd	r23, Z+1	; 0x01
    5340:	82 81       	ldd	r24, Z+2	; 0x02
    5342:	93 81       	ldd	r25, Z+3	; 0x03
    5344:	20 e0       	ldi	r18, 0x00	; 0
    5346:	3f ef       	ldi	r19, 0xFF	; 255
    5348:	4f e7       	ldi	r20, 0x7F	; 127
    534a:	57 e4       	ldi	r21, 0x47	; 71
    534c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5350:	18 16       	cp	r1, r24
    5352:	0c f0       	brlt	.+2      	; 0x5356 <main+0x38e6>
    5354:	43 c0       	rjmp	.+134    	; 0x53dc <main+0x396c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5356:	fe 01       	movw	r30, r28
    5358:	e3 52       	subi	r30, 0x23	; 35
    535a:	ff 4f       	sbci	r31, 0xFF	; 255
    535c:	60 81       	ld	r22, Z
    535e:	71 81       	ldd	r23, Z+1	; 0x01
    5360:	82 81       	ldd	r24, Z+2	; 0x02
    5362:	93 81       	ldd	r25, Z+3	; 0x03
    5364:	20 e0       	ldi	r18, 0x00	; 0
    5366:	30 e0       	ldi	r19, 0x00	; 0
    5368:	40 e2       	ldi	r20, 0x20	; 32
    536a:	51 e4       	ldi	r21, 0x41	; 65
    536c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5370:	dc 01       	movw	r26, r24
    5372:	cb 01       	movw	r24, r22
    5374:	8e 01       	movw	r16, r28
    5376:	09 52       	subi	r16, 0x29	; 41
    5378:	1f 4f       	sbci	r17, 0xFF	; 255
    537a:	bc 01       	movw	r22, r24
    537c:	cd 01       	movw	r24, r26
    537e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5382:	dc 01       	movw	r26, r24
    5384:	cb 01       	movw	r24, r22
    5386:	f8 01       	movw	r30, r16
    5388:	91 83       	std	Z+1, r25	; 0x01
    538a:	80 83       	st	Z, r24
    538c:	1f c0       	rjmp	.+62     	; 0x53cc <main+0x395c>
    538e:	fe 01       	movw	r30, r28
    5390:	eb 52       	subi	r30, 0x2B	; 43
    5392:	ff 4f       	sbci	r31, 0xFF	; 255
    5394:	88 ec       	ldi	r24, 0xC8	; 200
    5396:	90 e0       	ldi	r25, 0x00	; 0
    5398:	91 83       	std	Z+1, r25	; 0x01
    539a:	80 83       	st	Z, r24
    539c:	fe 01       	movw	r30, r28
    539e:	eb 52       	subi	r30, 0x2B	; 43
    53a0:	ff 4f       	sbci	r31, 0xFF	; 255
    53a2:	80 81       	ld	r24, Z
    53a4:	91 81       	ldd	r25, Z+1	; 0x01
    53a6:	01 97       	sbiw	r24, 0x01	; 1
    53a8:	f1 f7       	brne	.-4      	; 0x53a6 <main+0x3936>
    53aa:	fe 01       	movw	r30, r28
    53ac:	eb 52       	subi	r30, 0x2B	; 43
    53ae:	ff 4f       	sbci	r31, 0xFF	; 255
    53b0:	91 83       	std	Z+1, r25	; 0x01
    53b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    53b4:	de 01       	movw	r26, r28
    53b6:	a9 52       	subi	r26, 0x29	; 41
    53b8:	bf 4f       	sbci	r27, 0xFF	; 255
    53ba:	fe 01       	movw	r30, r28
    53bc:	e9 52       	subi	r30, 0x29	; 41
    53be:	ff 4f       	sbci	r31, 0xFF	; 255
    53c0:	80 81       	ld	r24, Z
    53c2:	91 81       	ldd	r25, Z+1	; 0x01
    53c4:	01 97       	sbiw	r24, 0x01	; 1
    53c6:	11 96       	adiw	r26, 0x01	; 1
    53c8:	9c 93       	st	X, r25
    53ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53cc:	fe 01       	movw	r30, r28
    53ce:	e9 52       	subi	r30, 0x29	; 41
    53d0:	ff 4f       	sbci	r31, 0xFF	; 255
    53d2:	80 81       	ld	r24, Z
    53d4:	91 81       	ldd	r25, Z+1	; 0x01
    53d6:	00 97       	sbiw	r24, 0x00	; 0
    53d8:	d1 f6       	brne	.-76     	; 0x538e <main+0x391e>
    53da:	27 c0       	rjmp	.+78     	; 0x542a <main+0x39ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53dc:	8e 01       	movw	r16, r28
    53de:	09 52       	subi	r16, 0x29	; 41
    53e0:	1f 4f       	sbci	r17, 0xFF	; 255
    53e2:	fe 01       	movw	r30, r28
    53e4:	e7 52       	subi	r30, 0x27	; 39
    53e6:	ff 4f       	sbci	r31, 0xFF	; 255
    53e8:	60 81       	ld	r22, Z
    53ea:	71 81       	ldd	r23, Z+1	; 0x01
    53ec:	82 81       	ldd	r24, Z+2	; 0x02
    53ee:	93 81       	ldd	r25, Z+3	; 0x03
    53f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53f4:	dc 01       	movw	r26, r24
    53f6:	cb 01       	movw	r24, r22
    53f8:	f8 01       	movw	r30, r16
    53fa:	91 83       	std	Z+1, r25	; 0x01
    53fc:	80 83       	st	Z, r24
    53fe:	de 01       	movw	r26, r28
    5400:	ad 52       	subi	r26, 0x2D	; 45
    5402:	bf 4f       	sbci	r27, 0xFF	; 255
    5404:	fe 01       	movw	r30, r28
    5406:	e9 52       	subi	r30, 0x29	; 41
    5408:	ff 4f       	sbci	r31, 0xFF	; 255
    540a:	80 81       	ld	r24, Z
    540c:	91 81       	ldd	r25, Z+1	; 0x01
    540e:	8d 93       	st	X+, r24
    5410:	9c 93       	st	X, r25
    5412:	fe 01       	movw	r30, r28
    5414:	ed 52       	subi	r30, 0x2D	; 45
    5416:	ff 4f       	sbci	r31, 0xFF	; 255
    5418:	80 81       	ld	r24, Z
    541a:	91 81       	ldd	r25, Z+1	; 0x01
    541c:	01 97       	sbiw	r24, 0x01	; 1
    541e:	f1 f7       	brne	.-4      	; 0x541c <main+0x39ac>
    5420:	fe 01       	movw	r30, r28
    5422:	ed 52       	subi	r30, 0x2D	; 45
    5424:	ff 4f       	sbci	r31, 0xFF	; 255
    5426:	91 83       	std	Z+1, r25	; 0x01
    5428:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    542a:	81 e0       	ldi	r24, 0x01	; 1
    542c:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,1);
    5430:	ce 01       	movw	r24, r28
    5432:	82 5e       	subi	r24, 0xE2	; 226
    5434:	9c 4f       	sbci	r25, 0xFC	; 252
    5436:	60 e0       	ldi	r22, 0x00	; 0
    5438:	41 e0       	ldi	r20, 0x01	; 1
    543a:	21 e0       	ldi	r18, 0x01	; 1
    543c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,14);
    5440:	ce 01       	movw	r24, r28
    5442:	8a 5d       	subi	r24, 0xDA	; 218
    5444:	9c 4f       	sbci	r25, 0xFC	; 252
    5446:	61 e0       	ldi	r22, 0x01	; 1
    5448:	41 e0       	ldi	r20, 0x01	; 1
    544a:	2e e0       	ldi	r18, 0x0E	; 14
    544c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5450:	fe 01       	movw	r30, r28
    5452:	e1 53       	subi	r30, 0x31	; 49
    5454:	ff 4f       	sbci	r31, 0xFF	; 255
    5456:	80 e0       	ldi	r24, 0x00	; 0
    5458:	90 e0       	ldi	r25, 0x00	; 0
    545a:	a0 e2       	ldi	r26, 0x20	; 32
    545c:	b1 e4       	ldi	r27, 0x41	; 65
    545e:	80 83       	st	Z, r24
    5460:	91 83       	std	Z+1, r25	; 0x01
    5462:	a2 83       	std	Z+2, r26	; 0x02
    5464:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5466:	8e 01       	movw	r16, r28
    5468:	05 53       	subi	r16, 0x35	; 53
    546a:	1f 4f       	sbci	r17, 0xFF	; 255
    546c:	fe 01       	movw	r30, r28
    546e:	e1 53       	subi	r30, 0x31	; 49
    5470:	ff 4f       	sbci	r31, 0xFF	; 255
    5472:	60 81       	ld	r22, Z
    5474:	71 81       	ldd	r23, Z+1	; 0x01
    5476:	82 81       	ldd	r24, Z+2	; 0x02
    5478:	93 81       	ldd	r25, Z+3	; 0x03
    547a:	20 e0       	ldi	r18, 0x00	; 0
    547c:	30 e0       	ldi	r19, 0x00	; 0
    547e:	4a ef       	ldi	r20, 0xFA	; 250
    5480:	54 e4       	ldi	r21, 0x44	; 68
    5482:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5486:	dc 01       	movw	r26, r24
    5488:	cb 01       	movw	r24, r22
    548a:	f8 01       	movw	r30, r16
    548c:	80 83       	st	Z, r24
    548e:	91 83       	std	Z+1, r25	; 0x01
    5490:	a2 83       	std	Z+2, r26	; 0x02
    5492:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5494:	fe 01       	movw	r30, r28
    5496:	e5 53       	subi	r30, 0x35	; 53
    5498:	ff 4f       	sbci	r31, 0xFF	; 255
    549a:	60 81       	ld	r22, Z
    549c:	71 81       	ldd	r23, Z+1	; 0x01
    549e:	82 81       	ldd	r24, Z+2	; 0x02
    54a0:	93 81       	ldd	r25, Z+3	; 0x03
    54a2:	20 e0       	ldi	r18, 0x00	; 0
    54a4:	30 e0       	ldi	r19, 0x00	; 0
    54a6:	40 e8       	ldi	r20, 0x80	; 128
    54a8:	5f e3       	ldi	r21, 0x3F	; 63
    54aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    54ae:	88 23       	and	r24, r24
    54b0:	44 f4       	brge	.+16     	; 0x54c2 <main+0x3a52>
		__ticks = 1;
    54b2:	fe 01       	movw	r30, r28
    54b4:	e7 53       	subi	r30, 0x37	; 55
    54b6:	ff 4f       	sbci	r31, 0xFF	; 255
    54b8:	81 e0       	ldi	r24, 0x01	; 1
    54ba:	90 e0       	ldi	r25, 0x00	; 0
    54bc:	91 83       	std	Z+1, r25	; 0x01
    54be:	80 83       	st	Z, r24
    54c0:	64 c0       	rjmp	.+200    	; 0x558a <main+0x3b1a>
	else if (__tmp > 65535)
    54c2:	fe 01       	movw	r30, r28
    54c4:	e5 53       	subi	r30, 0x35	; 53
    54c6:	ff 4f       	sbci	r31, 0xFF	; 255
    54c8:	60 81       	ld	r22, Z
    54ca:	71 81       	ldd	r23, Z+1	; 0x01
    54cc:	82 81       	ldd	r24, Z+2	; 0x02
    54ce:	93 81       	ldd	r25, Z+3	; 0x03
    54d0:	20 e0       	ldi	r18, 0x00	; 0
    54d2:	3f ef       	ldi	r19, 0xFF	; 255
    54d4:	4f e7       	ldi	r20, 0x7F	; 127
    54d6:	57 e4       	ldi	r21, 0x47	; 71
    54d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    54dc:	18 16       	cp	r1, r24
    54de:	0c f0       	brlt	.+2      	; 0x54e2 <main+0x3a72>
    54e0:	43 c0       	rjmp	.+134    	; 0x5568 <main+0x3af8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    54e2:	fe 01       	movw	r30, r28
    54e4:	e1 53       	subi	r30, 0x31	; 49
    54e6:	ff 4f       	sbci	r31, 0xFF	; 255
    54e8:	60 81       	ld	r22, Z
    54ea:	71 81       	ldd	r23, Z+1	; 0x01
    54ec:	82 81       	ldd	r24, Z+2	; 0x02
    54ee:	93 81       	ldd	r25, Z+3	; 0x03
    54f0:	20 e0       	ldi	r18, 0x00	; 0
    54f2:	30 e0       	ldi	r19, 0x00	; 0
    54f4:	40 e2       	ldi	r20, 0x20	; 32
    54f6:	51 e4       	ldi	r21, 0x41	; 65
    54f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    54fc:	dc 01       	movw	r26, r24
    54fe:	cb 01       	movw	r24, r22
    5500:	8e 01       	movw	r16, r28
    5502:	07 53       	subi	r16, 0x37	; 55
    5504:	1f 4f       	sbci	r17, 0xFF	; 255
    5506:	bc 01       	movw	r22, r24
    5508:	cd 01       	movw	r24, r26
    550a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    550e:	dc 01       	movw	r26, r24
    5510:	cb 01       	movw	r24, r22
    5512:	f8 01       	movw	r30, r16
    5514:	91 83       	std	Z+1, r25	; 0x01
    5516:	80 83       	st	Z, r24
    5518:	1f c0       	rjmp	.+62     	; 0x5558 <main+0x3ae8>
    551a:	fe 01       	movw	r30, r28
    551c:	e9 53       	subi	r30, 0x39	; 57
    551e:	ff 4f       	sbci	r31, 0xFF	; 255
    5520:	88 ec       	ldi	r24, 0xC8	; 200
    5522:	90 e0       	ldi	r25, 0x00	; 0
    5524:	91 83       	std	Z+1, r25	; 0x01
    5526:	80 83       	st	Z, r24
    5528:	fe 01       	movw	r30, r28
    552a:	e9 53       	subi	r30, 0x39	; 57
    552c:	ff 4f       	sbci	r31, 0xFF	; 255
    552e:	80 81       	ld	r24, Z
    5530:	91 81       	ldd	r25, Z+1	; 0x01
    5532:	01 97       	sbiw	r24, 0x01	; 1
    5534:	f1 f7       	brne	.-4      	; 0x5532 <main+0x3ac2>
    5536:	fe 01       	movw	r30, r28
    5538:	e9 53       	subi	r30, 0x39	; 57
    553a:	ff 4f       	sbci	r31, 0xFF	; 255
    553c:	91 83       	std	Z+1, r25	; 0x01
    553e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5540:	de 01       	movw	r26, r28
    5542:	a7 53       	subi	r26, 0x37	; 55
    5544:	bf 4f       	sbci	r27, 0xFF	; 255
    5546:	fe 01       	movw	r30, r28
    5548:	e7 53       	subi	r30, 0x37	; 55
    554a:	ff 4f       	sbci	r31, 0xFF	; 255
    554c:	80 81       	ld	r24, Z
    554e:	91 81       	ldd	r25, Z+1	; 0x01
    5550:	01 97       	sbiw	r24, 0x01	; 1
    5552:	11 96       	adiw	r26, 0x01	; 1
    5554:	9c 93       	st	X, r25
    5556:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5558:	fe 01       	movw	r30, r28
    555a:	e7 53       	subi	r30, 0x37	; 55
    555c:	ff 4f       	sbci	r31, 0xFF	; 255
    555e:	80 81       	ld	r24, Z
    5560:	91 81       	ldd	r25, Z+1	; 0x01
    5562:	00 97       	sbiw	r24, 0x00	; 0
    5564:	d1 f6       	brne	.-76     	; 0x551a <main+0x3aaa>
    5566:	27 c0       	rjmp	.+78     	; 0x55b6 <main+0x3b46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5568:	8e 01       	movw	r16, r28
    556a:	07 53       	subi	r16, 0x37	; 55
    556c:	1f 4f       	sbci	r17, 0xFF	; 255
    556e:	fe 01       	movw	r30, r28
    5570:	e5 53       	subi	r30, 0x35	; 53
    5572:	ff 4f       	sbci	r31, 0xFF	; 255
    5574:	60 81       	ld	r22, Z
    5576:	71 81       	ldd	r23, Z+1	; 0x01
    5578:	82 81       	ldd	r24, Z+2	; 0x02
    557a:	93 81       	ldd	r25, Z+3	; 0x03
    557c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5580:	dc 01       	movw	r26, r24
    5582:	cb 01       	movw	r24, r22
    5584:	f8 01       	movw	r30, r16
    5586:	91 83       	std	Z+1, r25	; 0x01
    5588:	80 83       	st	Z, r24
    558a:	de 01       	movw	r26, r28
    558c:	ab 53       	subi	r26, 0x3B	; 59
    558e:	bf 4f       	sbci	r27, 0xFF	; 255
    5590:	fe 01       	movw	r30, r28
    5592:	e7 53       	subi	r30, 0x37	; 55
    5594:	ff 4f       	sbci	r31, 0xFF	; 255
    5596:	80 81       	ld	r24, Z
    5598:	91 81       	ldd	r25, Z+1	; 0x01
    559a:	8d 93       	st	X+, r24
    559c:	9c 93       	st	X, r25
    559e:	fe 01       	movw	r30, r28
    55a0:	eb 53       	subi	r30, 0x3B	; 59
    55a2:	ff 4f       	sbci	r31, 0xFF	; 255
    55a4:	80 81       	ld	r24, Z
    55a6:	91 81       	ldd	r25, Z+1	; 0x01
    55a8:	01 97       	sbiw	r24, 0x01	; 1
    55aa:	f1 f7       	brne	.-4      	; 0x55a8 <main+0x3b38>
    55ac:	fe 01       	movw	r30, r28
    55ae:	eb 53       	subi	r30, 0x3B	; 59
    55b0:	ff 4f       	sbci	r31, 0xFF	; 255
    55b2:	91 83       	std	Z+1, r25	; 0x01
    55b4:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    55b6:	81 e0       	ldi	r24, 0x01	; 1
    55b8:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,2);
    55bc:	ce 01       	movw	r24, r28
    55be:	8a 50       	subi	r24, 0x0A	; 10
    55c0:	9d 4f       	sbci	r25, 0xFD	; 253
    55c2:	60 e0       	ldi	r22, 0x00	; 0
    55c4:	41 e0       	ldi	r20, 0x01	; 1
    55c6:	22 e0       	ldi	r18, 0x02	; 2
    55c8:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,13);
    55cc:	ce 01       	movw	r24, r28
    55ce:	8a 5d       	subi	r24, 0xDA	; 218
    55d0:	9c 4f       	sbci	r25, 0xFC	; 252
    55d2:	61 e0       	ldi	r22, 0x01	; 1
    55d4:	41 e0       	ldi	r20, 0x01	; 1
    55d6:	2d e0       	ldi	r18, 0x0D	; 13
    55d8:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    55dc:	fe 01       	movw	r30, r28
    55de:	ef 53       	subi	r30, 0x3F	; 63
    55e0:	ff 4f       	sbci	r31, 0xFF	; 255
    55e2:	80 e0       	ldi	r24, 0x00	; 0
    55e4:	90 e0       	ldi	r25, 0x00	; 0
    55e6:	a0 e2       	ldi	r26, 0x20	; 32
    55e8:	b1 e4       	ldi	r27, 0x41	; 65
    55ea:	80 83       	st	Z, r24
    55ec:	91 83       	std	Z+1, r25	; 0x01
    55ee:	a2 83       	std	Z+2, r26	; 0x02
    55f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    55f2:	8e 01       	movw	r16, r28
    55f4:	03 54       	subi	r16, 0x43	; 67
    55f6:	1f 4f       	sbci	r17, 0xFF	; 255
    55f8:	fe 01       	movw	r30, r28
    55fa:	ef 53       	subi	r30, 0x3F	; 63
    55fc:	ff 4f       	sbci	r31, 0xFF	; 255
    55fe:	60 81       	ld	r22, Z
    5600:	71 81       	ldd	r23, Z+1	; 0x01
    5602:	82 81       	ldd	r24, Z+2	; 0x02
    5604:	93 81       	ldd	r25, Z+3	; 0x03
    5606:	20 e0       	ldi	r18, 0x00	; 0
    5608:	30 e0       	ldi	r19, 0x00	; 0
    560a:	4a ef       	ldi	r20, 0xFA	; 250
    560c:	54 e4       	ldi	r21, 0x44	; 68
    560e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5612:	dc 01       	movw	r26, r24
    5614:	cb 01       	movw	r24, r22
    5616:	f8 01       	movw	r30, r16
    5618:	80 83       	st	Z, r24
    561a:	91 83       	std	Z+1, r25	; 0x01
    561c:	a2 83       	std	Z+2, r26	; 0x02
    561e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5620:	fe 01       	movw	r30, r28
    5622:	e3 54       	subi	r30, 0x43	; 67
    5624:	ff 4f       	sbci	r31, 0xFF	; 255
    5626:	60 81       	ld	r22, Z
    5628:	71 81       	ldd	r23, Z+1	; 0x01
    562a:	82 81       	ldd	r24, Z+2	; 0x02
    562c:	93 81       	ldd	r25, Z+3	; 0x03
    562e:	20 e0       	ldi	r18, 0x00	; 0
    5630:	30 e0       	ldi	r19, 0x00	; 0
    5632:	40 e8       	ldi	r20, 0x80	; 128
    5634:	5f e3       	ldi	r21, 0x3F	; 63
    5636:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    563a:	88 23       	and	r24, r24
    563c:	44 f4       	brge	.+16     	; 0x564e <main+0x3bde>
		__ticks = 1;
    563e:	fe 01       	movw	r30, r28
    5640:	e5 54       	subi	r30, 0x45	; 69
    5642:	ff 4f       	sbci	r31, 0xFF	; 255
    5644:	81 e0       	ldi	r24, 0x01	; 1
    5646:	90 e0       	ldi	r25, 0x00	; 0
    5648:	91 83       	std	Z+1, r25	; 0x01
    564a:	80 83       	st	Z, r24
    564c:	64 c0       	rjmp	.+200    	; 0x5716 <main+0x3ca6>
	else if (__tmp > 65535)
    564e:	fe 01       	movw	r30, r28
    5650:	e3 54       	subi	r30, 0x43	; 67
    5652:	ff 4f       	sbci	r31, 0xFF	; 255
    5654:	60 81       	ld	r22, Z
    5656:	71 81       	ldd	r23, Z+1	; 0x01
    5658:	82 81       	ldd	r24, Z+2	; 0x02
    565a:	93 81       	ldd	r25, Z+3	; 0x03
    565c:	20 e0       	ldi	r18, 0x00	; 0
    565e:	3f ef       	ldi	r19, 0xFF	; 255
    5660:	4f e7       	ldi	r20, 0x7F	; 127
    5662:	57 e4       	ldi	r21, 0x47	; 71
    5664:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5668:	18 16       	cp	r1, r24
    566a:	0c f0       	brlt	.+2      	; 0x566e <main+0x3bfe>
    566c:	43 c0       	rjmp	.+134    	; 0x56f4 <main+0x3c84>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    566e:	fe 01       	movw	r30, r28
    5670:	ef 53       	subi	r30, 0x3F	; 63
    5672:	ff 4f       	sbci	r31, 0xFF	; 255
    5674:	60 81       	ld	r22, Z
    5676:	71 81       	ldd	r23, Z+1	; 0x01
    5678:	82 81       	ldd	r24, Z+2	; 0x02
    567a:	93 81       	ldd	r25, Z+3	; 0x03
    567c:	20 e0       	ldi	r18, 0x00	; 0
    567e:	30 e0       	ldi	r19, 0x00	; 0
    5680:	40 e2       	ldi	r20, 0x20	; 32
    5682:	51 e4       	ldi	r21, 0x41	; 65
    5684:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5688:	dc 01       	movw	r26, r24
    568a:	cb 01       	movw	r24, r22
    568c:	8e 01       	movw	r16, r28
    568e:	05 54       	subi	r16, 0x45	; 69
    5690:	1f 4f       	sbci	r17, 0xFF	; 255
    5692:	bc 01       	movw	r22, r24
    5694:	cd 01       	movw	r24, r26
    5696:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    569a:	dc 01       	movw	r26, r24
    569c:	cb 01       	movw	r24, r22
    569e:	f8 01       	movw	r30, r16
    56a0:	91 83       	std	Z+1, r25	; 0x01
    56a2:	80 83       	st	Z, r24
    56a4:	1f c0       	rjmp	.+62     	; 0x56e4 <main+0x3c74>
    56a6:	fe 01       	movw	r30, r28
    56a8:	e7 54       	subi	r30, 0x47	; 71
    56aa:	ff 4f       	sbci	r31, 0xFF	; 255
    56ac:	88 ec       	ldi	r24, 0xC8	; 200
    56ae:	90 e0       	ldi	r25, 0x00	; 0
    56b0:	91 83       	std	Z+1, r25	; 0x01
    56b2:	80 83       	st	Z, r24
    56b4:	fe 01       	movw	r30, r28
    56b6:	e7 54       	subi	r30, 0x47	; 71
    56b8:	ff 4f       	sbci	r31, 0xFF	; 255
    56ba:	80 81       	ld	r24, Z
    56bc:	91 81       	ldd	r25, Z+1	; 0x01
    56be:	01 97       	sbiw	r24, 0x01	; 1
    56c0:	f1 f7       	brne	.-4      	; 0x56be <main+0x3c4e>
    56c2:	fe 01       	movw	r30, r28
    56c4:	e7 54       	subi	r30, 0x47	; 71
    56c6:	ff 4f       	sbci	r31, 0xFF	; 255
    56c8:	91 83       	std	Z+1, r25	; 0x01
    56ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    56cc:	de 01       	movw	r26, r28
    56ce:	a5 54       	subi	r26, 0x45	; 69
    56d0:	bf 4f       	sbci	r27, 0xFF	; 255
    56d2:	fe 01       	movw	r30, r28
    56d4:	e5 54       	subi	r30, 0x45	; 69
    56d6:	ff 4f       	sbci	r31, 0xFF	; 255
    56d8:	80 81       	ld	r24, Z
    56da:	91 81       	ldd	r25, Z+1	; 0x01
    56dc:	01 97       	sbiw	r24, 0x01	; 1
    56de:	11 96       	adiw	r26, 0x01	; 1
    56e0:	9c 93       	st	X, r25
    56e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    56e4:	fe 01       	movw	r30, r28
    56e6:	e5 54       	subi	r30, 0x45	; 69
    56e8:	ff 4f       	sbci	r31, 0xFF	; 255
    56ea:	80 81       	ld	r24, Z
    56ec:	91 81       	ldd	r25, Z+1	; 0x01
    56ee:	00 97       	sbiw	r24, 0x00	; 0
    56f0:	d1 f6       	brne	.-76     	; 0x56a6 <main+0x3c36>
    56f2:	27 c0       	rjmp	.+78     	; 0x5742 <main+0x3cd2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    56f4:	8e 01       	movw	r16, r28
    56f6:	05 54       	subi	r16, 0x45	; 69
    56f8:	1f 4f       	sbci	r17, 0xFF	; 255
    56fa:	fe 01       	movw	r30, r28
    56fc:	e3 54       	subi	r30, 0x43	; 67
    56fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5700:	60 81       	ld	r22, Z
    5702:	71 81       	ldd	r23, Z+1	; 0x01
    5704:	82 81       	ldd	r24, Z+2	; 0x02
    5706:	93 81       	ldd	r25, Z+3	; 0x03
    5708:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    570c:	dc 01       	movw	r26, r24
    570e:	cb 01       	movw	r24, r22
    5710:	f8 01       	movw	r30, r16
    5712:	91 83       	std	Z+1, r25	; 0x01
    5714:	80 83       	st	Z, r24
    5716:	de 01       	movw	r26, r28
    5718:	a9 54       	subi	r26, 0x49	; 73
    571a:	bf 4f       	sbci	r27, 0xFF	; 255
    571c:	fe 01       	movw	r30, r28
    571e:	e5 54       	subi	r30, 0x45	; 69
    5720:	ff 4f       	sbci	r31, 0xFF	; 255
    5722:	80 81       	ld	r24, Z
    5724:	91 81       	ldd	r25, Z+1	; 0x01
    5726:	8d 93       	st	X+, r24
    5728:	9c 93       	st	X, r25
    572a:	fe 01       	movw	r30, r28
    572c:	e9 54       	subi	r30, 0x49	; 73
    572e:	ff 4f       	sbci	r31, 0xFF	; 255
    5730:	80 81       	ld	r24, Z
    5732:	91 81       	ldd	r25, Z+1	; 0x01
    5734:	01 97       	sbiw	r24, 0x01	; 1
    5736:	f1 f7       	brne	.-4      	; 0x5734 <main+0x3cc4>
    5738:	fe 01       	movw	r30, r28
    573a:	e9 54       	subi	r30, 0x49	; 73
    573c:	ff 4f       	sbci	r31, 0xFF	; 255
    573e:	91 83       	std	Z+1, r25	; 0x01
    5740:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    5742:	81 e0       	ldi	r24, 0x01	; 1
    5744:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,3);
    5748:	ce 01       	movw	r24, r28
    574a:	82 5e       	subi	r24, 0xE2	; 226
    574c:	9c 4f       	sbci	r25, 0xFC	; 252
    574e:	60 e0       	ldi	r22, 0x00	; 0
    5750:	41 e0       	ldi	r20, 0x01	; 1
    5752:	23 e0       	ldi	r18, 0x03	; 3
    5754:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,12);
    5758:	ce 01       	movw	r24, r28
    575a:	8a 5d       	subi	r24, 0xDA	; 218
    575c:	9c 4f       	sbci	r25, 0xFC	; 252
    575e:	61 e0       	ldi	r22, 0x01	; 1
    5760:	41 e0       	ldi	r20, 0x01	; 1
    5762:	2c e0       	ldi	r18, 0x0C	; 12
    5764:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5768:	fe 01       	movw	r30, r28
    576a:	ed 54       	subi	r30, 0x4D	; 77
    576c:	ff 4f       	sbci	r31, 0xFF	; 255
    576e:	80 e0       	ldi	r24, 0x00	; 0
    5770:	90 e0       	ldi	r25, 0x00	; 0
    5772:	a0 e2       	ldi	r26, 0x20	; 32
    5774:	b1 e4       	ldi	r27, 0x41	; 65
    5776:	80 83       	st	Z, r24
    5778:	91 83       	std	Z+1, r25	; 0x01
    577a:	a2 83       	std	Z+2, r26	; 0x02
    577c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    577e:	8e 01       	movw	r16, r28
    5780:	01 55       	subi	r16, 0x51	; 81
    5782:	1f 4f       	sbci	r17, 0xFF	; 255
    5784:	fe 01       	movw	r30, r28
    5786:	ed 54       	subi	r30, 0x4D	; 77
    5788:	ff 4f       	sbci	r31, 0xFF	; 255
    578a:	60 81       	ld	r22, Z
    578c:	71 81       	ldd	r23, Z+1	; 0x01
    578e:	82 81       	ldd	r24, Z+2	; 0x02
    5790:	93 81       	ldd	r25, Z+3	; 0x03
    5792:	20 e0       	ldi	r18, 0x00	; 0
    5794:	30 e0       	ldi	r19, 0x00	; 0
    5796:	4a ef       	ldi	r20, 0xFA	; 250
    5798:	54 e4       	ldi	r21, 0x44	; 68
    579a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    579e:	dc 01       	movw	r26, r24
    57a0:	cb 01       	movw	r24, r22
    57a2:	f8 01       	movw	r30, r16
    57a4:	80 83       	st	Z, r24
    57a6:	91 83       	std	Z+1, r25	; 0x01
    57a8:	a2 83       	std	Z+2, r26	; 0x02
    57aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    57ac:	fe 01       	movw	r30, r28
    57ae:	e1 55       	subi	r30, 0x51	; 81
    57b0:	ff 4f       	sbci	r31, 0xFF	; 255
    57b2:	60 81       	ld	r22, Z
    57b4:	71 81       	ldd	r23, Z+1	; 0x01
    57b6:	82 81       	ldd	r24, Z+2	; 0x02
    57b8:	93 81       	ldd	r25, Z+3	; 0x03
    57ba:	20 e0       	ldi	r18, 0x00	; 0
    57bc:	30 e0       	ldi	r19, 0x00	; 0
    57be:	40 e8       	ldi	r20, 0x80	; 128
    57c0:	5f e3       	ldi	r21, 0x3F	; 63
    57c2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    57c6:	88 23       	and	r24, r24
    57c8:	44 f4       	brge	.+16     	; 0x57da <main+0x3d6a>
		__ticks = 1;
    57ca:	fe 01       	movw	r30, r28
    57cc:	e3 55       	subi	r30, 0x53	; 83
    57ce:	ff 4f       	sbci	r31, 0xFF	; 255
    57d0:	81 e0       	ldi	r24, 0x01	; 1
    57d2:	90 e0       	ldi	r25, 0x00	; 0
    57d4:	91 83       	std	Z+1, r25	; 0x01
    57d6:	80 83       	st	Z, r24
    57d8:	64 c0       	rjmp	.+200    	; 0x58a2 <main+0x3e32>
	else if (__tmp > 65535)
    57da:	fe 01       	movw	r30, r28
    57dc:	e1 55       	subi	r30, 0x51	; 81
    57de:	ff 4f       	sbci	r31, 0xFF	; 255
    57e0:	60 81       	ld	r22, Z
    57e2:	71 81       	ldd	r23, Z+1	; 0x01
    57e4:	82 81       	ldd	r24, Z+2	; 0x02
    57e6:	93 81       	ldd	r25, Z+3	; 0x03
    57e8:	20 e0       	ldi	r18, 0x00	; 0
    57ea:	3f ef       	ldi	r19, 0xFF	; 255
    57ec:	4f e7       	ldi	r20, 0x7F	; 127
    57ee:	57 e4       	ldi	r21, 0x47	; 71
    57f0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    57f4:	18 16       	cp	r1, r24
    57f6:	0c f0       	brlt	.+2      	; 0x57fa <main+0x3d8a>
    57f8:	43 c0       	rjmp	.+134    	; 0x5880 <main+0x3e10>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    57fa:	fe 01       	movw	r30, r28
    57fc:	ed 54       	subi	r30, 0x4D	; 77
    57fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5800:	60 81       	ld	r22, Z
    5802:	71 81       	ldd	r23, Z+1	; 0x01
    5804:	82 81       	ldd	r24, Z+2	; 0x02
    5806:	93 81       	ldd	r25, Z+3	; 0x03
    5808:	20 e0       	ldi	r18, 0x00	; 0
    580a:	30 e0       	ldi	r19, 0x00	; 0
    580c:	40 e2       	ldi	r20, 0x20	; 32
    580e:	51 e4       	ldi	r21, 0x41	; 65
    5810:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5814:	dc 01       	movw	r26, r24
    5816:	cb 01       	movw	r24, r22
    5818:	8e 01       	movw	r16, r28
    581a:	03 55       	subi	r16, 0x53	; 83
    581c:	1f 4f       	sbci	r17, 0xFF	; 255
    581e:	bc 01       	movw	r22, r24
    5820:	cd 01       	movw	r24, r26
    5822:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5826:	dc 01       	movw	r26, r24
    5828:	cb 01       	movw	r24, r22
    582a:	f8 01       	movw	r30, r16
    582c:	91 83       	std	Z+1, r25	; 0x01
    582e:	80 83       	st	Z, r24
    5830:	1f c0       	rjmp	.+62     	; 0x5870 <main+0x3e00>
    5832:	fe 01       	movw	r30, r28
    5834:	e5 55       	subi	r30, 0x55	; 85
    5836:	ff 4f       	sbci	r31, 0xFF	; 255
    5838:	88 ec       	ldi	r24, 0xC8	; 200
    583a:	90 e0       	ldi	r25, 0x00	; 0
    583c:	91 83       	std	Z+1, r25	; 0x01
    583e:	80 83       	st	Z, r24
    5840:	fe 01       	movw	r30, r28
    5842:	e5 55       	subi	r30, 0x55	; 85
    5844:	ff 4f       	sbci	r31, 0xFF	; 255
    5846:	80 81       	ld	r24, Z
    5848:	91 81       	ldd	r25, Z+1	; 0x01
    584a:	01 97       	sbiw	r24, 0x01	; 1
    584c:	f1 f7       	brne	.-4      	; 0x584a <main+0x3dda>
    584e:	fe 01       	movw	r30, r28
    5850:	e5 55       	subi	r30, 0x55	; 85
    5852:	ff 4f       	sbci	r31, 0xFF	; 255
    5854:	91 83       	std	Z+1, r25	; 0x01
    5856:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5858:	de 01       	movw	r26, r28
    585a:	a3 55       	subi	r26, 0x53	; 83
    585c:	bf 4f       	sbci	r27, 0xFF	; 255
    585e:	fe 01       	movw	r30, r28
    5860:	e3 55       	subi	r30, 0x53	; 83
    5862:	ff 4f       	sbci	r31, 0xFF	; 255
    5864:	80 81       	ld	r24, Z
    5866:	91 81       	ldd	r25, Z+1	; 0x01
    5868:	01 97       	sbiw	r24, 0x01	; 1
    586a:	11 96       	adiw	r26, 0x01	; 1
    586c:	9c 93       	st	X, r25
    586e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5870:	fe 01       	movw	r30, r28
    5872:	e3 55       	subi	r30, 0x53	; 83
    5874:	ff 4f       	sbci	r31, 0xFF	; 255
    5876:	80 81       	ld	r24, Z
    5878:	91 81       	ldd	r25, Z+1	; 0x01
    587a:	00 97       	sbiw	r24, 0x00	; 0
    587c:	d1 f6       	brne	.-76     	; 0x5832 <main+0x3dc2>
    587e:	27 c0       	rjmp	.+78     	; 0x58ce <main+0x3e5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5880:	8e 01       	movw	r16, r28
    5882:	03 55       	subi	r16, 0x53	; 83
    5884:	1f 4f       	sbci	r17, 0xFF	; 255
    5886:	fe 01       	movw	r30, r28
    5888:	e1 55       	subi	r30, 0x51	; 81
    588a:	ff 4f       	sbci	r31, 0xFF	; 255
    588c:	60 81       	ld	r22, Z
    588e:	71 81       	ldd	r23, Z+1	; 0x01
    5890:	82 81       	ldd	r24, Z+2	; 0x02
    5892:	93 81       	ldd	r25, Z+3	; 0x03
    5894:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5898:	dc 01       	movw	r26, r24
    589a:	cb 01       	movw	r24, r22
    589c:	f8 01       	movw	r30, r16
    589e:	91 83       	std	Z+1, r25	; 0x01
    58a0:	80 83       	st	Z, r24
    58a2:	de 01       	movw	r26, r28
    58a4:	a7 55       	subi	r26, 0x57	; 87
    58a6:	bf 4f       	sbci	r27, 0xFF	; 255
    58a8:	fe 01       	movw	r30, r28
    58aa:	e3 55       	subi	r30, 0x53	; 83
    58ac:	ff 4f       	sbci	r31, 0xFF	; 255
    58ae:	80 81       	ld	r24, Z
    58b0:	91 81       	ldd	r25, Z+1	; 0x01
    58b2:	8d 93       	st	X+, r24
    58b4:	9c 93       	st	X, r25
    58b6:	fe 01       	movw	r30, r28
    58b8:	e7 55       	subi	r30, 0x57	; 87
    58ba:	ff 4f       	sbci	r31, 0xFF	; 255
    58bc:	80 81       	ld	r24, Z
    58be:	91 81       	ldd	r25, Z+1	; 0x01
    58c0:	01 97       	sbiw	r24, 0x01	; 1
    58c2:	f1 f7       	brne	.-4      	; 0x58c0 <main+0x3e50>
    58c4:	fe 01       	movw	r30, r28
    58c6:	e7 55       	subi	r30, 0x57	; 87
    58c8:	ff 4f       	sbci	r31, 0xFF	; 255
    58ca:	91 83       	std	Z+1, r25	; 0x01
    58cc:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    58ce:	81 e0       	ldi	r24, 0x01	; 1
    58d0:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,4);
    58d4:	ce 01       	movw	r24, r28
    58d6:	8a 50       	subi	r24, 0x0A	; 10
    58d8:	9d 4f       	sbci	r25, 0xFD	; 253
    58da:	60 e0       	ldi	r22, 0x00	; 0
    58dc:	41 e0       	ldi	r20, 0x01	; 1
    58de:	24 e0       	ldi	r18, 0x04	; 4
    58e0:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,11);
    58e4:	ce 01       	movw	r24, r28
    58e6:	8a 5d       	subi	r24, 0xDA	; 218
    58e8:	9c 4f       	sbci	r25, 0xFC	; 252
    58ea:	61 e0       	ldi	r22, 0x01	; 1
    58ec:	41 e0       	ldi	r20, 0x01	; 1
    58ee:	2b e0       	ldi	r18, 0x0B	; 11
    58f0:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    58f4:	fe 01       	movw	r30, r28
    58f6:	eb 55       	subi	r30, 0x5B	; 91
    58f8:	ff 4f       	sbci	r31, 0xFF	; 255
    58fa:	80 e0       	ldi	r24, 0x00	; 0
    58fc:	90 e0       	ldi	r25, 0x00	; 0
    58fe:	a0 e2       	ldi	r26, 0x20	; 32
    5900:	b1 e4       	ldi	r27, 0x41	; 65
    5902:	80 83       	st	Z, r24
    5904:	91 83       	std	Z+1, r25	; 0x01
    5906:	a2 83       	std	Z+2, r26	; 0x02
    5908:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    590a:	8e 01       	movw	r16, r28
    590c:	0f 55       	subi	r16, 0x5F	; 95
    590e:	1f 4f       	sbci	r17, 0xFF	; 255
    5910:	fe 01       	movw	r30, r28
    5912:	eb 55       	subi	r30, 0x5B	; 91
    5914:	ff 4f       	sbci	r31, 0xFF	; 255
    5916:	60 81       	ld	r22, Z
    5918:	71 81       	ldd	r23, Z+1	; 0x01
    591a:	82 81       	ldd	r24, Z+2	; 0x02
    591c:	93 81       	ldd	r25, Z+3	; 0x03
    591e:	20 e0       	ldi	r18, 0x00	; 0
    5920:	30 e0       	ldi	r19, 0x00	; 0
    5922:	4a ef       	ldi	r20, 0xFA	; 250
    5924:	54 e4       	ldi	r21, 0x44	; 68
    5926:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    592a:	dc 01       	movw	r26, r24
    592c:	cb 01       	movw	r24, r22
    592e:	f8 01       	movw	r30, r16
    5930:	80 83       	st	Z, r24
    5932:	91 83       	std	Z+1, r25	; 0x01
    5934:	a2 83       	std	Z+2, r26	; 0x02
    5936:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5938:	fe 01       	movw	r30, r28
    593a:	ef 55       	subi	r30, 0x5F	; 95
    593c:	ff 4f       	sbci	r31, 0xFF	; 255
    593e:	60 81       	ld	r22, Z
    5940:	71 81       	ldd	r23, Z+1	; 0x01
    5942:	82 81       	ldd	r24, Z+2	; 0x02
    5944:	93 81       	ldd	r25, Z+3	; 0x03
    5946:	20 e0       	ldi	r18, 0x00	; 0
    5948:	30 e0       	ldi	r19, 0x00	; 0
    594a:	40 e8       	ldi	r20, 0x80	; 128
    594c:	5f e3       	ldi	r21, 0x3F	; 63
    594e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5952:	88 23       	and	r24, r24
    5954:	44 f4       	brge	.+16     	; 0x5966 <main+0x3ef6>
		__ticks = 1;
    5956:	fe 01       	movw	r30, r28
    5958:	e1 56       	subi	r30, 0x61	; 97
    595a:	ff 4f       	sbci	r31, 0xFF	; 255
    595c:	81 e0       	ldi	r24, 0x01	; 1
    595e:	90 e0       	ldi	r25, 0x00	; 0
    5960:	91 83       	std	Z+1, r25	; 0x01
    5962:	80 83       	st	Z, r24
    5964:	64 c0       	rjmp	.+200    	; 0x5a2e <main+0x3fbe>
	else if (__tmp > 65535)
    5966:	fe 01       	movw	r30, r28
    5968:	ef 55       	subi	r30, 0x5F	; 95
    596a:	ff 4f       	sbci	r31, 0xFF	; 255
    596c:	60 81       	ld	r22, Z
    596e:	71 81       	ldd	r23, Z+1	; 0x01
    5970:	82 81       	ldd	r24, Z+2	; 0x02
    5972:	93 81       	ldd	r25, Z+3	; 0x03
    5974:	20 e0       	ldi	r18, 0x00	; 0
    5976:	3f ef       	ldi	r19, 0xFF	; 255
    5978:	4f e7       	ldi	r20, 0x7F	; 127
    597a:	57 e4       	ldi	r21, 0x47	; 71
    597c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5980:	18 16       	cp	r1, r24
    5982:	0c f0       	brlt	.+2      	; 0x5986 <main+0x3f16>
    5984:	43 c0       	rjmp	.+134    	; 0x5a0c <main+0x3f9c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5986:	fe 01       	movw	r30, r28
    5988:	eb 55       	subi	r30, 0x5B	; 91
    598a:	ff 4f       	sbci	r31, 0xFF	; 255
    598c:	60 81       	ld	r22, Z
    598e:	71 81       	ldd	r23, Z+1	; 0x01
    5990:	82 81       	ldd	r24, Z+2	; 0x02
    5992:	93 81       	ldd	r25, Z+3	; 0x03
    5994:	20 e0       	ldi	r18, 0x00	; 0
    5996:	30 e0       	ldi	r19, 0x00	; 0
    5998:	40 e2       	ldi	r20, 0x20	; 32
    599a:	51 e4       	ldi	r21, 0x41	; 65
    599c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    59a0:	dc 01       	movw	r26, r24
    59a2:	cb 01       	movw	r24, r22
    59a4:	8e 01       	movw	r16, r28
    59a6:	01 56       	subi	r16, 0x61	; 97
    59a8:	1f 4f       	sbci	r17, 0xFF	; 255
    59aa:	bc 01       	movw	r22, r24
    59ac:	cd 01       	movw	r24, r26
    59ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    59b2:	dc 01       	movw	r26, r24
    59b4:	cb 01       	movw	r24, r22
    59b6:	f8 01       	movw	r30, r16
    59b8:	91 83       	std	Z+1, r25	; 0x01
    59ba:	80 83       	st	Z, r24
    59bc:	1f c0       	rjmp	.+62     	; 0x59fc <main+0x3f8c>
    59be:	fe 01       	movw	r30, r28
    59c0:	e3 56       	subi	r30, 0x63	; 99
    59c2:	ff 4f       	sbci	r31, 0xFF	; 255
    59c4:	88 ec       	ldi	r24, 0xC8	; 200
    59c6:	90 e0       	ldi	r25, 0x00	; 0
    59c8:	91 83       	std	Z+1, r25	; 0x01
    59ca:	80 83       	st	Z, r24
    59cc:	fe 01       	movw	r30, r28
    59ce:	e3 56       	subi	r30, 0x63	; 99
    59d0:	ff 4f       	sbci	r31, 0xFF	; 255
    59d2:	80 81       	ld	r24, Z
    59d4:	91 81       	ldd	r25, Z+1	; 0x01
    59d6:	01 97       	sbiw	r24, 0x01	; 1
    59d8:	f1 f7       	brne	.-4      	; 0x59d6 <main+0x3f66>
    59da:	fe 01       	movw	r30, r28
    59dc:	e3 56       	subi	r30, 0x63	; 99
    59de:	ff 4f       	sbci	r31, 0xFF	; 255
    59e0:	91 83       	std	Z+1, r25	; 0x01
    59e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    59e4:	de 01       	movw	r26, r28
    59e6:	a1 56       	subi	r26, 0x61	; 97
    59e8:	bf 4f       	sbci	r27, 0xFF	; 255
    59ea:	fe 01       	movw	r30, r28
    59ec:	e1 56       	subi	r30, 0x61	; 97
    59ee:	ff 4f       	sbci	r31, 0xFF	; 255
    59f0:	80 81       	ld	r24, Z
    59f2:	91 81       	ldd	r25, Z+1	; 0x01
    59f4:	01 97       	sbiw	r24, 0x01	; 1
    59f6:	11 96       	adiw	r26, 0x01	; 1
    59f8:	9c 93       	st	X, r25
    59fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    59fc:	fe 01       	movw	r30, r28
    59fe:	e1 56       	subi	r30, 0x61	; 97
    5a00:	ff 4f       	sbci	r31, 0xFF	; 255
    5a02:	80 81       	ld	r24, Z
    5a04:	91 81       	ldd	r25, Z+1	; 0x01
    5a06:	00 97       	sbiw	r24, 0x00	; 0
    5a08:	d1 f6       	brne	.-76     	; 0x59be <main+0x3f4e>
    5a0a:	27 c0       	rjmp	.+78     	; 0x5a5a <main+0x3fea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5a0c:	8e 01       	movw	r16, r28
    5a0e:	01 56       	subi	r16, 0x61	; 97
    5a10:	1f 4f       	sbci	r17, 0xFF	; 255
    5a12:	fe 01       	movw	r30, r28
    5a14:	ef 55       	subi	r30, 0x5F	; 95
    5a16:	ff 4f       	sbci	r31, 0xFF	; 255
    5a18:	60 81       	ld	r22, Z
    5a1a:	71 81       	ldd	r23, Z+1	; 0x01
    5a1c:	82 81       	ldd	r24, Z+2	; 0x02
    5a1e:	93 81       	ldd	r25, Z+3	; 0x03
    5a20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5a24:	dc 01       	movw	r26, r24
    5a26:	cb 01       	movw	r24, r22
    5a28:	f8 01       	movw	r30, r16
    5a2a:	91 83       	std	Z+1, r25	; 0x01
    5a2c:	80 83       	st	Z, r24
    5a2e:	de 01       	movw	r26, r28
    5a30:	a5 56       	subi	r26, 0x65	; 101
    5a32:	bf 4f       	sbci	r27, 0xFF	; 255
    5a34:	fe 01       	movw	r30, r28
    5a36:	e1 56       	subi	r30, 0x61	; 97
    5a38:	ff 4f       	sbci	r31, 0xFF	; 255
    5a3a:	80 81       	ld	r24, Z
    5a3c:	91 81       	ldd	r25, Z+1	; 0x01
    5a3e:	8d 93       	st	X+, r24
    5a40:	9c 93       	st	X, r25
    5a42:	fe 01       	movw	r30, r28
    5a44:	e5 56       	subi	r30, 0x65	; 101
    5a46:	ff 4f       	sbci	r31, 0xFF	; 255
    5a48:	80 81       	ld	r24, Z
    5a4a:	91 81       	ldd	r25, Z+1	; 0x01
    5a4c:	01 97       	sbiw	r24, 0x01	; 1
    5a4e:	f1 f7       	brne	.-4      	; 0x5a4c <main+0x3fdc>
    5a50:	fe 01       	movw	r30, r28
    5a52:	e5 56       	subi	r30, 0x65	; 101
    5a54:	ff 4f       	sbci	r31, 0xFF	; 255
    5a56:	91 83       	std	Z+1, r25	; 0x01
    5a58:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    5a5a:	81 e0       	ldi	r24, 0x01	; 1
    5a5c:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,5);
    5a60:	ce 01       	movw	r24, r28
    5a62:	82 5e       	subi	r24, 0xE2	; 226
    5a64:	9c 4f       	sbci	r25, 0xFC	; 252
    5a66:	60 e0       	ldi	r22, 0x00	; 0
    5a68:	41 e0       	ldi	r20, 0x01	; 1
    5a6a:	25 e0       	ldi	r18, 0x05	; 5
    5a6c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,10);
    5a70:	ce 01       	movw	r24, r28
    5a72:	8a 5d       	subi	r24, 0xDA	; 218
    5a74:	9c 4f       	sbci	r25, 0xFC	; 252
    5a76:	61 e0       	ldi	r22, 0x01	; 1
    5a78:	41 e0       	ldi	r20, 0x01	; 1
    5a7a:	2a e0       	ldi	r18, 0x0A	; 10
    5a7c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5a80:	fe 01       	movw	r30, r28
    5a82:	e9 56       	subi	r30, 0x69	; 105
    5a84:	ff 4f       	sbci	r31, 0xFF	; 255
    5a86:	80 e0       	ldi	r24, 0x00	; 0
    5a88:	90 e0       	ldi	r25, 0x00	; 0
    5a8a:	a0 e2       	ldi	r26, 0x20	; 32
    5a8c:	b1 e4       	ldi	r27, 0x41	; 65
    5a8e:	80 83       	st	Z, r24
    5a90:	91 83       	std	Z+1, r25	; 0x01
    5a92:	a2 83       	std	Z+2, r26	; 0x02
    5a94:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5a96:	8e 01       	movw	r16, r28
    5a98:	0d 56       	subi	r16, 0x6D	; 109
    5a9a:	1f 4f       	sbci	r17, 0xFF	; 255
    5a9c:	fe 01       	movw	r30, r28
    5a9e:	e9 56       	subi	r30, 0x69	; 105
    5aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    5aa2:	60 81       	ld	r22, Z
    5aa4:	71 81       	ldd	r23, Z+1	; 0x01
    5aa6:	82 81       	ldd	r24, Z+2	; 0x02
    5aa8:	93 81       	ldd	r25, Z+3	; 0x03
    5aaa:	20 e0       	ldi	r18, 0x00	; 0
    5aac:	30 e0       	ldi	r19, 0x00	; 0
    5aae:	4a ef       	ldi	r20, 0xFA	; 250
    5ab0:	54 e4       	ldi	r21, 0x44	; 68
    5ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5ab6:	dc 01       	movw	r26, r24
    5ab8:	cb 01       	movw	r24, r22
    5aba:	f8 01       	movw	r30, r16
    5abc:	80 83       	st	Z, r24
    5abe:	91 83       	std	Z+1, r25	; 0x01
    5ac0:	a2 83       	std	Z+2, r26	; 0x02
    5ac2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ac4:	fe 01       	movw	r30, r28
    5ac6:	ed 56       	subi	r30, 0x6D	; 109
    5ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    5aca:	60 81       	ld	r22, Z
    5acc:	71 81       	ldd	r23, Z+1	; 0x01
    5ace:	82 81       	ldd	r24, Z+2	; 0x02
    5ad0:	93 81       	ldd	r25, Z+3	; 0x03
    5ad2:	20 e0       	ldi	r18, 0x00	; 0
    5ad4:	30 e0       	ldi	r19, 0x00	; 0
    5ad6:	40 e8       	ldi	r20, 0x80	; 128
    5ad8:	5f e3       	ldi	r21, 0x3F	; 63
    5ada:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5ade:	88 23       	and	r24, r24
    5ae0:	44 f4       	brge	.+16     	; 0x5af2 <main+0x4082>
		__ticks = 1;
    5ae2:	fe 01       	movw	r30, r28
    5ae4:	ef 56       	subi	r30, 0x6F	; 111
    5ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    5ae8:	81 e0       	ldi	r24, 0x01	; 1
    5aea:	90 e0       	ldi	r25, 0x00	; 0
    5aec:	91 83       	std	Z+1, r25	; 0x01
    5aee:	80 83       	st	Z, r24
    5af0:	64 c0       	rjmp	.+200    	; 0x5bba <main+0x414a>
	else if (__tmp > 65535)
    5af2:	fe 01       	movw	r30, r28
    5af4:	ed 56       	subi	r30, 0x6D	; 109
    5af6:	ff 4f       	sbci	r31, 0xFF	; 255
    5af8:	60 81       	ld	r22, Z
    5afa:	71 81       	ldd	r23, Z+1	; 0x01
    5afc:	82 81       	ldd	r24, Z+2	; 0x02
    5afe:	93 81       	ldd	r25, Z+3	; 0x03
    5b00:	20 e0       	ldi	r18, 0x00	; 0
    5b02:	3f ef       	ldi	r19, 0xFF	; 255
    5b04:	4f e7       	ldi	r20, 0x7F	; 127
    5b06:	57 e4       	ldi	r21, 0x47	; 71
    5b08:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5b0c:	18 16       	cp	r1, r24
    5b0e:	0c f0       	brlt	.+2      	; 0x5b12 <main+0x40a2>
    5b10:	43 c0       	rjmp	.+134    	; 0x5b98 <main+0x4128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5b12:	fe 01       	movw	r30, r28
    5b14:	e9 56       	subi	r30, 0x69	; 105
    5b16:	ff 4f       	sbci	r31, 0xFF	; 255
    5b18:	60 81       	ld	r22, Z
    5b1a:	71 81       	ldd	r23, Z+1	; 0x01
    5b1c:	82 81       	ldd	r24, Z+2	; 0x02
    5b1e:	93 81       	ldd	r25, Z+3	; 0x03
    5b20:	20 e0       	ldi	r18, 0x00	; 0
    5b22:	30 e0       	ldi	r19, 0x00	; 0
    5b24:	40 e2       	ldi	r20, 0x20	; 32
    5b26:	51 e4       	ldi	r21, 0x41	; 65
    5b28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5b2c:	dc 01       	movw	r26, r24
    5b2e:	cb 01       	movw	r24, r22
    5b30:	8e 01       	movw	r16, r28
    5b32:	0f 56       	subi	r16, 0x6F	; 111
    5b34:	1f 4f       	sbci	r17, 0xFF	; 255
    5b36:	bc 01       	movw	r22, r24
    5b38:	cd 01       	movw	r24, r26
    5b3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5b3e:	dc 01       	movw	r26, r24
    5b40:	cb 01       	movw	r24, r22
    5b42:	f8 01       	movw	r30, r16
    5b44:	91 83       	std	Z+1, r25	; 0x01
    5b46:	80 83       	st	Z, r24
    5b48:	1f c0       	rjmp	.+62     	; 0x5b88 <main+0x4118>
    5b4a:	fe 01       	movw	r30, r28
    5b4c:	e1 57       	subi	r30, 0x71	; 113
    5b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    5b50:	88 ec       	ldi	r24, 0xC8	; 200
    5b52:	90 e0       	ldi	r25, 0x00	; 0
    5b54:	91 83       	std	Z+1, r25	; 0x01
    5b56:	80 83       	st	Z, r24
    5b58:	fe 01       	movw	r30, r28
    5b5a:	e1 57       	subi	r30, 0x71	; 113
    5b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    5b5e:	80 81       	ld	r24, Z
    5b60:	91 81       	ldd	r25, Z+1	; 0x01
    5b62:	01 97       	sbiw	r24, 0x01	; 1
    5b64:	f1 f7       	brne	.-4      	; 0x5b62 <main+0x40f2>
    5b66:	fe 01       	movw	r30, r28
    5b68:	e1 57       	subi	r30, 0x71	; 113
    5b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b6c:	91 83       	std	Z+1, r25	; 0x01
    5b6e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b70:	de 01       	movw	r26, r28
    5b72:	af 56       	subi	r26, 0x6F	; 111
    5b74:	bf 4f       	sbci	r27, 0xFF	; 255
    5b76:	fe 01       	movw	r30, r28
    5b78:	ef 56       	subi	r30, 0x6F	; 111
    5b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    5b7c:	80 81       	ld	r24, Z
    5b7e:	91 81       	ldd	r25, Z+1	; 0x01
    5b80:	01 97       	sbiw	r24, 0x01	; 1
    5b82:	11 96       	adiw	r26, 0x01	; 1
    5b84:	9c 93       	st	X, r25
    5b86:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5b88:	fe 01       	movw	r30, r28
    5b8a:	ef 56       	subi	r30, 0x6F	; 111
    5b8c:	ff 4f       	sbci	r31, 0xFF	; 255
    5b8e:	80 81       	ld	r24, Z
    5b90:	91 81       	ldd	r25, Z+1	; 0x01
    5b92:	00 97       	sbiw	r24, 0x00	; 0
    5b94:	d1 f6       	brne	.-76     	; 0x5b4a <main+0x40da>
    5b96:	27 c0       	rjmp	.+78     	; 0x5be6 <main+0x4176>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5b98:	8e 01       	movw	r16, r28
    5b9a:	0f 56       	subi	r16, 0x6F	; 111
    5b9c:	1f 4f       	sbci	r17, 0xFF	; 255
    5b9e:	fe 01       	movw	r30, r28
    5ba0:	ed 56       	subi	r30, 0x6D	; 109
    5ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    5ba4:	60 81       	ld	r22, Z
    5ba6:	71 81       	ldd	r23, Z+1	; 0x01
    5ba8:	82 81       	ldd	r24, Z+2	; 0x02
    5baa:	93 81       	ldd	r25, Z+3	; 0x03
    5bac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5bb0:	dc 01       	movw	r26, r24
    5bb2:	cb 01       	movw	r24, r22
    5bb4:	f8 01       	movw	r30, r16
    5bb6:	91 83       	std	Z+1, r25	; 0x01
    5bb8:	80 83       	st	Z, r24
    5bba:	de 01       	movw	r26, r28
    5bbc:	a3 57       	subi	r26, 0x73	; 115
    5bbe:	bf 4f       	sbci	r27, 0xFF	; 255
    5bc0:	fe 01       	movw	r30, r28
    5bc2:	ef 56       	subi	r30, 0x6F	; 111
    5bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    5bc6:	80 81       	ld	r24, Z
    5bc8:	91 81       	ldd	r25, Z+1	; 0x01
    5bca:	8d 93       	st	X+, r24
    5bcc:	9c 93       	st	X, r25
    5bce:	fe 01       	movw	r30, r28
    5bd0:	e3 57       	subi	r30, 0x73	; 115
    5bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    5bd4:	80 81       	ld	r24, Z
    5bd6:	91 81       	ldd	r25, Z+1	; 0x01
    5bd8:	01 97       	sbiw	r24, 0x01	; 1
    5bda:	f1 f7       	brne	.-4      	; 0x5bd8 <main+0x4168>
    5bdc:	fe 01       	movw	r30, r28
    5bde:	e3 57       	subi	r30, 0x73	; 115
    5be0:	ff 4f       	sbci	r31, 0xFF	; 255
    5be2:	91 83       	std	Z+1, r25	; 0x01
    5be4:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    5be6:	81 e0       	ldi	r24, 0x01	; 1
    5be8:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,6);
    5bec:	ce 01       	movw	r24, r28
    5bee:	8a 50       	subi	r24, 0x0A	; 10
    5bf0:	9d 4f       	sbci	r25, 0xFD	; 253
    5bf2:	60 e0       	ldi	r22, 0x00	; 0
    5bf4:	41 e0       	ldi	r20, 0x01	; 1
    5bf6:	26 e0       	ldi	r18, 0x06	; 6
    5bf8:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,9);
    5bfc:	ce 01       	movw	r24, r28
    5bfe:	8a 5d       	subi	r24, 0xDA	; 218
    5c00:	9c 4f       	sbci	r25, 0xFC	; 252
    5c02:	61 e0       	ldi	r22, 0x01	; 1
    5c04:	41 e0       	ldi	r20, 0x01	; 1
    5c06:	29 e0       	ldi	r18, 0x09	; 9
    5c08:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5c0c:	fe 01       	movw	r30, r28
    5c0e:	e7 57       	subi	r30, 0x77	; 119
    5c10:	ff 4f       	sbci	r31, 0xFF	; 255
    5c12:	80 e0       	ldi	r24, 0x00	; 0
    5c14:	90 e0       	ldi	r25, 0x00	; 0
    5c16:	a0 e2       	ldi	r26, 0x20	; 32
    5c18:	b1 e4       	ldi	r27, 0x41	; 65
    5c1a:	80 83       	st	Z, r24
    5c1c:	91 83       	std	Z+1, r25	; 0x01
    5c1e:	a2 83       	std	Z+2, r26	; 0x02
    5c20:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5c22:	8e 01       	movw	r16, r28
    5c24:	0b 57       	subi	r16, 0x7B	; 123
    5c26:	1f 4f       	sbci	r17, 0xFF	; 255
    5c28:	fe 01       	movw	r30, r28
    5c2a:	e7 57       	subi	r30, 0x77	; 119
    5c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    5c2e:	60 81       	ld	r22, Z
    5c30:	71 81       	ldd	r23, Z+1	; 0x01
    5c32:	82 81       	ldd	r24, Z+2	; 0x02
    5c34:	93 81       	ldd	r25, Z+3	; 0x03
    5c36:	20 e0       	ldi	r18, 0x00	; 0
    5c38:	30 e0       	ldi	r19, 0x00	; 0
    5c3a:	4a ef       	ldi	r20, 0xFA	; 250
    5c3c:	54 e4       	ldi	r21, 0x44	; 68
    5c3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5c42:	dc 01       	movw	r26, r24
    5c44:	cb 01       	movw	r24, r22
    5c46:	f8 01       	movw	r30, r16
    5c48:	80 83       	st	Z, r24
    5c4a:	91 83       	std	Z+1, r25	; 0x01
    5c4c:	a2 83       	std	Z+2, r26	; 0x02
    5c4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5c50:	fe 01       	movw	r30, r28
    5c52:	eb 57       	subi	r30, 0x7B	; 123
    5c54:	ff 4f       	sbci	r31, 0xFF	; 255
    5c56:	60 81       	ld	r22, Z
    5c58:	71 81       	ldd	r23, Z+1	; 0x01
    5c5a:	82 81       	ldd	r24, Z+2	; 0x02
    5c5c:	93 81       	ldd	r25, Z+3	; 0x03
    5c5e:	20 e0       	ldi	r18, 0x00	; 0
    5c60:	30 e0       	ldi	r19, 0x00	; 0
    5c62:	40 e8       	ldi	r20, 0x80	; 128
    5c64:	5f e3       	ldi	r21, 0x3F	; 63
    5c66:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5c6a:	88 23       	and	r24, r24
    5c6c:	44 f4       	brge	.+16     	; 0x5c7e <main+0x420e>
		__ticks = 1;
    5c6e:	fe 01       	movw	r30, r28
    5c70:	ed 57       	subi	r30, 0x7D	; 125
    5c72:	ff 4f       	sbci	r31, 0xFF	; 255
    5c74:	81 e0       	ldi	r24, 0x01	; 1
    5c76:	90 e0       	ldi	r25, 0x00	; 0
    5c78:	91 83       	std	Z+1, r25	; 0x01
    5c7a:	80 83       	st	Z, r24
    5c7c:	64 c0       	rjmp	.+200    	; 0x5d46 <main+0x42d6>
	else if (__tmp > 65535)
    5c7e:	fe 01       	movw	r30, r28
    5c80:	eb 57       	subi	r30, 0x7B	; 123
    5c82:	ff 4f       	sbci	r31, 0xFF	; 255
    5c84:	60 81       	ld	r22, Z
    5c86:	71 81       	ldd	r23, Z+1	; 0x01
    5c88:	82 81       	ldd	r24, Z+2	; 0x02
    5c8a:	93 81       	ldd	r25, Z+3	; 0x03
    5c8c:	20 e0       	ldi	r18, 0x00	; 0
    5c8e:	3f ef       	ldi	r19, 0xFF	; 255
    5c90:	4f e7       	ldi	r20, 0x7F	; 127
    5c92:	57 e4       	ldi	r21, 0x47	; 71
    5c94:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5c98:	18 16       	cp	r1, r24
    5c9a:	0c f0       	brlt	.+2      	; 0x5c9e <main+0x422e>
    5c9c:	43 c0       	rjmp	.+134    	; 0x5d24 <main+0x42b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c9e:	fe 01       	movw	r30, r28
    5ca0:	e7 57       	subi	r30, 0x77	; 119
    5ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    5ca4:	60 81       	ld	r22, Z
    5ca6:	71 81       	ldd	r23, Z+1	; 0x01
    5ca8:	82 81       	ldd	r24, Z+2	; 0x02
    5caa:	93 81       	ldd	r25, Z+3	; 0x03
    5cac:	20 e0       	ldi	r18, 0x00	; 0
    5cae:	30 e0       	ldi	r19, 0x00	; 0
    5cb0:	40 e2       	ldi	r20, 0x20	; 32
    5cb2:	51 e4       	ldi	r21, 0x41	; 65
    5cb4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5cb8:	dc 01       	movw	r26, r24
    5cba:	cb 01       	movw	r24, r22
    5cbc:	8e 01       	movw	r16, r28
    5cbe:	0d 57       	subi	r16, 0x7D	; 125
    5cc0:	1f 4f       	sbci	r17, 0xFF	; 255
    5cc2:	bc 01       	movw	r22, r24
    5cc4:	cd 01       	movw	r24, r26
    5cc6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5cca:	dc 01       	movw	r26, r24
    5ccc:	cb 01       	movw	r24, r22
    5cce:	f8 01       	movw	r30, r16
    5cd0:	91 83       	std	Z+1, r25	; 0x01
    5cd2:	80 83       	st	Z, r24
    5cd4:	1f c0       	rjmp	.+62     	; 0x5d14 <main+0x42a4>
    5cd6:	fe 01       	movw	r30, r28
    5cd8:	ef 57       	subi	r30, 0x7F	; 127
    5cda:	ff 4f       	sbci	r31, 0xFF	; 255
    5cdc:	88 ec       	ldi	r24, 0xC8	; 200
    5cde:	90 e0       	ldi	r25, 0x00	; 0
    5ce0:	91 83       	std	Z+1, r25	; 0x01
    5ce2:	80 83       	st	Z, r24
    5ce4:	fe 01       	movw	r30, r28
    5ce6:	ef 57       	subi	r30, 0x7F	; 127
    5ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    5cea:	80 81       	ld	r24, Z
    5cec:	91 81       	ldd	r25, Z+1	; 0x01
    5cee:	01 97       	sbiw	r24, 0x01	; 1
    5cf0:	f1 f7       	brne	.-4      	; 0x5cee <main+0x427e>
    5cf2:	fe 01       	movw	r30, r28
    5cf4:	ef 57       	subi	r30, 0x7F	; 127
    5cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    5cf8:	91 83       	std	Z+1, r25	; 0x01
    5cfa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cfc:	de 01       	movw	r26, r28
    5cfe:	ad 57       	subi	r26, 0x7D	; 125
    5d00:	bf 4f       	sbci	r27, 0xFF	; 255
    5d02:	fe 01       	movw	r30, r28
    5d04:	ed 57       	subi	r30, 0x7D	; 125
    5d06:	ff 4f       	sbci	r31, 0xFF	; 255
    5d08:	80 81       	ld	r24, Z
    5d0a:	91 81       	ldd	r25, Z+1	; 0x01
    5d0c:	01 97       	sbiw	r24, 0x01	; 1
    5d0e:	11 96       	adiw	r26, 0x01	; 1
    5d10:	9c 93       	st	X, r25
    5d12:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5d14:	fe 01       	movw	r30, r28
    5d16:	ed 57       	subi	r30, 0x7D	; 125
    5d18:	ff 4f       	sbci	r31, 0xFF	; 255
    5d1a:	80 81       	ld	r24, Z
    5d1c:	91 81       	ldd	r25, Z+1	; 0x01
    5d1e:	00 97       	sbiw	r24, 0x00	; 0
    5d20:	d1 f6       	brne	.-76     	; 0x5cd6 <main+0x4266>
    5d22:	27 c0       	rjmp	.+78     	; 0x5d72 <main+0x4302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5d24:	8e 01       	movw	r16, r28
    5d26:	0d 57       	subi	r16, 0x7D	; 125
    5d28:	1f 4f       	sbci	r17, 0xFF	; 255
    5d2a:	fe 01       	movw	r30, r28
    5d2c:	eb 57       	subi	r30, 0x7B	; 123
    5d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    5d30:	60 81       	ld	r22, Z
    5d32:	71 81       	ldd	r23, Z+1	; 0x01
    5d34:	82 81       	ldd	r24, Z+2	; 0x02
    5d36:	93 81       	ldd	r25, Z+3	; 0x03
    5d38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5d3c:	dc 01       	movw	r26, r24
    5d3e:	cb 01       	movw	r24, r22
    5d40:	f8 01       	movw	r30, r16
    5d42:	91 83       	std	Z+1, r25	; 0x01
    5d44:	80 83       	st	Z, r24
    5d46:	de 01       	movw	r26, r28
    5d48:	a1 58       	subi	r26, 0x81	; 129
    5d4a:	bf 4f       	sbci	r27, 0xFF	; 255
    5d4c:	fe 01       	movw	r30, r28
    5d4e:	ed 57       	subi	r30, 0x7D	; 125
    5d50:	ff 4f       	sbci	r31, 0xFF	; 255
    5d52:	80 81       	ld	r24, Z
    5d54:	91 81       	ldd	r25, Z+1	; 0x01
    5d56:	8d 93       	st	X+, r24
    5d58:	9c 93       	st	X, r25
    5d5a:	fe 01       	movw	r30, r28
    5d5c:	e1 58       	subi	r30, 0x81	; 129
    5d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    5d60:	80 81       	ld	r24, Z
    5d62:	91 81       	ldd	r25, Z+1	; 0x01
    5d64:	01 97       	sbiw	r24, 0x01	; 1
    5d66:	f1 f7       	brne	.-4      	; 0x5d64 <main+0x42f4>
    5d68:	fe 01       	movw	r30, r28
    5d6a:	e1 58       	subi	r30, 0x81	; 129
    5d6c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d6e:	91 83       	std	Z+1, r25	; 0x01
    5d70:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    5d72:	81 e0       	ldi	r24, 0x01	; 1
    5d74:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,7);
    5d78:	ce 01       	movw	r24, r28
    5d7a:	82 5e       	subi	r24, 0xE2	; 226
    5d7c:	9c 4f       	sbci	r25, 0xFC	; 252
    5d7e:	60 e0       	ldi	r22, 0x00	; 0
    5d80:	41 e0       	ldi	r20, 0x01	; 1
    5d82:	27 e0       	ldi	r18, 0x07	; 7
    5d84:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,8);
    5d88:	ce 01       	movw	r24, r28
    5d8a:	8a 5d       	subi	r24, 0xDA	; 218
    5d8c:	9c 4f       	sbci	r25, 0xFC	; 252
    5d8e:	61 e0       	ldi	r22, 0x01	; 1
    5d90:	41 e0       	ldi	r20, 0x01	; 1
    5d92:	28 e0       	ldi	r18, 0x08	; 8
    5d94:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5d98:	fe 01       	movw	r30, r28
    5d9a:	e5 58       	subi	r30, 0x85	; 133
    5d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    5d9e:	80 e0       	ldi	r24, 0x00	; 0
    5da0:	90 e0       	ldi	r25, 0x00	; 0
    5da2:	a0 e2       	ldi	r26, 0x20	; 32
    5da4:	b1 e4       	ldi	r27, 0x41	; 65
    5da6:	80 83       	st	Z, r24
    5da8:	91 83       	std	Z+1, r25	; 0x01
    5daa:	a2 83       	std	Z+2, r26	; 0x02
    5dac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5dae:	8e 01       	movw	r16, r28
    5db0:	09 58       	subi	r16, 0x89	; 137
    5db2:	1f 4f       	sbci	r17, 0xFF	; 255
    5db4:	fe 01       	movw	r30, r28
    5db6:	e5 58       	subi	r30, 0x85	; 133
    5db8:	ff 4f       	sbci	r31, 0xFF	; 255
    5dba:	60 81       	ld	r22, Z
    5dbc:	71 81       	ldd	r23, Z+1	; 0x01
    5dbe:	82 81       	ldd	r24, Z+2	; 0x02
    5dc0:	93 81       	ldd	r25, Z+3	; 0x03
    5dc2:	20 e0       	ldi	r18, 0x00	; 0
    5dc4:	30 e0       	ldi	r19, 0x00	; 0
    5dc6:	4a ef       	ldi	r20, 0xFA	; 250
    5dc8:	54 e4       	ldi	r21, 0x44	; 68
    5dca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5dce:	dc 01       	movw	r26, r24
    5dd0:	cb 01       	movw	r24, r22
    5dd2:	f8 01       	movw	r30, r16
    5dd4:	80 83       	st	Z, r24
    5dd6:	91 83       	std	Z+1, r25	; 0x01
    5dd8:	a2 83       	std	Z+2, r26	; 0x02
    5dda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5ddc:	fe 01       	movw	r30, r28
    5dde:	e9 58       	subi	r30, 0x89	; 137
    5de0:	ff 4f       	sbci	r31, 0xFF	; 255
    5de2:	60 81       	ld	r22, Z
    5de4:	71 81       	ldd	r23, Z+1	; 0x01
    5de6:	82 81       	ldd	r24, Z+2	; 0x02
    5de8:	93 81       	ldd	r25, Z+3	; 0x03
    5dea:	20 e0       	ldi	r18, 0x00	; 0
    5dec:	30 e0       	ldi	r19, 0x00	; 0
    5dee:	40 e8       	ldi	r20, 0x80	; 128
    5df0:	5f e3       	ldi	r21, 0x3F	; 63
    5df2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5df6:	88 23       	and	r24, r24
    5df8:	44 f4       	brge	.+16     	; 0x5e0a <main+0x439a>
		__ticks = 1;
    5dfa:	fe 01       	movw	r30, r28
    5dfc:	eb 58       	subi	r30, 0x8B	; 139
    5dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    5e00:	81 e0       	ldi	r24, 0x01	; 1
    5e02:	90 e0       	ldi	r25, 0x00	; 0
    5e04:	91 83       	std	Z+1, r25	; 0x01
    5e06:	80 83       	st	Z, r24
    5e08:	64 c0       	rjmp	.+200    	; 0x5ed2 <main+0x4462>
	else if (__tmp > 65535)
    5e0a:	fe 01       	movw	r30, r28
    5e0c:	e9 58       	subi	r30, 0x89	; 137
    5e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    5e10:	60 81       	ld	r22, Z
    5e12:	71 81       	ldd	r23, Z+1	; 0x01
    5e14:	82 81       	ldd	r24, Z+2	; 0x02
    5e16:	93 81       	ldd	r25, Z+3	; 0x03
    5e18:	20 e0       	ldi	r18, 0x00	; 0
    5e1a:	3f ef       	ldi	r19, 0xFF	; 255
    5e1c:	4f e7       	ldi	r20, 0x7F	; 127
    5e1e:	57 e4       	ldi	r21, 0x47	; 71
    5e20:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5e24:	18 16       	cp	r1, r24
    5e26:	0c f0       	brlt	.+2      	; 0x5e2a <main+0x43ba>
    5e28:	43 c0       	rjmp	.+134    	; 0x5eb0 <main+0x4440>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e2a:	fe 01       	movw	r30, r28
    5e2c:	e5 58       	subi	r30, 0x85	; 133
    5e2e:	ff 4f       	sbci	r31, 0xFF	; 255
    5e30:	60 81       	ld	r22, Z
    5e32:	71 81       	ldd	r23, Z+1	; 0x01
    5e34:	82 81       	ldd	r24, Z+2	; 0x02
    5e36:	93 81       	ldd	r25, Z+3	; 0x03
    5e38:	20 e0       	ldi	r18, 0x00	; 0
    5e3a:	30 e0       	ldi	r19, 0x00	; 0
    5e3c:	40 e2       	ldi	r20, 0x20	; 32
    5e3e:	51 e4       	ldi	r21, 0x41	; 65
    5e40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5e44:	dc 01       	movw	r26, r24
    5e46:	cb 01       	movw	r24, r22
    5e48:	8e 01       	movw	r16, r28
    5e4a:	0b 58       	subi	r16, 0x8B	; 139
    5e4c:	1f 4f       	sbci	r17, 0xFF	; 255
    5e4e:	bc 01       	movw	r22, r24
    5e50:	cd 01       	movw	r24, r26
    5e52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5e56:	dc 01       	movw	r26, r24
    5e58:	cb 01       	movw	r24, r22
    5e5a:	f8 01       	movw	r30, r16
    5e5c:	91 83       	std	Z+1, r25	; 0x01
    5e5e:	80 83       	st	Z, r24
    5e60:	1f c0       	rjmp	.+62     	; 0x5ea0 <main+0x4430>
    5e62:	fe 01       	movw	r30, r28
    5e64:	ed 58       	subi	r30, 0x8D	; 141
    5e66:	ff 4f       	sbci	r31, 0xFF	; 255
    5e68:	88 ec       	ldi	r24, 0xC8	; 200
    5e6a:	90 e0       	ldi	r25, 0x00	; 0
    5e6c:	91 83       	std	Z+1, r25	; 0x01
    5e6e:	80 83       	st	Z, r24
    5e70:	fe 01       	movw	r30, r28
    5e72:	ed 58       	subi	r30, 0x8D	; 141
    5e74:	ff 4f       	sbci	r31, 0xFF	; 255
    5e76:	80 81       	ld	r24, Z
    5e78:	91 81       	ldd	r25, Z+1	; 0x01
    5e7a:	01 97       	sbiw	r24, 0x01	; 1
    5e7c:	f1 f7       	brne	.-4      	; 0x5e7a <main+0x440a>
    5e7e:	fe 01       	movw	r30, r28
    5e80:	ed 58       	subi	r30, 0x8D	; 141
    5e82:	ff 4f       	sbci	r31, 0xFF	; 255
    5e84:	91 83       	std	Z+1, r25	; 0x01
    5e86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5e88:	de 01       	movw	r26, r28
    5e8a:	ab 58       	subi	r26, 0x8B	; 139
    5e8c:	bf 4f       	sbci	r27, 0xFF	; 255
    5e8e:	fe 01       	movw	r30, r28
    5e90:	eb 58       	subi	r30, 0x8B	; 139
    5e92:	ff 4f       	sbci	r31, 0xFF	; 255
    5e94:	80 81       	ld	r24, Z
    5e96:	91 81       	ldd	r25, Z+1	; 0x01
    5e98:	01 97       	sbiw	r24, 0x01	; 1
    5e9a:	11 96       	adiw	r26, 0x01	; 1
    5e9c:	9c 93       	st	X, r25
    5e9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ea0:	fe 01       	movw	r30, r28
    5ea2:	eb 58       	subi	r30, 0x8B	; 139
    5ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    5ea6:	80 81       	ld	r24, Z
    5ea8:	91 81       	ldd	r25, Z+1	; 0x01
    5eaa:	00 97       	sbiw	r24, 0x00	; 0
    5eac:	d1 f6       	brne	.-76     	; 0x5e62 <main+0x43f2>
    5eae:	27 c0       	rjmp	.+78     	; 0x5efe <main+0x448e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5eb0:	8e 01       	movw	r16, r28
    5eb2:	0b 58       	subi	r16, 0x8B	; 139
    5eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    5eb6:	fe 01       	movw	r30, r28
    5eb8:	e9 58       	subi	r30, 0x89	; 137
    5eba:	ff 4f       	sbci	r31, 0xFF	; 255
    5ebc:	60 81       	ld	r22, Z
    5ebe:	71 81       	ldd	r23, Z+1	; 0x01
    5ec0:	82 81       	ldd	r24, Z+2	; 0x02
    5ec2:	93 81       	ldd	r25, Z+3	; 0x03
    5ec4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5ec8:	dc 01       	movw	r26, r24
    5eca:	cb 01       	movw	r24, r22
    5ecc:	f8 01       	movw	r30, r16
    5ece:	91 83       	std	Z+1, r25	; 0x01
    5ed0:	80 83       	st	Z, r24
    5ed2:	de 01       	movw	r26, r28
    5ed4:	af 58       	subi	r26, 0x8F	; 143
    5ed6:	bf 4f       	sbci	r27, 0xFF	; 255
    5ed8:	fe 01       	movw	r30, r28
    5eda:	eb 58       	subi	r30, 0x8B	; 139
    5edc:	ff 4f       	sbci	r31, 0xFF	; 255
    5ede:	80 81       	ld	r24, Z
    5ee0:	91 81       	ldd	r25, Z+1	; 0x01
    5ee2:	8d 93       	st	X+, r24
    5ee4:	9c 93       	st	X, r25
    5ee6:	fe 01       	movw	r30, r28
    5ee8:	ef 58       	subi	r30, 0x8F	; 143
    5eea:	ff 4f       	sbci	r31, 0xFF	; 255
    5eec:	80 81       	ld	r24, Z
    5eee:	91 81       	ldd	r25, Z+1	; 0x01
    5ef0:	01 97       	sbiw	r24, 0x01	; 1
    5ef2:	f1 f7       	brne	.-4      	; 0x5ef0 <main+0x4480>
    5ef4:	fe 01       	movw	r30, r28
    5ef6:	ef 58       	subi	r30, 0x8F	; 143
    5ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    5efa:	91 83       	std	Z+1, r25	; 0x01
    5efc:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    5efe:	81 e0       	ldi	r24, 0x01	; 1
    5f00:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,0,8);
    5f04:	ce 01       	movw	r24, r28
    5f06:	8a 50       	subi	r24, 0x0A	; 10
    5f08:	9d 4f       	sbci	r25, 0xFD	; 253
    5f0a:	60 e0       	ldi	r22, 0x00	; 0
    5f0c:	40 e0       	ldi	r20, 0x00	; 0
    5f0e:	28 e0       	ldi	r18, 0x08	; 8
    5f10:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,8);
    5f14:	ce 01       	movw	r24, r28
    5f16:	8a 5d       	subi	r24, 0xDA	; 218
    5f18:	9c 4f       	sbci	r25, 0xFC	; 252
    5f1a:	61 e0       	ldi	r22, 0x01	; 1
    5f1c:	41 e0       	ldi	r20, 0x01	; 1
    5f1e:	28 e0       	ldi	r18, 0x08	; 8
    5f20:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    5f24:	fe 01       	movw	r30, r28
    5f26:	e3 59       	subi	r30, 0x93	; 147
    5f28:	ff 4f       	sbci	r31, 0xFF	; 255
    5f2a:	80 e0       	ldi	r24, 0x00	; 0
    5f2c:	90 e0       	ldi	r25, 0x00	; 0
    5f2e:	a0 e2       	ldi	r26, 0x20	; 32
    5f30:	b1 e4       	ldi	r27, 0x41	; 65
    5f32:	80 83       	st	Z, r24
    5f34:	91 83       	std	Z+1, r25	; 0x01
    5f36:	a2 83       	std	Z+2, r26	; 0x02
    5f38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5f3a:	8e 01       	movw	r16, r28
    5f3c:	07 59       	subi	r16, 0x97	; 151
    5f3e:	1f 4f       	sbci	r17, 0xFF	; 255
    5f40:	fe 01       	movw	r30, r28
    5f42:	e3 59       	subi	r30, 0x93	; 147
    5f44:	ff 4f       	sbci	r31, 0xFF	; 255
    5f46:	60 81       	ld	r22, Z
    5f48:	71 81       	ldd	r23, Z+1	; 0x01
    5f4a:	82 81       	ldd	r24, Z+2	; 0x02
    5f4c:	93 81       	ldd	r25, Z+3	; 0x03
    5f4e:	20 e0       	ldi	r18, 0x00	; 0
    5f50:	30 e0       	ldi	r19, 0x00	; 0
    5f52:	4a ef       	ldi	r20, 0xFA	; 250
    5f54:	54 e4       	ldi	r21, 0x44	; 68
    5f56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5f5a:	dc 01       	movw	r26, r24
    5f5c:	cb 01       	movw	r24, r22
    5f5e:	f8 01       	movw	r30, r16
    5f60:	80 83       	st	Z, r24
    5f62:	91 83       	std	Z+1, r25	; 0x01
    5f64:	a2 83       	std	Z+2, r26	; 0x02
    5f66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5f68:	fe 01       	movw	r30, r28
    5f6a:	e7 59       	subi	r30, 0x97	; 151
    5f6c:	ff 4f       	sbci	r31, 0xFF	; 255
    5f6e:	60 81       	ld	r22, Z
    5f70:	71 81       	ldd	r23, Z+1	; 0x01
    5f72:	82 81       	ldd	r24, Z+2	; 0x02
    5f74:	93 81       	ldd	r25, Z+3	; 0x03
    5f76:	20 e0       	ldi	r18, 0x00	; 0
    5f78:	30 e0       	ldi	r19, 0x00	; 0
    5f7a:	40 e8       	ldi	r20, 0x80	; 128
    5f7c:	5f e3       	ldi	r21, 0x3F	; 63
    5f7e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5f82:	88 23       	and	r24, r24
    5f84:	44 f4       	brge	.+16     	; 0x5f96 <main+0x4526>
		__ticks = 1;
    5f86:	fe 01       	movw	r30, r28
    5f88:	e9 59       	subi	r30, 0x99	; 153
    5f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    5f8c:	81 e0       	ldi	r24, 0x01	; 1
    5f8e:	90 e0       	ldi	r25, 0x00	; 0
    5f90:	91 83       	std	Z+1, r25	; 0x01
    5f92:	80 83       	st	Z, r24
    5f94:	64 c0       	rjmp	.+200    	; 0x605e <main+0x45ee>
	else if (__tmp > 65535)
    5f96:	fe 01       	movw	r30, r28
    5f98:	e7 59       	subi	r30, 0x97	; 151
    5f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    5f9c:	60 81       	ld	r22, Z
    5f9e:	71 81       	ldd	r23, Z+1	; 0x01
    5fa0:	82 81       	ldd	r24, Z+2	; 0x02
    5fa2:	93 81       	ldd	r25, Z+3	; 0x03
    5fa4:	20 e0       	ldi	r18, 0x00	; 0
    5fa6:	3f ef       	ldi	r19, 0xFF	; 255
    5fa8:	4f e7       	ldi	r20, 0x7F	; 127
    5faa:	57 e4       	ldi	r21, 0x47	; 71
    5fac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5fb0:	18 16       	cp	r1, r24
    5fb2:	0c f0       	brlt	.+2      	; 0x5fb6 <main+0x4546>
    5fb4:	43 c0       	rjmp	.+134    	; 0x603c <main+0x45cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5fb6:	fe 01       	movw	r30, r28
    5fb8:	e3 59       	subi	r30, 0x93	; 147
    5fba:	ff 4f       	sbci	r31, 0xFF	; 255
    5fbc:	60 81       	ld	r22, Z
    5fbe:	71 81       	ldd	r23, Z+1	; 0x01
    5fc0:	82 81       	ldd	r24, Z+2	; 0x02
    5fc2:	93 81       	ldd	r25, Z+3	; 0x03
    5fc4:	20 e0       	ldi	r18, 0x00	; 0
    5fc6:	30 e0       	ldi	r19, 0x00	; 0
    5fc8:	40 e2       	ldi	r20, 0x20	; 32
    5fca:	51 e4       	ldi	r21, 0x41	; 65
    5fcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5fd0:	dc 01       	movw	r26, r24
    5fd2:	cb 01       	movw	r24, r22
    5fd4:	8e 01       	movw	r16, r28
    5fd6:	09 59       	subi	r16, 0x99	; 153
    5fd8:	1f 4f       	sbci	r17, 0xFF	; 255
    5fda:	bc 01       	movw	r22, r24
    5fdc:	cd 01       	movw	r24, r26
    5fde:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5fe2:	dc 01       	movw	r26, r24
    5fe4:	cb 01       	movw	r24, r22
    5fe6:	f8 01       	movw	r30, r16
    5fe8:	91 83       	std	Z+1, r25	; 0x01
    5fea:	80 83       	st	Z, r24
    5fec:	1f c0       	rjmp	.+62     	; 0x602c <main+0x45bc>
    5fee:	fe 01       	movw	r30, r28
    5ff0:	eb 59       	subi	r30, 0x9B	; 155
    5ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    5ff4:	88 ec       	ldi	r24, 0xC8	; 200
    5ff6:	90 e0       	ldi	r25, 0x00	; 0
    5ff8:	91 83       	std	Z+1, r25	; 0x01
    5ffa:	80 83       	st	Z, r24
    5ffc:	fe 01       	movw	r30, r28
    5ffe:	eb 59       	subi	r30, 0x9B	; 155
    6000:	ff 4f       	sbci	r31, 0xFF	; 255
    6002:	80 81       	ld	r24, Z
    6004:	91 81       	ldd	r25, Z+1	; 0x01
    6006:	01 97       	sbiw	r24, 0x01	; 1
    6008:	f1 f7       	brne	.-4      	; 0x6006 <main+0x4596>
    600a:	fe 01       	movw	r30, r28
    600c:	eb 59       	subi	r30, 0x9B	; 155
    600e:	ff 4f       	sbci	r31, 0xFF	; 255
    6010:	91 83       	std	Z+1, r25	; 0x01
    6012:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6014:	de 01       	movw	r26, r28
    6016:	a9 59       	subi	r26, 0x99	; 153
    6018:	bf 4f       	sbci	r27, 0xFF	; 255
    601a:	fe 01       	movw	r30, r28
    601c:	e9 59       	subi	r30, 0x99	; 153
    601e:	ff 4f       	sbci	r31, 0xFF	; 255
    6020:	80 81       	ld	r24, Z
    6022:	91 81       	ldd	r25, Z+1	; 0x01
    6024:	01 97       	sbiw	r24, 0x01	; 1
    6026:	11 96       	adiw	r26, 0x01	; 1
    6028:	9c 93       	st	X, r25
    602a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    602c:	fe 01       	movw	r30, r28
    602e:	e9 59       	subi	r30, 0x99	; 153
    6030:	ff 4f       	sbci	r31, 0xFF	; 255
    6032:	80 81       	ld	r24, Z
    6034:	91 81       	ldd	r25, Z+1	; 0x01
    6036:	00 97       	sbiw	r24, 0x00	; 0
    6038:	d1 f6       	brne	.-76     	; 0x5fee <main+0x457e>
    603a:	27 c0       	rjmp	.+78     	; 0x608a <main+0x461a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    603c:	8e 01       	movw	r16, r28
    603e:	09 59       	subi	r16, 0x99	; 153
    6040:	1f 4f       	sbci	r17, 0xFF	; 255
    6042:	fe 01       	movw	r30, r28
    6044:	e7 59       	subi	r30, 0x97	; 151
    6046:	ff 4f       	sbci	r31, 0xFF	; 255
    6048:	60 81       	ld	r22, Z
    604a:	71 81       	ldd	r23, Z+1	; 0x01
    604c:	82 81       	ldd	r24, Z+2	; 0x02
    604e:	93 81       	ldd	r25, Z+3	; 0x03
    6050:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6054:	dc 01       	movw	r26, r24
    6056:	cb 01       	movw	r24, r22
    6058:	f8 01       	movw	r30, r16
    605a:	91 83       	std	Z+1, r25	; 0x01
    605c:	80 83       	st	Z, r24
    605e:	de 01       	movw	r26, r28
    6060:	ad 59       	subi	r26, 0x9D	; 157
    6062:	bf 4f       	sbci	r27, 0xFF	; 255
    6064:	fe 01       	movw	r30, r28
    6066:	e9 59       	subi	r30, 0x99	; 153
    6068:	ff 4f       	sbci	r31, 0xFF	; 255
    606a:	80 81       	ld	r24, Z
    606c:	91 81       	ldd	r25, Z+1	; 0x01
    606e:	8d 93       	st	X+, r24
    6070:	9c 93       	st	X, r25
    6072:	fe 01       	movw	r30, r28
    6074:	ed 59       	subi	r30, 0x9D	; 157
    6076:	ff 4f       	sbci	r31, 0xFF	; 255
    6078:	80 81       	ld	r24, Z
    607a:	91 81       	ldd	r25, Z+1	; 0x01
    607c:	01 97       	sbiw	r24, 0x01	; 1
    607e:	f1 f7       	brne	.-4      	; 0x607c <main+0x460c>
    6080:	fe 01       	movw	r30, r28
    6082:	ed 59       	subi	r30, 0x9D	; 157
    6084:	ff 4f       	sbci	r31, 0xFF	; 255
    6086:	91 83       	std	Z+1, r25	; 0x01
    6088:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    608a:	81 e0       	ldi	r24, 0x01	; 1
    608c:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,9);
    6090:	ce 01       	movw	r24, r28
    6092:	82 5e       	subi	r24, 0xE2	; 226
    6094:	9c 4f       	sbci	r25, 0xFC	; 252
    6096:	60 e0       	ldi	r22, 0x00	; 0
    6098:	41 e0       	ldi	r20, 0x01	; 1
    609a:	29 e0       	ldi	r18, 0x09	; 9
    609c:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,7);
    60a0:	ce 01       	movw	r24, r28
    60a2:	8a 5d       	subi	r24, 0xDA	; 218
    60a4:	9c 4f       	sbci	r25, 0xFC	; 252
    60a6:	61 e0       	ldi	r22, 0x01	; 1
    60a8:	41 e0       	ldi	r20, 0x01	; 1
    60aa:	27 e0       	ldi	r18, 0x07	; 7
    60ac:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    60b0:	fe 01       	movw	r30, r28
    60b2:	e1 5a       	subi	r30, 0xA1	; 161
    60b4:	ff 4f       	sbci	r31, 0xFF	; 255
    60b6:	80 e0       	ldi	r24, 0x00	; 0
    60b8:	90 e0       	ldi	r25, 0x00	; 0
    60ba:	a0 e2       	ldi	r26, 0x20	; 32
    60bc:	b1 e4       	ldi	r27, 0x41	; 65
    60be:	80 83       	st	Z, r24
    60c0:	91 83       	std	Z+1, r25	; 0x01
    60c2:	a2 83       	std	Z+2, r26	; 0x02
    60c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    60c6:	8e 01       	movw	r16, r28
    60c8:	05 5a       	subi	r16, 0xA5	; 165
    60ca:	1f 4f       	sbci	r17, 0xFF	; 255
    60cc:	fe 01       	movw	r30, r28
    60ce:	e1 5a       	subi	r30, 0xA1	; 161
    60d0:	ff 4f       	sbci	r31, 0xFF	; 255
    60d2:	60 81       	ld	r22, Z
    60d4:	71 81       	ldd	r23, Z+1	; 0x01
    60d6:	82 81       	ldd	r24, Z+2	; 0x02
    60d8:	93 81       	ldd	r25, Z+3	; 0x03
    60da:	20 e0       	ldi	r18, 0x00	; 0
    60dc:	30 e0       	ldi	r19, 0x00	; 0
    60de:	4a ef       	ldi	r20, 0xFA	; 250
    60e0:	54 e4       	ldi	r21, 0x44	; 68
    60e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    60e6:	dc 01       	movw	r26, r24
    60e8:	cb 01       	movw	r24, r22
    60ea:	f8 01       	movw	r30, r16
    60ec:	80 83       	st	Z, r24
    60ee:	91 83       	std	Z+1, r25	; 0x01
    60f0:	a2 83       	std	Z+2, r26	; 0x02
    60f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    60f4:	fe 01       	movw	r30, r28
    60f6:	e5 5a       	subi	r30, 0xA5	; 165
    60f8:	ff 4f       	sbci	r31, 0xFF	; 255
    60fa:	60 81       	ld	r22, Z
    60fc:	71 81       	ldd	r23, Z+1	; 0x01
    60fe:	82 81       	ldd	r24, Z+2	; 0x02
    6100:	93 81       	ldd	r25, Z+3	; 0x03
    6102:	20 e0       	ldi	r18, 0x00	; 0
    6104:	30 e0       	ldi	r19, 0x00	; 0
    6106:	40 e8       	ldi	r20, 0x80	; 128
    6108:	5f e3       	ldi	r21, 0x3F	; 63
    610a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    610e:	88 23       	and	r24, r24
    6110:	44 f4       	brge	.+16     	; 0x6122 <main+0x46b2>
		__ticks = 1;
    6112:	fe 01       	movw	r30, r28
    6114:	e7 5a       	subi	r30, 0xA7	; 167
    6116:	ff 4f       	sbci	r31, 0xFF	; 255
    6118:	81 e0       	ldi	r24, 0x01	; 1
    611a:	90 e0       	ldi	r25, 0x00	; 0
    611c:	91 83       	std	Z+1, r25	; 0x01
    611e:	80 83       	st	Z, r24
    6120:	64 c0       	rjmp	.+200    	; 0x61ea <main+0x477a>
	else if (__tmp > 65535)
    6122:	fe 01       	movw	r30, r28
    6124:	e5 5a       	subi	r30, 0xA5	; 165
    6126:	ff 4f       	sbci	r31, 0xFF	; 255
    6128:	60 81       	ld	r22, Z
    612a:	71 81       	ldd	r23, Z+1	; 0x01
    612c:	82 81       	ldd	r24, Z+2	; 0x02
    612e:	93 81       	ldd	r25, Z+3	; 0x03
    6130:	20 e0       	ldi	r18, 0x00	; 0
    6132:	3f ef       	ldi	r19, 0xFF	; 255
    6134:	4f e7       	ldi	r20, 0x7F	; 127
    6136:	57 e4       	ldi	r21, 0x47	; 71
    6138:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    613c:	18 16       	cp	r1, r24
    613e:	0c f0       	brlt	.+2      	; 0x6142 <main+0x46d2>
    6140:	43 c0       	rjmp	.+134    	; 0x61c8 <main+0x4758>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6142:	fe 01       	movw	r30, r28
    6144:	e1 5a       	subi	r30, 0xA1	; 161
    6146:	ff 4f       	sbci	r31, 0xFF	; 255
    6148:	60 81       	ld	r22, Z
    614a:	71 81       	ldd	r23, Z+1	; 0x01
    614c:	82 81       	ldd	r24, Z+2	; 0x02
    614e:	93 81       	ldd	r25, Z+3	; 0x03
    6150:	20 e0       	ldi	r18, 0x00	; 0
    6152:	30 e0       	ldi	r19, 0x00	; 0
    6154:	40 e2       	ldi	r20, 0x20	; 32
    6156:	51 e4       	ldi	r21, 0x41	; 65
    6158:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    615c:	dc 01       	movw	r26, r24
    615e:	cb 01       	movw	r24, r22
    6160:	8e 01       	movw	r16, r28
    6162:	07 5a       	subi	r16, 0xA7	; 167
    6164:	1f 4f       	sbci	r17, 0xFF	; 255
    6166:	bc 01       	movw	r22, r24
    6168:	cd 01       	movw	r24, r26
    616a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    616e:	dc 01       	movw	r26, r24
    6170:	cb 01       	movw	r24, r22
    6172:	f8 01       	movw	r30, r16
    6174:	91 83       	std	Z+1, r25	; 0x01
    6176:	80 83       	st	Z, r24
    6178:	1f c0       	rjmp	.+62     	; 0x61b8 <main+0x4748>
    617a:	fe 01       	movw	r30, r28
    617c:	e9 5a       	subi	r30, 0xA9	; 169
    617e:	ff 4f       	sbci	r31, 0xFF	; 255
    6180:	88 ec       	ldi	r24, 0xC8	; 200
    6182:	90 e0       	ldi	r25, 0x00	; 0
    6184:	91 83       	std	Z+1, r25	; 0x01
    6186:	80 83       	st	Z, r24
    6188:	fe 01       	movw	r30, r28
    618a:	e9 5a       	subi	r30, 0xA9	; 169
    618c:	ff 4f       	sbci	r31, 0xFF	; 255
    618e:	80 81       	ld	r24, Z
    6190:	91 81       	ldd	r25, Z+1	; 0x01
    6192:	01 97       	sbiw	r24, 0x01	; 1
    6194:	f1 f7       	brne	.-4      	; 0x6192 <main+0x4722>
    6196:	fe 01       	movw	r30, r28
    6198:	e9 5a       	subi	r30, 0xA9	; 169
    619a:	ff 4f       	sbci	r31, 0xFF	; 255
    619c:	91 83       	std	Z+1, r25	; 0x01
    619e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    61a0:	de 01       	movw	r26, r28
    61a2:	a7 5a       	subi	r26, 0xA7	; 167
    61a4:	bf 4f       	sbci	r27, 0xFF	; 255
    61a6:	fe 01       	movw	r30, r28
    61a8:	e7 5a       	subi	r30, 0xA7	; 167
    61aa:	ff 4f       	sbci	r31, 0xFF	; 255
    61ac:	80 81       	ld	r24, Z
    61ae:	91 81       	ldd	r25, Z+1	; 0x01
    61b0:	01 97       	sbiw	r24, 0x01	; 1
    61b2:	11 96       	adiw	r26, 0x01	; 1
    61b4:	9c 93       	st	X, r25
    61b6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    61b8:	fe 01       	movw	r30, r28
    61ba:	e7 5a       	subi	r30, 0xA7	; 167
    61bc:	ff 4f       	sbci	r31, 0xFF	; 255
    61be:	80 81       	ld	r24, Z
    61c0:	91 81       	ldd	r25, Z+1	; 0x01
    61c2:	00 97       	sbiw	r24, 0x00	; 0
    61c4:	d1 f6       	brne	.-76     	; 0x617a <main+0x470a>
    61c6:	27 c0       	rjmp	.+78     	; 0x6216 <main+0x47a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    61c8:	8e 01       	movw	r16, r28
    61ca:	07 5a       	subi	r16, 0xA7	; 167
    61cc:	1f 4f       	sbci	r17, 0xFF	; 255
    61ce:	fe 01       	movw	r30, r28
    61d0:	e5 5a       	subi	r30, 0xA5	; 165
    61d2:	ff 4f       	sbci	r31, 0xFF	; 255
    61d4:	60 81       	ld	r22, Z
    61d6:	71 81       	ldd	r23, Z+1	; 0x01
    61d8:	82 81       	ldd	r24, Z+2	; 0x02
    61da:	93 81       	ldd	r25, Z+3	; 0x03
    61dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    61e0:	dc 01       	movw	r26, r24
    61e2:	cb 01       	movw	r24, r22
    61e4:	f8 01       	movw	r30, r16
    61e6:	91 83       	std	Z+1, r25	; 0x01
    61e8:	80 83       	st	Z, r24
    61ea:	de 01       	movw	r26, r28
    61ec:	ab 5a       	subi	r26, 0xAB	; 171
    61ee:	bf 4f       	sbci	r27, 0xFF	; 255
    61f0:	fe 01       	movw	r30, r28
    61f2:	e7 5a       	subi	r30, 0xA7	; 167
    61f4:	ff 4f       	sbci	r31, 0xFF	; 255
    61f6:	80 81       	ld	r24, Z
    61f8:	91 81       	ldd	r25, Z+1	; 0x01
    61fa:	8d 93       	st	X+, r24
    61fc:	9c 93       	st	X, r25
    61fe:	fe 01       	movw	r30, r28
    6200:	eb 5a       	subi	r30, 0xAB	; 171
    6202:	ff 4f       	sbci	r31, 0xFF	; 255
    6204:	80 81       	ld	r24, Z
    6206:	91 81       	ldd	r25, Z+1	; 0x01
    6208:	01 97       	sbiw	r24, 0x01	; 1
    620a:	f1 f7       	brne	.-4      	; 0x6208 <main+0x4798>
    620c:	fe 01       	movw	r30, r28
    620e:	eb 5a       	subi	r30, 0xAB	; 171
    6210:	ff 4f       	sbci	r31, 0xFF	; 255
    6212:	91 83       	std	Z+1, r25	; 0x01
    6214:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    6216:	81 e0       	ldi	r24, 0x01	; 1
    6218:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern2,0,1,10);
    621c:	ce 01       	movw	r24, r28
    621e:	8a 50       	subi	r24, 0x0A	; 10
    6220:	9d 4f       	sbci	r25, 0xFD	; 253
    6222:	60 e0       	ldi	r22, 0x00	; 0
    6224:	41 e0       	ldi	r20, 0x01	; 1
    6226:	2a e0       	ldi	r18, 0x0A	; 10
    6228:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,6);
    622c:	ce 01       	movw	r24, r28
    622e:	8a 5d       	subi	r24, 0xDA	; 218
    6230:	9c 4f       	sbci	r25, 0xFC	; 252
    6232:	61 e0       	ldi	r22, 0x01	; 1
    6234:	41 e0       	ldi	r20, 0x01	; 1
    6236:	26 e0       	ldi	r18, 0x06	; 6
    6238:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    623c:	fe 01       	movw	r30, r28
    623e:	ef 5a       	subi	r30, 0xAF	; 175
    6240:	ff 4f       	sbci	r31, 0xFF	; 255
    6242:	80 e0       	ldi	r24, 0x00	; 0
    6244:	90 e0       	ldi	r25, 0x00	; 0
    6246:	a0 e2       	ldi	r26, 0x20	; 32
    6248:	b1 e4       	ldi	r27, 0x41	; 65
    624a:	80 83       	st	Z, r24
    624c:	91 83       	std	Z+1, r25	; 0x01
    624e:	a2 83       	std	Z+2, r26	; 0x02
    6250:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6252:	8e 01       	movw	r16, r28
    6254:	03 5b       	subi	r16, 0xB3	; 179
    6256:	1f 4f       	sbci	r17, 0xFF	; 255
    6258:	fe 01       	movw	r30, r28
    625a:	ef 5a       	subi	r30, 0xAF	; 175
    625c:	ff 4f       	sbci	r31, 0xFF	; 255
    625e:	60 81       	ld	r22, Z
    6260:	71 81       	ldd	r23, Z+1	; 0x01
    6262:	82 81       	ldd	r24, Z+2	; 0x02
    6264:	93 81       	ldd	r25, Z+3	; 0x03
    6266:	20 e0       	ldi	r18, 0x00	; 0
    6268:	30 e0       	ldi	r19, 0x00	; 0
    626a:	4a ef       	ldi	r20, 0xFA	; 250
    626c:	54 e4       	ldi	r21, 0x44	; 68
    626e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6272:	dc 01       	movw	r26, r24
    6274:	cb 01       	movw	r24, r22
    6276:	f8 01       	movw	r30, r16
    6278:	80 83       	st	Z, r24
    627a:	91 83       	std	Z+1, r25	; 0x01
    627c:	a2 83       	std	Z+2, r26	; 0x02
    627e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6280:	fe 01       	movw	r30, r28
    6282:	e3 5b       	subi	r30, 0xB3	; 179
    6284:	ff 4f       	sbci	r31, 0xFF	; 255
    6286:	60 81       	ld	r22, Z
    6288:	71 81       	ldd	r23, Z+1	; 0x01
    628a:	82 81       	ldd	r24, Z+2	; 0x02
    628c:	93 81       	ldd	r25, Z+3	; 0x03
    628e:	20 e0       	ldi	r18, 0x00	; 0
    6290:	30 e0       	ldi	r19, 0x00	; 0
    6292:	40 e8       	ldi	r20, 0x80	; 128
    6294:	5f e3       	ldi	r21, 0x3F	; 63
    6296:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    629a:	88 23       	and	r24, r24
    629c:	44 f4       	brge	.+16     	; 0x62ae <main+0x483e>
		__ticks = 1;
    629e:	fe 01       	movw	r30, r28
    62a0:	e5 5b       	subi	r30, 0xB5	; 181
    62a2:	ff 4f       	sbci	r31, 0xFF	; 255
    62a4:	81 e0       	ldi	r24, 0x01	; 1
    62a6:	90 e0       	ldi	r25, 0x00	; 0
    62a8:	91 83       	std	Z+1, r25	; 0x01
    62aa:	80 83       	st	Z, r24
    62ac:	64 c0       	rjmp	.+200    	; 0x6376 <main+0x4906>
	else if (__tmp > 65535)
    62ae:	fe 01       	movw	r30, r28
    62b0:	e3 5b       	subi	r30, 0xB3	; 179
    62b2:	ff 4f       	sbci	r31, 0xFF	; 255
    62b4:	60 81       	ld	r22, Z
    62b6:	71 81       	ldd	r23, Z+1	; 0x01
    62b8:	82 81       	ldd	r24, Z+2	; 0x02
    62ba:	93 81       	ldd	r25, Z+3	; 0x03
    62bc:	20 e0       	ldi	r18, 0x00	; 0
    62be:	3f ef       	ldi	r19, 0xFF	; 255
    62c0:	4f e7       	ldi	r20, 0x7F	; 127
    62c2:	57 e4       	ldi	r21, 0x47	; 71
    62c4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    62c8:	18 16       	cp	r1, r24
    62ca:	0c f0       	brlt	.+2      	; 0x62ce <main+0x485e>
    62cc:	43 c0       	rjmp	.+134    	; 0x6354 <main+0x48e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    62ce:	fe 01       	movw	r30, r28
    62d0:	ef 5a       	subi	r30, 0xAF	; 175
    62d2:	ff 4f       	sbci	r31, 0xFF	; 255
    62d4:	60 81       	ld	r22, Z
    62d6:	71 81       	ldd	r23, Z+1	; 0x01
    62d8:	82 81       	ldd	r24, Z+2	; 0x02
    62da:	93 81       	ldd	r25, Z+3	; 0x03
    62dc:	20 e0       	ldi	r18, 0x00	; 0
    62de:	30 e0       	ldi	r19, 0x00	; 0
    62e0:	40 e2       	ldi	r20, 0x20	; 32
    62e2:	51 e4       	ldi	r21, 0x41	; 65
    62e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    62e8:	dc 01       	movw	r26, r24
    62ea:	cb 01       	movw	r24, r22
    62ec:	8e 01       	movw	r16, r28
    62ee:	05 5b       	subi	r16, 0xB5	; 181
    62f0:	1f 4f       	sbci	r17, 0xFF	; 255
    62f2:	bc 01       	movw	r22, r24
    62f4:	cd 01       	movw	r24, r26
    62f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    62fa:	dc 01       	movw	r26, r24
    62fc:	cb 01       	movw	r24, r22
    62fe:	f8 01       	movw	r30, r16
    6300:	91 83       	std	Z+1, r25	; 0x01
    6302:	80 83       	st	Z, r24
    6304:	1f c0       	rjmp	.+62     	; 0x6344 <main+0x48d4>
    6306:	fe 01       	movw	r30, r28
    6308:	e7 5b       	subi	r30, 0xB7	; 183
    630a:	ff 4f       	sbci	r31, 0xFF	; 255
    630c:	88 ec       	ldi	r24, 0xC8	; 200
    630e:	90 e0       	ldi	r25, 0x00	; 0
    6310:	91 83       	std	Z+1, r25	; 0x01
    6312:	80 83       	st	Z, r24
    6314:	fe 01       	movw	r30, r28
    6316:	e7 5b       	subi	r30, 0xB7	; 183
    6318:	ff 4f       	sbci	r31, 0xFF	; 255
    631a:	80 81       	ld	r24, Z
    631c:	91 81       	ldd	r25, Z+1	; 0x01
    631e:	01 97       	sbiw	r24, 0x01	; 1
    6320:	f1 f7       	brne	.-4      	; 0x631e <main+0x48ae>
    6322:	fe 01       	movw	r30, r28
    6324:	e7 5b       	subi	r30, 0xB7	; 183
    6326:	ff 4f       	sbci	r31, 0xFF	; 255
    6328:	91 83       	std	Z+1, r25	; 0x01
    632a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    632c:	de 01       	movw	r26, r28
    632e:	a5 5b       	subi	r26, 0xB5	; 181
    6330:	bf 4f       	sbci	r27, 0xFF	; 255
    6332:	fe 01       	movw	r30, r28
    6334:	e5 5b       	subi	r30, 0xB5	; 181
    6336:	ff 4f       	sbci	r31, 0xFF	; 255
    6338:	80 81       	ld	r24, Z
    633a:	91 81       	ldd	r25, Z+1	; 0x01
    633c:	01 97       	sbiw	r24, 0x01	; 1
    633e:	11 96       	adiw	r26, 0x01	; 1
    6340:	9c 93       	st	X, r25
    6342:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6344:	fe 01       	movw	r30, r28
    6346:	e5 5b       	subi	r30, 0xB5	; 181
    6348:	ff 4f       	sbci	r31, 0xFF	; 255
    634a:	80 81       	ld	r24, Z
    634c:	91 81       	ldd	r25, Z+1	; 0x01
    634e:	00 97       	sbiw	r24, 0x00	; 0
    6350:	d1 f6       	brne	.-76     	; 0x6306 <main+0x4896>
    6352:	27 c0       	rjmp	.+78     	; 0x63a2 <main+0x4932>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6354:	8e 01       	movw	r16, r28
    6356:	05 5b       	subi	r16, 0xB5	; 181
    6358:	1f 4f       	sbci	r17, 0xFF	; 255
    635a:	fe 01       	movw	r30, r28
    635c:	e3 5b       	subi	r30, 0xB3	; 179
    635e:	ff 4f       	sbci	r31, 0xFF	; 255
    6360:	60 81       	ld	r22, Z
    6362:	71 81       	ldd	r23, Z+1	; 0x01
    6364:	82 81       	ldd	r24, Z+2	; 0x02
    6366:	93 81       	ldd	r25, Z+3	; 0x03
    6368:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    636c:	dc 01       	movw	r26, r24
    636e:	cb 01       	movw	r24, r22
    6370:	f8 01       	movw	r30, r16
    6372:	91 83       	std	Z+1, r25	; 0x01
    6374:	80 83       	st	Z, r24
    6376:	de 01       	movw	r26, r28
    6378:	a9 5b       	subi	r26, 0xB9	; 185
    637a:	bf 4f       	sbci	r27, 0xFF	; 255
    637c:	fe 01       	movw	r30, r28
    637e:	e5 5b       	subi	r30, 0xB5	; 181
    6380:	ff 4f       	sbci	r31, 0xFF	; 255
    6382:	80 81       	ld	r24, Z
    6384:	91 81       	ldd	r25, Z+1	; 0x01
    6386:	8d 93       	st	X+, r24
    6388:	9c 93       	st	X, r25
    638a:	fe 01       	movw	r30, r28
    638c:	e9 5b       	subi	r30, 0xB9	; 185
    638e:	ff 4f       	sbci	r31, 0xFF	; 255
    6390:	80 81       	ld	r24, Z
    6392:	91 81       	ldd	r25, Z+1	; 0x01
    6394:	01 97       	sbiw	r24, 0x01	; 1
    6396:	f1 f7       	brne	.-4      	; 0x6394 <main+0x4924>
    6398:	fe 01       	movw	r30, r28
    639a:	e9 5b       	subi	r30, 0xB9	; 185
    639c:	ff 4f       	sbci	r31, 0xFF	; 255
    639e:	91 83       	std	Z+1, r25	; 0x01
    63a0:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    63a2:	81 e0       	ldi	r24, 0x01	; 1
    63a4:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern7,0,1,11);
    63a8:	ce 01       	movw	r24, r28
    63aa:	82 5e       	subi	r24, 0xE2	; 226
    63ac:	9c 4f       	sbci	r25, 0xFC	; 252
    63ae:	60 e0       	ldi	r22, 0x00	; 0
    63b0:	41 e0       	ldi	r20, 0x01	; 1
    63b2:	2b e0       	ldi	r18, 0x0B	; 11
    63b4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8WriteSpecialCharacter(Pattern8,1,1,5);
    63b8:	ce 01       	movw	r24, r28
    63ba:	8a 5d       	subi	r24, 0xDA	; 218
    63bc:	9c 4f       	sbci	r25, 0xFC	; 252
    63be:	61 e0       	ldi	r22, 0x01	; 1
    63c0:	41 e0       	ldi	r20, 0x01	; 1
    63c2:	25 e0       	ldi	r18, 0x05	; 5
    63c4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    63c8:	fe 01       	movw	r30, r28
    63ca:	ed 5b       	subi	r30, 0xBD	; 189
    63cc:	ff 4f       	sbci	r31, 0xFF	; 255
    63ce:	80 e0       	ldi	r24, 0x00	; 0
    63d0:	90 e0       	ldi	r25, 0x00	; 0
    63d2:	a0 e2       	ldi	r26, 0x20	; 32
    63d4:	b1 e4       	ldi	r27, 0x41	; 65
    63d6:	80 83       	st	Z, r24
    63d8:	91 83       	std	Z+1, r25	; 0x01
    63da:	a2 83       	std	Z+2, r26	; 0x02
    63dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    63de:	8e 01       	movw	r16, r28
    63e0:	01 5c       	subi	r16, 0xC1	; 193
    63e2:	1f 4f       	sbci	r17, 0xFF	; 255
    63e4:	fe 01       	movw	r30, r28
    63e6:	ed 5b       	subi	r30, 0xBD	; 189
    63e8:	ff 4f       	sbci	r31, 0xFF	; 255
    63ea:	60 81       	ld	r22, Z
    63ec:	71 81       	ldd	r23, Z+1	; 0x01
    63ee:	82 81       	ldd	r24, Z+2	; 0x02
    63f0:	93 81       	ldd	r25, Z+3	; 0x03
    63f2:	20 e0       	ldi	r18, 0x00	; 0
    63f4:	30 e0       	ldi	r19, 0x00	; 0
    63f6:	4a ef       	ldi	r20, 0xFA	; 250
    63f8:	54 e4       	ldi	r21, 0x44	; 68
    63fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    63fe:	dc 01       	movw	r26, r24
    6400:	cb 01       	movw	r24, r22
    6402:	f8 01       	movw	r30, r16
    6404:	80 83       	st	Z, r24
    6406:	91 83       	std	Z+1, r25	; 0x01
    6408:	a2 83       	std	Z+2, r26	; 0x02
    640a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    640c:	fe 01       	movw	r30, r28
    640e:	ff 96       	adiw	r30, 0x3f	; 63
    6410:	60 81       	ld	r22, Z
    6412:	71 81       	ldd	r23, Z+1	; 0x01
    6414:	82 81       	ldd	r24, Z+2	; 0x02
    6416:	93 81       	ldd	r25, Z+3	; 0x03
    6418:	20 e0       	ldi	r18, 0x00	; 0
    641a:	30 e0       	ldi	r19, 0x00	; 0
    641c:	40 e8       	ldi	r20, 0x80	; 128
    641e:	5f e3       	ldi	r21, 0x3F	; 63
    6420:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6424:	88 23       	and	r24, r24
    6426:	2c f4       	brge	.+10     	; 0x6432 <main+0x49c2>
		__ticks = 1;
    6428:	81 e0       	ldi	r24, 0x01	; 1
    642a:	90 e0       	ldi	r25, 0x00	; 0
    642c:	9e af       	std	Y+62, r25	; 0x3e
    642e:	8d af       	std	Y+61, r24	; 0x3d
    6430:	46 c0       	rjmp	.+140    	; 0x64be <main+0x4a4e>
	else if (__tmp > 65535)
    6432:	fe 01       	movw	r30, r28
    6434:	ff 96       	adiw	r30, 0x3f	; 63
    6436:	60 81       	ld	r22, Z
    6438:	71 81       	ldd	r23, Z+1	; 0x01
    643a:	82 81       	ldd	r24, Z+2	; 0x02
    643c:	93 81       	ldd	r25, Z+3	; 0x03
    643e:	20 e0       	ldi	r18, 0x00	; 0
    6440:	3f ef       	ldi	r19, 0xFF	; 255
    6442:	4f e7       	ldi	r20, 0x7F	; 127
    6444:	57 e4       	ldi	r21, 0x47	; 71
    6446:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    644a:	18 16       	cp	r1, r24
    644c:	64 f5       	brge	.+88     	; 0x64a6 <main+0x4a36>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    644e:	fe 01       	movw	r30, r28
    6450:	ed 5b       	subi	r30, 0xBD	; 189
    6452:	ff 4f       	sbci	r31, 0xFF	; 255
    6454:	60 81       	ld	r22, Z
    6456:	71 81       	ldd	r23, Z+1	; 0x01
    6458:	82 81       	ldd	r24, Z+2	; 0x02
    645a:	93 81       	ldd	r25, Z+3	; 0x03
    645c:	20 e0       	ldi	r18, 0x00	; 0
    645e:	30 e0       	ldi	r19, 0x00	; 0
    6460:	40 e2       	ldi	r20, 0x20	; 32
    6462:	51 e4       	ldi	r21, 0x41	; 65
    6464:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6468:	dc 01       	movw	r26, r24
    646a:	cb 01       	movw	r24, r22
    646c:	bc 01       	movw	r22, r24
    646e:	cd 01       	movw	r24, r26
    6470:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6474:	dc 01       	movw	r26, r24
    6476:	cb 01       	movw	r24, r22
    6478:	9e af       	std	Y+62, r25	; 0x3e
    647a:	8d af       	std	Y+61, r24	; 0x3d
    647c:	0f c0       	rjmp	.+30     	; 0x649c <main+0x4a2c>
    647e:	88 ec       	ldi	r24, 0xC8	; 200
    6480:	90 e0       	ldi	r25, 0x00	; 0
    6482:	9c af       	std	Y+60, r25	; 0x3c
    6484:	8b af       	std	Y+59, r24	; 0x3b
    6486:	8b ad       	ldd	r24, Y+59	; 0x3b
    6488:	9c ad       	ldd	r25, Y+60	; 0x3c
    648a:	01 97       	sbiw	r24, 0x01	; 1
    648c:	f1 f7       	brne	.-4      	; 0x648a <main+0x4a1a>
    648e:	9c af       	std	Y+60, r25	; 0x3c
    6490:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6492:	8d ad       	ldd	r24, Y+61	; 0x3d
    6494:	9e ad       	ldd	r25, Y+62	; 0x3e
    6496:	01 97       	sbiw	r24, 0x01	; 1
    6498:	9e af       	std	Y+62, r25	; 0x3e
    649a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    649c:	8d ad       	ldd	r24, Y+61	; 0x3d
    649e:	9e ad       	ldd	r25, Y+62	; 0x3e
    64a0:	00 97       	sbiw	r24, 0x00	; 0
    64a2:	69 f7       	brne	.-38     	; 0x647e <main+0x4a0e>
    64a4:	16 c0       	rjmp	.+44     	; 0x64d2 <main+0x4a62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    64a6:	fe 01       	movw	r30, r28
    64a8:	ff 96       	adiw	r30, 0x3f	; 63
    64aa:	60 81       	ld	r22, Z
    64ac:	71 81       	ldd	r23, Z+1	; 0x01
    64ae:	82 81       	ldd	r24, Z+2	; 0x02
    64b0:	93 81       	ldd	r25, Z+3	; 0x03
    64b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    64b6:	dc 01       	movw	r26, r24
    64b8:	cb 01       	movw	r24, r22
    64ba:	9e af       	std	Y+62, r25	; 0x3e
    64bc:	8d af       	std	Y+61, r24	; 0x3d
    64be:	8d ad       	ldd	r24, Y+61	; 0x3d
    64c0:	9e ad       	ldd	r25, Y+62	; 0x3e
    64c2:	9a af       	std	Y+58, r25	; 0x3a
    64c4:	89 af       	std	Y+57, r24	; 0x39
    64c6:	89 ad       	ldd	r24, Y+57	; 0x39
    64c8:	9a ad       	ldd	r25, Y+58	; 0x3a
    64ca:	01 97       	sbiw	r24, 0x01	; 1
    64cc:	f1 f7       	brne	.-4      	; 0x64ca <main+0x4a5a>
    64ce:	9a af       	std	Y+58, r25	; 0x3a
    64d0:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(10);
		CLCD_u8SendCommand(0b00000001);
    64d2:	81 e0       	ldi	r24, 0x01	; 1
    64d4:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8WriteSpecialCharacter(Pattern,1,1,15);
    64d8:	ce 01       	movw	r24, r28
    64da:	82 51       	subi	r24, 0x12	; 18
    64dc:	9d 4f       	sbci	r25, 0xFD	; 253
    64de:	61 e0       	ldi	r22, 0x01	; 1
    64e0:	41 e0       	ldi	r20, 0x01	; 1
    64e2:	2f e0       	ldi	r18, 0x0F	; 15
    64e4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8GoToXY(0,2);
    64e8:	80 e0       	ldi	r24, 0x00	; 0
    64ea:	62 e0       	ldi	r22, 0x02	; 2
    64ec:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(kill);
    64f0:	ce 01       	movw	r24, r28
    64f2:	8a 52       	subi	r24, 0x2A	; 42
    64f4:	9d 4f       	sbci	r25, 0xFD	; 253
    64f6:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8WriteSpecialCharacter(Pattern9,0,1,0);
    64fa:	ce 01       	movw	r24, r28
    64fc:	82 5d       	subi	r24, 0xD2	; 210
    64fe:	9c 4f       	sbci	r25, 0xFC	; 252
    6500:	60 e0       	ldi	r22, 0x00	; 0
    6502:	41 e0       	ldi	r20, 0x01	; 1
    6504:	20 e0       	ldi	r18, 0x00	; 0
    6506:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>

		for(Local_u8Iterator=1;Local_u8Iterator<=14;Local_u8Iterator++)
    650a:	fe 01       	movw	r30, r28
    650c:	ed 56       	subi	r30, 0x6D	; 109
    650e:	fd 4f       	sbci	r31, 0xFD	; 253
    6510:	81 e0       	ldi	r24, 0x01	; 1
    6512:	80 83       	st	Z, r24
    6514:	90 c0       	rjmp	.+288    	; 0x6636 <main+0x4bc6>
		{

			CLCD_u8WriteSpecialCharacter(Pattern10,2,1,Local_u8Iterator);
    6516:	ce 01       	movw	r24, r28
    6518:	8a 5c       	subi	r24, 0xCA	; 202
    651a:	9c 4f       	sbci	r25, 0xFC	; 252
    651c:	fe 01       	movw	r30, r28
    651e:	ed 56       	subi	r30, 0x6D	; 109
    6520:	fd 4f       	sbci	r31, 0xFD	; 253
    6522:	62 e0       	ldi	r22, 0x02	; 2
    6524:	41 e0       	ldi	r20, 0x01	; 1
    6526:	20 81       	ld	r18, Z
    6528:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    652c:	80 e0       	ldi	r24, 0x00	; 0
    652e:	90 e0       	ldi	r25, 0x00	; 0
    6530:	a0 e2       	ldi	r26, 0x20	; 32
    6532:	b1 e4       	ldi	r27, 0x41	; 65
    6534:	8d ab       	std	Y+53, r24	; 0x35
    6536:	9e ab       	std	Y+54, r25	; 0x36
    6538:	af ab       	std	Y+55, r26	; 0x37
    653a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    653c:	6d a9       	ldd	r22, Y+53	; 0x35
    653e:	7e a9       	ldd	r23, Y+54	; 0x36
    6540:	8f a9       	ldd	r24, Y+55	; 0x37
    6542:	98 ad       	ldd	r25, Y+56	; 0x38
    6544:	20 e0       	ldi	r18, 0x00	; 0
    6546:	30 e0       	ldi	r19, 0x00	; 0
    6548:	4a ef       	ldi	r20, 0xFA	; 250
    654a:	54 e4       	ldi	r21, 0x44	; 68
    654c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6550:	dc 01       	movw	r26, r24
    6552:	cb 01       	movw	r24, r22
    6554:	89 ab       	std	Y+49, r24	; 0x31
    6556:	9a ab       	std	Y+50, r25	; 0x32
    6558:	ab ab       	std	Y+51, r26	; 0x33
    655a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    655c:	69 a9       	ldd	r22, Y+49	; 0x31
    655e:	7a a9       	ldd	r23, Y+50	; 0x32
    6560:	8b a9       	ldd	r24, Y+51	; 0x33
    6562:	9c a9       	ldd	r25, Y+52	; 0x34
    6564:	20 e0       	ldi	r18, 0x00	; 0
    6566:	30 e0       	ldi	r19, 0x00	; 0
    6568:	40 e8       	ldi	r20, 0x80	; 128
    656a:	5f e3       	ldi	r21, 0x3F	; 63
    656c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6570:	88 23       	and	r24, r24
    6572:	2c f4       	brge	.+10     	; 0x657e <main+0x4b0e>
		__ticks = 1;
    6574:	81 e0       	ldi	r24, 0x01	; 1
    6576:	90 e0       	ldi	r25, 0x00	; 0
    6578:	98 ab       	std	Y+48, r25	; 0x30
    657a:	8f a7       	std	Y+47, r24	; 0x2f
    657c:	3f c0       	rjmp	.+126    	; 0x65fc <main+0x4b8c>
	else if (__tmp > 65535)
    657e:	69 a9       	ldd	r22, Y+49	; 0x31
    6580:	7a a9       	ldd	r23, Y+50	; 0x32
    6582:	8b a9       	ldd	r24, Y+51	; 0x33
    6584:	9c a9       	ldd	r25, Y+52	; 0x34
    6586:	20 e0       	ldi	r18, 0x00	; 0
    6588:	3f ef       	ldi	r19, 0xFF	; 255
    658a:	4f e7       	ldi	r20, 0x7F	; 127
    658c:	57 e4       	ldi	r21, 0x47	; 71
    658e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    6592:	18 16       	cp	r1, r24
    6594:	4c f5       	brge	.+82     	; 0x65e8 <main+0x4b78>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6596:	6d a9       	ldd	r22, Y+53	; 0x35
    6598:	7e a9       	ldd	r23, Y+54	; 0x36
    659a:	8f a9       	ldd	r24, Y+55	; 0x37
    659c:	98 ad       	ldd	r25, Y+56	; 0x38
    659e:	20 e0       	ldi	r18, 0x00	; 0
    65a0:	30 e0       	ldi	r19, 0x00	; 0
    65a2:	40 e2       	ldi	r20, 0x20	; 32
    65a4:	51 e4       	ldi	r21, 0x41	; 65
    65a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    65aa:	dc 01       	movw	r26, r24
    65ac:	cb 01       	movw	r24, r22
    65ae:	bc 01       	movw	r22, r24
    65b0:	cd 01       	movw	r24, r26
    65b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    65b6:	dc 01       	movw	r26, r24
    65b8:	cb 01       	movw	r24, r22
    65ba:	98 ab       	std	Y+48, r25	; 0x30
    65bc:	8f a7       	std	Y+47, r24	; 0x2f
    65be:	0f c0       	rjmp	.+30     	; 0x65de <main+0x4b6e>
    65c0:	88 ec       	ldi	r24, 0xC8	; 200
    65c2:	90 e0       	ldi	r25, 0x00	; 0
    65c4:	9e a7       	std	Y+46, r25	; 0x2e
    65c6:	8d a7       	std	Y+45, r24	; 0x2d
    65c8:	8d a5       	ldd	r24, Y+45	; 0x2d
    65ca:	9e a5       	ldd	r25, Y+46	; 0x2e
    65cc:	01 97       	sbiw	r24, 0x01	; 1
    65ce:	f1 f7       	brne	.-4      	; 0x65cc <main+0x4b5c>
    65d0:	9e a7       	std	Y+46, r25	; 0x2e
    65d2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    65d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    65d6:	98 a9       	ldd	r25, Y+48	; 0x30
    65d8:	01 97       	sbiw	r24, 0x01	; 1
    65da:	98 ab       	std	Y+48, r25	; 0x30
    65dc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    65de:	8f a5       	ldd	r24, Y+47	; 0x2f
    65e0:	98 a9       	ldd	r25, Y+48	; 0x30
    65e2:	00 97       	sbiw	r24, 0x00	; 0
    65e4:	69 f7       	brne	.-38     	; 0x65c0 <main+0x4b50>
    65e6:	14 c0       	rjmp	.+40     	; 0x6610 <main+0x4ba0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    65e8:	69 a9       	ldd	r22, Y+49	; 0x31
    65ea:	7a a9       	ldd	r23, Y+50	; 0x32
    65ec:	8b a9       	ldd	r24, Y+51	; 0x33
    65ee:	9c a9       	ldd	r25, Y+52	; 0x34
    65f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    65f4:	dc 01       	movw	r26, r24
    65f6:	cb 01       	movw	r24, r22
    65f8:	98 ab       	std	Y+48, r25	; 0x30
    65fa:	8f a7       	std	Y+47, r24	; 0x2f
    65fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    65fe:	98 a9       	ldd	r25, Y+48	; 0x30
    6600:	9c a7       	std	Y+44, r25	; 0x2c
    6602:	8b a7       	std	Y+43, r24	; 0x2b
    6604:	8b a5       	ldd	r24, Y+43	; 0x2b
    6606:	9c a5       	ldd	r25, Y+44	; 0x2c
    6608:	01 97       	sbiw	r24, 0x01	; 1
    660a:	f1 f7       	brne	.-4      	; 0x6608 <main+0x4b98>
    660c:	9c a7       	std	Y+44, r25	; 0x2c
    660e:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(10);
			CLCD_u8GoToXY(1,Local_u8Iterator);
    6610:	fe 01       	movw	r30, r28
    6612:	ed 56       	subi	r30, 0x6D	; 109
    6614:	fd 4f       	sbci	r31, 0xFD	; 253
    6616:	81 e0       	ldi	r24, 0x01	; 1
    6618:	60 81       	ld	r22, Z
    661a:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
			CLCD_u8SendData(' ');
    661e:	80 e2       	ldi	r24, 0x20	; 32
    6620:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>
		CLCD_u8WriteSpecialCharacter(Pattern,1,1,15);
		CLCD_u8GoToXY(0,2);
		CLCD_u8SendString(kill);
		CLCD_u8WriteSpecialCharacter(Pattern9,0,1,0);

		for(Local_u8Iterator=1;Local_u8Iterator<=14;Local_u8Iterator++)
    6624:	de 01       	movw	r26, r28
    6626:	ad 56       	subi	r26, 0x6D	; 109
    6628:	bd 4f       	sbci	r27, 0xFD	; 253
    662a:	fe 01       	movw	r30, r28
    662c:	ed 56       	subi	r30, 0x6D	; 109
    662e:	fd 4f       	sbci	r31, 0xFD	; 253
    6630:	80 81       	ld	r24, Z
    6632:	8f 5f       	subi	r24, 0xFF	; 255
    6634:	8c 93       	st	X, r24
    6636:	fe 01       	movw	r30, r28
    6638:	ed 56       	subi	r30, 0x6D	; 109
    663a:	fd 4f       	sbci	r31, 0xFD	; 253
    663c:	80 81       	ld	r24, Z
    663e:	8f 30       	cpi	r24, 0x0F	; 15
    6640:	08 f4       	brcc	.+2      	; 0x6644 <main+0x4bd4>
    6642:	69 cf       	rjmp	.-302    	; 0x6516 <main+0x4aa6>
			CLCD_u8GoToXY(1,Local_u8Iterator);
			CLCD_u8SendData(' ');

		}

		CLCD_u8WriteSpecialCharacter(Pattern11,3,1,15);
    6644:	ce 01       	movw	r24, r28
    6646:	82 5c       	subi	r24, 0xC2	; 194
    6648:	9c 4f       	sbci	r25, 0xFC	; 252
    664a:	63 e0       	ldi	r22, 0x03	; 3
    664c:	41 e0       	ldi	r20, 0x01	; 1
    664e:	2f e0       	ldi	r18, 0x0F	; 15
    6650:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    6654:	80 e0       	ldi	r24, 0x00	; 0
    6656:	90 e0       	ldi	r25, 0x00	; 0
    6658:	a8 ec       	ldi	r26, 0xC8	; 200
    665a:	b2 e4       	ldi	r27, 0x42	; 66
    665c:	8f a3       	std	Y+39, r24	; 0x27
    665e:	98 a7       	std	Y+40, r25	; 0x28
    6660:	a9 a7       	std	Y+41, r26	; 0x29
    6662:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6664:	6f a1       	ldd	r22, Y+39	; 0x27
    6666:	78 a5       	ldd	r23, Y+40	; 0x28
    6668:	89 a5       	ldd	r24, Y+41	; 0x29
    666a:	9a a5       	ldd	r25, Y+42	; 0x2a
    666c:	20 e0       	ldi	r18, 0x00	; 0
    666e:	30 e0       	ldi	r19, 0x00	; 0
    6670:	4a ef       	ldi	r20, 0xFA	; 250
    6672:	54 e4       	ldi	r21, 0x44	; 68
    6674:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6678:	dc 01       	movw	r26, r24
    667a:	cb 01       	movw	r24, r22
    667c:	8b a3       	std	Y+35, r24	; 0x23
    667e:	9c a3       	std	Y+36, r25	; 0x24
    6680:	ad a3       	std	Y+37, r26	; 0x25
    6682:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    6684:	6b a1       	ldd	r22, Y+35	; 0x23
    6686:	7c a1       	ldd	r23, Y+36	; 0x24
    6688:	8d a1       	ldd	r24, Y+37	; 0x25
    668a:	9e a1       	ldd	r25, Y+38	; 0x26
    668c:	20 e0       	ldi	r18, 0x00	; 0
    668e:	30 e0       	ldi	r19, 0x00	; 0
    6690:	40 e8       	ldi	r20, 0x80	; 128
    6692:	5f e3       	ldi	r21, 0x3F	; 63
    6694:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6698:	88 23       	and	r24, r24
    669a:	2c f4       	brge	.+10     	; 0x66a6 <main+0x4c36>
		__ticks = 1;
    669c:	81 e0       	ldi	r24, 0x01	; 1
    669e:	90 e0       	ldi	r25, 0x00	; 0
    66a0:	9a a3       	std	Y+34, r25	; 0x22
    66a2:	89 a3       	std	Y+33, r24	; 0x21
    66a4:	3f c0       	rjmp	.+126    	; 0x6724 <main+0x4cb4>
	else if (__tmp > 65535)
    66a6:	6b a1       	ldd	r22, Y+35	; 0x23
    66a8:	7c a1       	ldd	r23, Y+36	; 0x24
    66aa:	8d a1       	ldd	r24, Y+37	; 0x25
    66ac:	9e a1       	ldd	r25, Y+38	; 0x26
    66ae:	20 e0       	ldi	r18, 0x00	; 0
    66b0:	3f ef       	ldi	r19, 0xFF	; 255
    66b2:	4f e7       	ldi	r20, 0x7F	; 127
    66b4:	57 e4       	ldi	r21, 0x47	; 71
    66b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    66ba:	18 16       	cp	r1, r24
    66bc:	4c f5       	brge	.+82     	; 0x6710 <main+0x4ca0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    66be:	6f a1       	ldd	r22, Y+39	; 0x27
    66c0:	78 a5       	ldd	r23, Y+40	; 0x28
    66c2:	89 a5       	ldd	r24, Y+41	; 0x29
    66c4:	9a a5       	ldd	r25, Y+42	; 0x2a
    66c6:	20 e0       	ldi	r18, 0x00	; 0
    66c8:	30 e0       	ldi	r19, 0x00	; 0
    66ca:	40 e2       	ldi	r20, 0x20	; 32
    66cc:	51 e4       	ldi	r21, 0x41	; 65
    66ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    66d2:	dc 01       	movw	r26, r24
    66d4:	cb 01       	movw	r24, r22
    66d6:	bc 01       	movw	r22, r24
    66d8:	cd 01       	movw	r24, r26
    66da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    66de:	dc 01       	movw	r26, r24
    66e0:	cb 01       	movw	r24, r22
    66e2:	9a a3       	std	Y+34, r25	; 0x22
    66e4:	89 a3       	std	Y+33, r24	; 0x21
    66e6:	0f c0       	rjmp	.+30     	; 0x6706 <main+0x4c96>
    66e8:	88 ec       	ldi	r24, 0xC8	; 200
    66ea:	90 e0       	ldi	r25, 0x00	; 0
    66ec:	98 a3       	std	Y+32, r25	; 0x20
    66ee:	8f 8f       	std	Y+31, r24	; 0x1f
    66f0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    66f2:	98 a1       	ldd	r25, Y+32	; 0x20
    66f4:	01 97       	sbiw	r24, 0x01	; 1
    66f6:	f1 f7       	brne	.-4      	; 0x66f4 <main+0x4c84>
    66f8:	98 a3       	std	Y+32, r25	; 0x20
    66fa:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    66fc:	89 a1       	ldd	r24, Y+33	; 0x21
    66fe:	9a a1       	ldd	r25, Y+34	; 0x22
    6700:	01 97       	sbiw	r24, 0x01	; 1
    6702:	9a a3       	std	Y+34, r25	; 0x22
    6704:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6706:	89 a1       	ldd	r24, Y+33	; 0x21
    6708:	9a a1       	ldd	r25, Y+34	; 0x22
    670a:	00 97       	sbiw	r24, 0x00	; 0
    670c:	69 f7       	brne	.-38     	; 0x66e8 <main+0x4c78>
    670e:	14 c0       	rjmp	.+40     	; 0x6738 <main+0x4cc8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6710:	6b a1       	ldd	r22, Y+35	; 0x23
    6712:	7c a1       	ldd	r23, Y+36	; 0x24
    6714:	8d a1       	ldd	r24, Y+37	; 0x25
    6716:	9e a1       	ldd	r25, Y+38	; 0x26
    6718:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    671c:	dc 01       	movw	r26, r24
    671e:	cb 01       	movw	r24, r22
    6720:	9a a3       	std	Y+34, r25	; 0x22
    6722:	89 a3       	std	Y+33, r24	; 0x21
    6724:	89 a1       	ldd	r24, Y+33	; 0x21
    6726:	9a a1       	ldd	r25, Y+34	; 0x22
    6728:	9e 8f       	std	Y+30, r25	; 0x1e
    672a:	8d 8f       	std	Y+29, r24	; 0x1d
    672c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    672e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6730:	01 97       	sbiw	r24, 0x01	; 1
    6732:	f1 f7       	brne	.-4      	; 0x6730 <main+0x4cc0>
    6734:	9e 8f       	std	Y+30, r25	; 0x1e
    6736:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(100);

		CLCD_u8WriteSpecialCharacter(Pattern12,4,1,15);
    6738:	ce 01       	movw	r24, r28
    673a:	8a 5b       	subi	r24, 0xBA	; 186
    673c:	9c 4f       	sbci	r25, 0xFC	; 252
    673e:	64 e0       	ldi	r22, 0x04	; 4
    6740:	41 e0       	ldi	r20, 0x01	; 1
    6742:	2f e0       	ldi	r18, 0x0F	; 15
    6744:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    6748:	80 e0       	ldi	r24, 0x00	; 0
    674a:	90 e0       	ldi	r25, 0x00	; 0
    674c:	a8 ec       	ldi	r26, 0xC8	; 200
    674e:	b2 e4       	ldi	r27, 0x42	; 66
    6750:	89 8f       	std	Y+25, r24	; 0x19
    6752:	9a 8f       	std	Y+26, r25	; 0x1a
    6754:	ab 8f       	std	Y+27, r26	; 0x1b
    6756:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6758:	69 8d       	ldd	r22, Y+25	; 0x19
    675a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    675c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    675e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    6760:	20 e0       	ldi	r18, 0x00	; 0
    6762:	30 e0       	ldi	r19, 0x00	; 0
    6764:	4a ef       	ldi	r20, 0xFA	; 250
    6766:	54 e4       	ldi	r21, 0x44	; 68
    6768:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    676c:	dc 01       	movw	r26, r24
    676e:	cb 01       	movw	r24, r22
    6770:	8d 8b       	std	Y+21, r24	; 0x15
    6772:	9e 8b       	std	Y+22, r25	; 0x16
    6774:	af 8b       	std	Y+23, r26	; 0x17
    6776:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    6778:	6d 89       	ldd	r22, Y+21	; 0x15
    677a:	7e 89       	ldd	r23, Y+22	; 0x16
    677c:	8f 89       	ldd	r24, Y+23	; 0x17
    677e:	98 8d       	ldd	r25, Y+24	; 0x18
    6780:	20 e0       	ldi	r18, 0x00	; 0
    6782:	30 e0       	ldi	r19, 0x00	; 0
    6784:	40 e8       	ldi	r20, 0x80	; 128
    6786:	5f e3       	ldi	r21, 0x3F	; 63
    6788:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    678c:	88 23       	and	r24, r24
    678e:	2c f4       	brge	.+10     	; 0x679a <main+0x4d2a>
		__ticks = 1;
    6790:	81 e0       	ldi	r24, 0x01	; 1
    6792:	90 e0       	ldi	r25, 0x00	; 0
    6794:	9c 8b       	std	Y+20, r25	; 0x14
    6796:	8b 8b       	std	Y+19, r24	; 0x13
    6798:	3f c0       	rjmp	.+126    	; 0x6818 <main+0x4da8>
	else if (__tmp > 65535)
    679a:	6d 89       	ldd	r22, Y+21	; 0x15
    679c:	7e 89       	ldd	r23, Y+22	; 0x16
    679e:	8f 89       	ldd	r24, Y+23	; 0x17
    67a0:	98 8d       	ldd	r25, Y+24	; 0x18
    67a2:	20 e0       	ldi	r18, 0x00	; 0
    67a4:	3f ef       	ldi	r19, 0xFF	; 255
    67a6:	4f e7       	ldi	r20, 0x7F	; 127
    67a8:	57 e4       	ldi	r21, 0x47	; 71
    67aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    67ae:	18 16       	cp	r1, r24
    67b0:	4c f5       	brge	.+82     	; 0x6804 <main+0x4d94>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    67b2:	69 8d       	ldd	r22, Y+25	; 0x19
    67b4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    67b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    67b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    67ba:	20 e0       	ldi	r18, 0x00	; 0
    67bc:	30 e0       	ldi	r19, 0x00	; 0
    67be:	40 e2       	ldi	r20, 0x20	; 32
    67c0:	51 e4       	ldi	r21, 0x41	; 65
    67c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    67c6:	dc 01       	movw	r26, r24
    67c8:	cb 01       	movw	r24, r22
    67ca:	bc 01       	movw	r22, r24
    67cc:	cd 01       	movw	r24, r26
    67ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    67d2:	dc 01       	movw	r26, r24
    67d4:	cb 01       	movw	r24, r22
    67d6:	9c 8b       	std	Y+20, r25	; 0x14
    67d8:	8b 8b       	std	Y+19, r24	; 0x13
    67da:	0f c0       	rjmp	.+30     	; 0x67fa <main+0x4d8a>
    67dc:	88 ec       	ldi	r24, 0xC8	; 200
    67de:	90 e0       	ldi	r25, 0x00	; 0
    67e0:	9a 8b       	std	Y+18, r25	; 0x12
    67e2:	89 8b       	std	Y+17, r24	; 0x11
    67e4:	89 89       	ldd	r24, Y+17	; 0x11
    67e6:	9a 89       	ldd	r25, Y+18	; 0x12
    67e8:	01 97       	sbiw	r24, 0x01	; 1
    67ea:	f1 f7       	brne	.-4      	; 0x67e8 <main+0x4d78>
    67ec:	9a 8b       	std	Y+18, r25	; 0x12
    67ee:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    67f0:	8b 89       	ldd	r24, Y+19	; 0x13
    67f2:	9c 89       	ldd	r25, Y+20	; 0x14
    67f4:	01 97       	sbiw	r24, 0x01	; 1
    67f6:	9c 8b       	std	Y+20, r25	; 0x14
    67f8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    67fa:	8b 89       	ldd	r24, Y+19	; 0x13
    67fc:	9c 89       	ldd	r25, Y+20	; 0x14
    67fe:	00 97       	sbiw	r24, 0x00	; 0
    6800:	69 f7       	brne	.-38     	; 0x67dc <main+0x4d6c>
    6802:	14 c0       	rjmp	.+40     	; 0x682c <main+0x4dbc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6804:	6d 89       	ldd	r22, Y+21	; 0x15
    6806:	7e 89       	ldd	r23, Y+22	; 0x16
    6808:	8f 89       	ldd	r24, Y+23	; 0x17
    680a:	98 8d       	ldd	r25, Y+24	; 0x18
    680c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    6810:	dc 01       	movw	r26, r24
    6812:	cb 01       	movw	r24, r22
    6814:	9c 8b       	std	Y+20, r25	; 0x14
    6816:	8b 8b       	std	Y+19, r24	; 0x13
    6818:	8b 89       	ldd	r24, Y+19	; 0x13
    681a:	9c 89       	ldd	r25, Y+20	; 0x14
    681c:	98 8b       	std	Y+16, r25	; 0x10
    681e:	8f 87       	std	Y+15, r24	; 0x0f
    6820:	8f 85       	ldd	r24, Y+15	; 0x0f
    6822:	98 89       	ldd	r25, Y+16	; 0x10
    6824:	01 97       	sbiw	r24, 0x01	; 1
    6826:	f1 f7       	brne	.-4      	; 0x6824 <main+0x4db4>
    6828:	98 8b       	std	Y+16, r25	; 0x10
    682a:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(100);

		CLCD_u8SendCommand(0b00000001);
    682c:	81 e0       	ldi	r24, 0x01	; 1
    682e:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8GoToXY(0,3);
    6832:	80 e0       	ldi	r24, 0x00	; 0
    6834:	63 e0       	ldi	r22, 0x03	; 3
    6836:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(RIP);
    683a:	ce 01       	movw	r24, r28
    683c:	8c 51       	subi	r24, 0x1C	; 28
    683e:	9d 4f       	sbci	r25, 0xFD	; 253
    6840:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
    6844:	80 e0       	ldi	r24, 0x00	; 0
    6846:	90 e0       	ldi	r25, 0x00	; 0
    6848:	aa e7       	ldi	r26, 0x7A	; 122
    684a:	b3 e4       	ldi	r27, 0x43	; 67
    684c:	8b 87       	std	Y+11, r24	; 0x0b
    684e:	9c 87       	std	Y+12, r25	; 0x0c
    6850:	ad 87       	std	Y+13, r26	; 0x0d
    6852:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6854:	6b 85       	ldd	r22, Y+11	; 0x0b
    6856:	7c 85       	ldd	r23, Y+12	; 0x0c
    6858:	8d 85       	ldd	r24, Y+13	; 0x0d
    685a:	9e 85       	ldd	r25, Y+14	; 0x0e
    685c:	20 e0       	ldi	r18, 0x00	; 0
    685e:	30 e0       	ldi	r19, 0x00	; 0
    6860:	4a ef       	ldi	r20, 0xFA	; 250
    6862:	54 e4       	ldi	r21, 0x44	; 68
    6864:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    6868:	dc 01       	movw	r26, r24
    686a:	cb 01       	movw	r24, r22
    686c:	8f 83       	std	Y+7, r24	; 0x07
    686e:	98 87       	std	Y+8, r25	; 0x08
    6870:	a9 87       	std	Y+9, r26	; 0x09
    6872:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    6874:	6f 81       	ldd	r22, Y+7	; 0x07
    6876:	78 85       	ldd	r23, Y+8	; 0x08
    6878:	89 85       	ldd	r24, Y+9	; 0x09
    687a:	9a 85       	ldd	r25, Y+10	; 0x0a
    687c:	20 e0       	ldi	r18, 0x00	; 0
    687e:	30 e0       	ldi	r19, 0x00	; 0
    6880:	40 e8       	ldi	r20, 0x80	; 128
    6882:	5f e3       	ldi	r21, 0x3F	; 63
    6884:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    6888:	88 23       	and	r24, r24
    688a:	2c f4       	brge	.+10     	; 0x6896 <main+0x4e26>
		__ticks = 1;
    688c:	81 e0       	ldi	r24, 0x01	; 1
    688e:	90 e0       	ldi	r25, 0x00	; 0
    6890:	9e 83       	std	Y+6, r25	; 0x06
    6892:	8d 83       	std	Y+5, r24	; 0x05
    6894:	3f c0       	rjmp	.+126    	; 0x6914 <main+0x4ea4>
	else if (__tmp > 65535)
    6896:	6f 81       	ldd	r22, Y+7	; 0x07
    6898:	78 85       	ldd	r23, Y+8	; 0x08
    689a:	89 85       	ldd	r24, Y+9	; 0x09
    689c:	9a 85       	ldd	r25, Y+10	; 0x0a
    689e:	20 e0       	ldi	r18, 0x00	; 0
    68a0:	3f ef       	ldi	r19, 0xFF	; 255
    68a2:	4f e7       	ldi	r20, 0x7F	; 127
    68a4:	57 e4       	ldi	r21, 0x47	; 71
    68a6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    68aa:	18 16       	cp	r1, r24
    68ac:	4c f5       	brge	.+82     	; 0x6900 <main+0x4e90>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    68ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    68b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    68b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    68b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    68b6:	20 e0       	ldi	r18, 0x00	; 0
    68b8:	30 e0       	ldi	r19, 0x00	; 0
    68ba:	40 e2       	ldi	r20, 0x20	; 32
    68bc:	51 e4       	ldi	r21, 0x41	; 65
    68be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    68c2:	dc 01       	movw	r26, r24
    68c4:	cb 01       	movw	r24, r22
    68c6:	bc 01       	movw	r22, r24
    68c8:	cd 01       	movw	r24, r26
    68ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    68ce:	dc 01       	movw	r26, r24
    68d0:	cb 01       	movw	r24, r22
    68d2:	9e 83       	std	Y+6, r25	; 0x06
    68d4:	8d 83       	std	Y+5, r24	; 0x05
    68d6:	0f c0       	rjmp	.+30     	; 0x68f6 <main+0x4e86>
    68d8:	88 ec       	ldi	r24, 0xC8	; 200
    68da:	90 e0       	ldi	r25, 0x00	; 0
    68dc:	9c 83       	std	Y+4, r25	; 0x04
    68de:	8b 83       	std	Y+3, r24	; 0x03
    68e0:	8b 81       	ldd	r24, Y+3	; 0x03
    68e2:	9c 81       	ldd	r25, Y+4	; 0x04
    68e4:	01 97       	sbiw	r24, 0x01	; 1
    68e6:	f1 f7       	brne	.-4      	; 0x68e4 <main+0x4e74>
    68e8:	9c 83       	std	Y+4, r25	; 0x04
    68ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    68ec:	8d 81       	ldd	r24, Y+5	; 0x05
    68ee:	9e 81       	ldd	r25, Y+6	; 0x06
    68f0:	01 97       	sbiw	r24, 0x01	; 1
    68f2:	9e 83       	std	Y+6, r25	; 0x06
    68f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    68f6:	8d 81       	ldd	r24, Y+5	; 0x05
    68f8:	9e 81       	ldd	r25, Y+6	; 0x06
    68fa:	00 97       	sbiw	r24, 0x00	; 0
    68fc:	69 f7       	brne	.-38     	; 0x68d8 <main+0x4e68>
    68fe:	14 c0       	rjmp	.+40     	; 0x6928 <main+0x4eb8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6900:	6f 81       	ldd	r22, Y+7	; 0x07
    6902:	78 85       	ldd	r23, Y+8	; 0x08
    6904:	89 85       	ldd	r24, Y+9	; 0x09
    6906:	9a 85       	ldd	r25, Y+10	; 0x0a
    6908:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    690c:	dc 01       	movw	r26, r24
    690e:	cb 01       	movw	r24, r22
    6910:	9e 83       	std	Y+6, r25	; 0x06
    6912:	8d 83       	std	Y+5, r24	; 0x05
    6914:	8d 81       	ldd	r24, Y+5	; 0x05
    6916:	9e 81       	ldd	r25, Y+6	; 0x06
    6918:	9a 83       	std	Y+2, r25	; 0x02
    691a:	89 83       	std	Y+1, r24	; 0x01
    691c:	89 81       	ldd	r24, Y+1	; 0x01
    691e:	9a 81       	ldd	r25, Y+2	; 0x02
    6920:	01 97       	sbiw	r24, 0x01	; 1
    6922:	f1 f7       	brne	.-4      	; 0x6920 <main+0x4eb0>
    6924:	9a 83       	std	Y+2, r25	; 0x02
    6926:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(250);

		CLCD_u8SendCommand(0b00000001);
    6928:	81 e0       	ldi	r24, 0x01	; 1
    692a:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
    692e:	0c 94 bd 11 	jmp	0x237a	; 0x237a <main+0x90a>

00006932 <__udivmodsi4>:
    6932:	a1 e2       	ldi	r26, 0x21	; 33
    6934:	1a 2e       	mov	r1, r26
    6936:	aa 1b       	sub	r26, r26
    6938:	bb 1b       	sub	r27, r27
    693a:	fd 01       	movw	r30, r26
    693c:	0d c0       	rjmp	.+26     	; 0x6958 <__udivmodsi4_ep>

0000693e <__udivmodsi4_loop>:
    693e:	aa 1f       	adc	r26, r26
    6940:	bb 1f       	adc	r27, r27
    6942:	ee 1f       	adc	r30, r30
    6944:	ff 1f       	adc	r31, r31
    6946:	a2 17       	cp	r26, r18
    6948:	b3 07       	cpc	r27, r19
    694a:	e4 07       	cpc	r30, r20
    694c:	f5 07       	cpc	r31, r21
    694e:	20 f0       	brcs	.+8      	; 0x6958 <__udivmodsi4_ep>
    6950:	a2 1b       	sub	r26, r18
    6952:	b3 0b       	sbc	r27, r19
    6954:	e4 0b       	sbc	r30, r20
    6956:	f5 0b       	sbc	r31, r21

00006958 <__udivmodsi4_ep>:
    6958:	66 1f       	adc	r22, r22
    695a:	77 1f       	adc	r23, r23
    695c:	88 1f       	adc	r24, r24
    695e:	99 1f       	adc	r25, r25
    6960:	1a 94       	dec	r1
    6962:	69 f7       	brne	.-38     	; 0x693e <__udivmodsi4_loop>
    6964:	60 95       	com	r22
    6966:	70 95       	com	r23
    6968:	80 95       	com	r24
    696a:	90 95       	com	r25
    696c:	9b 01       	movw	r18, r22
    696e:	ac 01       	movw	r20, r24
    6970:	bd 01       	movw	r22, r26
    6972:	cf 01       	movw	r24, r30
    6974:	08 95       	ret

00006976 <__prologue_saves__>:
    6976:	2f 92       	push	r2
    6978:	3f 92       	push	r3
    697a:	4f 92       	push	r4
    697c:	5f 92       	push	r5
    697e:	6f 92       	push	r6
    6980:	7f 92       	push	r7
    6982:	8f 92       	push	r8
    6984:	9f 92       	push	r9
    6986:	af 92       	push	r10
    6988:	bf 92       	push	r11
    698a:	cf 92       	push	r12
    698c:	df 92       	push	r13
    698e:	ef 92       	push	r14
    6990:	ff 92       	push	r15
    6992:	0f 93       	push	r16
    6994:	1f 93       	push	r17
    6996:	cf 93       	push	r28
    6998:	df 93       	push	r29
    699a:	cd b7       	in	r28, 0x3d	; 61
    699c:	de b7       	in	r29, 0x3e	; 62
    699e:	ca 1b       	sub	r28, r26
    69a0:	db 0b       	sbc	r29, r27
    69a2:	0f b6       	in	r0, 0x3f	; 63
    69a4:	f8 94       	cli
    69a6:	de bf       	out	0x3e, r29	; 62
    69a8:	0f be       	out	0x3f, r0	; 63
    69aa:	cd bf       	out	0x3d, r28	; 61
    69ac:	09 94       	ijmp

000069ae <__epilogue_restores__>:
    69ae:	2a 88       	ldd	r2, Y+18	; 0x12
    69b0:	39 88       	ldd	r3, Y+17	; 0x11
    69b2:	48 88       	ldd	r4, Y+16	; 0x10
    69b4:	5f 84       	ldd	r5, Y+15	; 0x0f
    69b6:	6e 84       	ldd	r6, Y+14	; 0x0e
    69b8:	7d 84       	ldd	r7, Y+13	; 0x0d
    69ba:	8c 84       	ldd	r8, Y+12	; 0x0c
    69bc:	9b 84       	ldd	r9, Y+11	; 0x0b
    69be:	aa 84       	ldd	r10, Y+10	; 0x0a
    69c0:	b9 84       	ldd	r11, Y+9	; 0x09
    69c2:	c8 84       	ldd	r12, Y+8	; 0x08
    69c4:	df 80       	ldd	r13, Y+7	; 0x07
    69c6:	ee 80       	ldd	r14, Y+6	; 0x06
    69c8:	fd 80       	ldd	r15, Y+5	; 0x05
    69ca:	0c 81       	ldd	r16, Y+4	; 0x04
    69cc:	1b 81       	ldd	r17, Y+3	; 0x03
    69ce:	aa 81       	ldd	r26, Y+2	; 0x02
    69d0:	b9 81       	ldd	r27, Y+1	; 0x01
    69d2:	ce 0f       	add	r28, r30
    69d4:	d1 1d       	adc	r29, r1
    69d6:	0f b6       	in	r0, 0x3f	; 63
    69d8:	f8 94       	cli
    69da:	de bf       	out	0x3e, r29	; 62
    69dc:	0f be       	out	0x3f, r0	; 63
    69de:	cd bf       	out	0x3d, r28	; 61
    69e0:	ed 01       	movw	r28, r26
    69e2:	08 95       	ret

000069e4 <_exit>:
    69e4:	f8 94       	cli

000069e6 <__stop_program>:
    69e6:	ff cf       	rjmp	.-2      	; 0x69e6 <__stop_program>
