
CLCD2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004994  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00004994  00004a08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002df0  00000000  00000000  00004a6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000dab  00000000  00000000  0000785c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00008607  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00008747  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000088b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000a500  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000b3eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000c198  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000c2f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000c585  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000cd53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e9       	ldi	r30, 0x94	; 148
      68:	f9 e4       	ldi	r31, 0x49	; 73
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3c       	cpi	r26, 0xC2	; 194
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <main>
      7a:	0c 94 c8 24 	jmp	0x4990	; 0x4990 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	aa eb       	ldi	r26, 0xBA	; 186
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 9d 24 	jmp	0x493a	; 0x493a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 9d 24 	jmp	0x493a	; 0x493a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 91 24 	jmp	0x4922	; 0x4922 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8a eb       	ldi	r24, 0xBA	; 186
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 9d 24 	jmp	0x493a	; 0x493a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 9d 24 	jmp	0x493a	; 0x493a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 9d 24 	jmp	0x493a	; 0x493a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 a1 24 	jmp	0x4942	; 0x4942 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 bd 24 	jmp	0x497a	; 0x497a <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <CLCD_u8SendCommand>:
#include <util/delay.h>



u8 CLCD_u8SendCommand(u8 Copy_u8Command)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	60 97       	sbiw	r28, 0x10	; 16
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	88 8b       	std	Y+16, r24	; 0x10
	u8 Local_u8ErrorState=0;
     b4c:	1f 86       	std	Y+15, r1	; 0x0f
	/*Set RS pin to low*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_LOW);
     b4e:	81 e0       	ldi	r24, 0x01	; 1
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>
	/* Set RW pin to low for write*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	61 e0       	ldi	r22, 0x01	; 1
     b5c:	40 e0       	ldi	r20, 0x00	; 0
     b5e:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>
	/*Send Command*/
	DIO_u8SetPortValue(CLCD_DATA_PORT, Copy_u8Command);
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	68 89       	ldd	r22, Y+16	; 0x10
     b66:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <DIO_u8SetPortValue>

	/*Set high to E pin for 2 sec*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     b6a:	81 e0       	ldi	r24, 0x01	; 1
     b6c:	62 e0       	ldi	r22, 0x02	; 2
     b6e:	41 e0       	ldi	r20, 0x01	; 1
     b70:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	a0 e0       	ldi	r26, 0x00	; 0
     b7a:	b0 e4       	ldi	r27, 0x40	; 64
     b7c:	8b 87       	std	Y+11, r24	; 0x0b
     b7e:	9c 87       	std	Y+12, r25	; 0x0c
     b80:	ad 87       	std	Y+13, r26	; 0x0d
     b82:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b84:	6b 85       	ldd	r22, Y+11	; 0x0b
     b86:	7c 85       	ldd	r23, Y+12	; 0x0c
     b88:	8d 85       	ldd	r24, Y+13	; 0x0d
     b8a:	9e 85       	ldd	r25, Y+14	; 0x0e
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	4a ef       	ldi	r20, 0xFA	; 250
     b92:	54 e4       	ldi	r21, 0x44	; 68
     b94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b98:	dc 01       	movw	r26, r24
     b9a:	cb 01       	movw	r24, r22
     b9c:	8f 83       	std	Y+7, r24	; 0x07
     b9e:	98 87       	std	Y+8, r25	; 0x08
     ba0:	a9 87       	std	Y+9, r26	; 0x09
     ba2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ba4:	6f 81       	ldd	r22, Y+7	; 0x07
     ba6:	78 85       	ldd	r23, Y+8	; 0x08
     ba8:	89 85       	ldd	r24, Y+9	; 0x09
     baa:	9a 85       	ldd	r25, Y+10	; 0x0a
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	40 e8       	ldi	r20, 0x80	; 128
     bb2:	5f e3       	ldi	r21, 0x3F	; 63
     bb4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bb8:	88 23       	and	r24, r24
     bba:	2c f4       	brge	.+10     	; 0xbc6 <CLCD_u8SendCommand+0x90>
		__ticks = 1;
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	9e 83       	std	Y+6, r25	; 0x06
     bc2:	8d 83       	std	Y+5, r24	; 0x05
     bc4:	3f c0       	rjmp	.+126    	; 0xc44 <CLCD_u8SendCommand+0x10e>
	else if (__tmp > 65535)
     bc6:	6f 81       	ldd	r22, Y+7	; 0x07
     bc8:	78 85       	ldd	r23, Y+8	; 0x08
     bca:	89 85       	ldd	r24, Y+9	; 0x09
     bcc:	9a 85       	ldd	r25, Y+10	; 0x0a
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	3f ef       	ldi	r19, 0xFF	; 255
     bd2:	4f e7       	ldi	r20, 0x7F	; 127
     bd4:	57 e4       	ldi	r21, 0x47	; 71
     bd6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bda:	18 16       	cp	r1, r24
     bdc:	4c f5       	brge	.+82     	; 0xc30 <CLCD_u8SendCommand+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bde:	6b 85       	ldd	r22, Y+11	; 0x0b
     be0:	7c 85       	ldd	r23, Y+12	; 0x0c
     be2:	8d 85       	ldd	r24, Y+13	; 0x0d
     be4:	9e 85       	ldd	r25, Y+14	; 0x0e
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	40 e2       	ldi	r20, 0x20	; 32
     bec:	51 e4       	ldi	r21, 0x41	; 65
     bee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     bf2:	dc 01       	movw	r26, r24
     bf4:	cb 01       	movw	r24, r22
     bf6:	bc 01       	movw	r22, r24
     bf8:	cd 01       	movw	r24, r26
     bfa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     bfe:	dc 01       	movw	r26, r24
     c00:	cb 01       	movw	r24, r22
     c02:	9e 83       	std	Y+6, r25	; 0x06
     c04:	8d 83       	std	Y+5, r24	; 0x05
     c06:	0f c0       	rjmp	.+30     	; 0xc26 <CLCD_u8SendCommand+0xf0>
     c08:	88 ec       	ldi	r24, 0xC8	; 200
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	9c 83       	std	Y+4, r25	; 0x04
     c0e:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c10:	8b 81       	ldd	r24, Y+3	; 0x03
     c12:	9c 81       	ldd	r25, Y+4	; 0x04
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	f1 f7       	brne	.-4      	; 0xc14 <CLCD_u8SendCommand+0xde>
     c18:	9c 83       	std	Y+4, r25	; 0x04
     c1a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c1c:	8d 81       	ldd	r24, Y+5	; 0x05
     c1e:	9e 81       	ldd	r25, Y+6	; 0x06
     c20:	01 97       	sbiw	r24, 0x01	; 1
     c22:	9e 83       	std	Y+6, r25	; 0x06
     c24:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c26:	8d 81       	ldd	r24, Y+5	; 0x05
     c28:	9e 81       	ldd	r25, Y+6	; 0x06
     c2a:	00 97       	sbiw	r24, 0x00	; 0
     c2c:	69 f7       	brne	.-38     	; 0xc08 <CLCD_u8SendCommand+0xd2>
     c2e:	14 c0       	rjmp	.+40     	; 0xc58 <CLCD_u8SendCommand+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c30:	6f 81       	ldd	r22, Y+7	; 0x07
     c32:	78 85       	ldd	r23, Y+8	; 0x08
     c34:	89 85       	ldd	r24, Y+9	; 0x09
     c36:	9a 85       	ldd	r25, Y+10	; 0x0a
     c38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c3c:	dc 01       	movw	r26, r24
     c3e:	cb 01       	movw	r24, r22
     c40:	9e 83       	std	Y+6, r25	; 0x06
     c42:	8d 83       	std	Y+5, r24	; 0x05
     c44:	8d 81       	ldd	r24, Y+5	; 0x05
     c46:	9e 81       	ldd	r25, Y+6	; 0x06
     c48:	9a 83       	std	Y+2, r25	; 0x02
     c4a:	89 83       	std	Y+1, r24	; 0x01
     c4c:	89 81       	ldd	r24, Y+1	; 0x01
     c4e:	9a 81       	ldd	r25, Y+2	; 0x02
     c50:	01 97       	sbiw	r24, 0x01	; 1
     c52:	f1 f7       	brne	.-4      	; 0xc50 <CLCD_u8SendCommand+0x11a>
     c54:	9a 83       	std	Y+2, r25	; 0x02
     c56:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	62 e0       	ldi	r22, 0x02	; 2
     c5c:	40 e0       	ldi	r20, 0x00	; 0
     c5e:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>

	return Local_u8ErrorState;
     c62:	8f 85       	ldd	r24, Y+15	; 0x0f
}
     c64:	60 96       	adiw	r28, 0x10	; 16
     c66:	0f b6       	in	r0, 0x3f	; 63
     c68:	f8 94       	cli
     c6a:	de bf       	out	0x3e, r29	; 62
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	cd bf       	out	0x3d, r28	; 61
     c70:	cf 91       	pop	r28
     c72:	df 91       	pop	r29
     c74:	08 95       	ret

00000c76 <CLCD_u8SendData>:

u8 CLCD_u8SendData(u8 Copy_u8Data)
{
     c76:	df 93       	push	r29
     c78:	cf 93       	push	r28
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
     c7e:	60 97       	sbiw	r28, 0x10	; 16
     c80:	0f b6       	in	r0, 0x3f	; 63
     c82:	f8 94       	cli
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	0f be       	out	0x3f, r0	; 63
     c88:	cd bf       	out	0x3d, r28	; 61
     c8a:	88 8b       	std	Y+16, r24	; 0x10
	u8 Local_u8ErrorState=0;
     c8c:	1f 86       	std	Y+15, r1	; 0x0f


	/*Set RS pin to High for data*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_HIGH);
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	60 e0       	ldi	r22, 0x00	; 0
     c92:	41 e0       	ldi	r20, 0x01	; 1
     c94:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>
	/* Set RW pin to low for write*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	61 e0       	ldi	r22, 0x01	; 1
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>
	/*Send Data to Data pins*/
	DIO_u8SetPortValue(CLCD_DATA_PORT, Copy_u8Data);
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	68 89       	ldd	r22, Y+16	; 0x10
     ca6:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <DIO_u8SetPortValue>

	/*Set high to E pin for 2 sec*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	62 e0       	ldi	r22, 0x02	; 2
     cae:	41 e0       	ldi	r20, 0x01	; 1
     cb0:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	a0 e0       	ldi	r26, 0x00	; 0
     cba:	b0 e4       	ldi	r27, 0x40	; 64
     cbc:	8b 87       	std	Y+11, r24	; 0x0b
     cbe:	9c 87       	std	Y+12, r25	; 0x0c
     cc0:	ad 87       	std	Y+13, r26	; 0x0d
     cc2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cc4:	6b 85       	ldd	r22, Y+11	; 0x0b
     cc6:	7c 85       	ldd	r23, Y+12	; 0x0c
     cc8:	8d 85       	ldd	r24, Y+13	; 0x0d
     cca:	9e 85       	ldd	r25, Y+14	; 0x0e
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	4a ef       	ldi	r20, 0xFA	; 250
     cd2:	54 e4       	ldi	r21, 0x44	; 68
     cd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cd8:	dc 01       	movw	r26, r24
     cda:	cb 01       	movw	r24, r22
     cdc:	8f 83       	std	Y+7, r24	; 0x07
     cde:	98 87       	std	Y+8, r25	; 0x08
     ce0:	a9 87       	std	Y+9, r26	; 0x09
     ce2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ce4:	6f 81       	ldd	r22, Y+7	; 0x07
     ce6:	78 85       	ldd	r23, Y+8	; 0x08
     ce8:	89 85       	ldd	r24, Y+9	; 0x09
     cea:	9a 85       	ldd	r25, Y+10	; 0x0a
     cec:	20 e0       	ldi	r18, 0x00	; 0
     cee:	30 e0       	ldi	r19, 0x00	; 0
     cf0:	40 e8       	ldi	r20, 0x80	; 128
     cf2:	5f e3       	ldi	r21, 0x3F	; 63
     cf4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     cf8:	88 23       	and	r24, r24
     cfa:	2c f4       	brge	.+10     	; 0xd06 <CLCD_u8SendData+0x90>
		__ticks = 1;
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	9e 83       	std	Y+6, r25	; 0x06
     d02:	8d 83       	std	Y+5, r24	; 0x05
     d04:	3f c0       	rjmp	.+126    	; 0xd84 <CLCD_u8SendData+0x10e>
	else if (__tmp > 65535)
     d06:	6f 81       	ldd	r22, Y+7	; 0x07
     d08:	78 85       	ldd	r23, Y+8	; 0x08
     d0a:	89 85       	ldd	r24, Y+9	; 0x09
     d0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	3f ef       	ldi	r19, 0xFF	; 255
     d12:	4f e7       	ldi	r20, 0x7F	; 127
     d14:	57 e4       	ldi	r21, 0x47	; 71
     d16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d1a:	18 16       	cp	r1, r24
     d1c:	4c f5       	brge	.+82     	; 0xd70 <CLCD_u8SendData+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d1e:	6b 85       	ldd	r22, Y+11	; 0x0b
     d20:	7c 85       	ldd	r23, Y+12	; 0x0c
     d22:	8d 85       	ldd	r24, Y+13	; 0x0d
     d24:	9e 85       	ldd	r25, Y+14	; 0x0e
     d26:	20 e0       	ldi	r18, 0x00	; 0
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	40 e2       	ldi	r20, 0x20	; 32
     d2c:	51 e4       	ldi	r21, 0x41	; 65
     d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d32:	dc 01       	movw	r26, r24
     d34:	cb 01       	movw	r24, r22
     d36:	bc 01       	movw	r22, r24
     d38:	cd 01       	movw	r24, r26
     d3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d3e:	dc 01       	movw	r26, r24
     d40:	cb 01       	movw	r24, r22
     d42:	9e 83       	std	Y+6, r25	; 0x06
     d44:	8d 83       	std	Y+5, r24	; 0x05
     d46:	0f c0       	rjmp	.+30     	; 0xd66 <CLCD_u8SendData+0xf0>
     d48:	88 ec       	ldi	r24, 0xC8	; 200
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	9c 83       	std	Y+4, r25	; 0x04
     d4e:	8b 83       	std	Y+3, r24	; 0x03
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	9c 81       	ldd	r25, Y+4	; 0x04
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	f1 f7       	brne	.-4      	; 0xd54 <CLCD_u8SendData+0xde>
     d58:	9c 83       	std	Y+4, r25	; 0x04
     d5a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d5c:	8d 81       	ldd	r24, Y+5	; 0x05
     d5e:	9e 81       	ldd	r25, Y+6	; 0x06
     d60:	01 97       	sbiw	r24, 0x01	; 1
     d62:	9e 83       	std	Y+6, r25	; 0x06
     d64:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d66:	8d 81       	ldd	r24, Y+5	; 0x05
     d68:	9e 81       	ldd	r25, Y+6	; 0x06
     d6a:	00 97       	sbiw	r24, 0x00	; 0
     d6c:	69 f7       	brne	.-38     	; 0xd48 <CLCD_u8SendData+0xd2>
     d6e:	14 c0       	rjmp	.+40     	; 0xd98 <CLCD_u8SendData+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d70:	6f 81       	ldd	r22, Y+7	; 0x07
     d72:	78 85       	ldd	r23, Y+8	; 0x08
     d74:	89 85       	ldd	r24, Y+9	; 0x09
     d76:	9a 85       	ldd	r25, Y+10	; 0x0a
     d78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	8d 83       	std	Y+5, r24	; 0x05
     d84:	8d 81       	ldd	r24, Y+5	; 0x05
     d86:	9e 81       	ldd	r25, Y+6	; 0x06
     d88:	9a 83       	std	Y+2, r25	; 0x02
     d8a:	89 83       	std	Y+1, r24	; 0x01
     d8c:	89 81       	ldd	r24, Y+1	; 0x01
     d8e:	9a 81       	ldd	r25, Y+2	; 0x02
     d90:	01 97       	sbiw	r24, 0x01	; 1
     d92:	f1 f7       	brne	.-4      	; 0xd90 <CLCD_u8SendData+0x11a>
     d94:	9a 83       	std	Y+2, r25	; 0x02
     d96:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	62 e0       	ldi	r22, 0x02	; 2
     d9c:	40 e0       	ldi	r20, 0x00	; 0
     d9e:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <DIO_u8SetPinValue>

	return Local_u8ErrorState;
     da2:	8f 85       	ldd	r24, Y+15	; 0x0f
}
     da4:	60 96       	adiw	r28, 0x10	; 16
     da6:	0f b6       	in	r0, 0x3f	; 63
     da8:	f8 94       	cli
     daa:	de bf       	out	0x3e, r29	; 62
     dac:	0f be       	out	0x3f, r0	; 63
     dae:	cd bf       	out	0x3d, r28	; 61
     db0:	cf 91       	pop	r28
     db2:	df 91       	pop	r29
     db4:	08 95       	ret

00000db6 <CLCD_u8SendString>:

u8 CLCD_u8SendString(const char* Copy_pcString)
{
     db6:	df 93       	push	r29
     db8:	cf 93       	push	r28
     dba:	00 d0       	rcall	.+0      	; 0xdbc <CLCD_u8SendString+0x6>
     dbc:	00 d0       	rcall	.+0      	; 0xdbe <CLCD_u8SendString+0x8>
     dbe:	cd b7       	in	r28, 0x3d	; 61
     dc0:	de b7       	in	r29, 0x3e	; 62
     dc2:	9c 83       	std	Y+4, r25	; 0x04
     dc4:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8Counter=0;
     dc6:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8ErrorState=0;
     dc8:	19 82       	std	Y+1, r1	; 0x01
     dca:	0e c0       	rjmp	.+28     	; 0xde8 <CLCD_u8SendString+0x32>

	while (Copy_pcString[Local_u8Counter] != '\0') // still looping until finishing all index of array
	{
		CLCD_u8SendData(Copy_pcString[Local_u8Counter]); // display string
     dcc:	8a 81       	ldd	r24, Y+2	; 0x02
     dce:	28 2f       	mov	r18, r24
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	8b 81       	ldd	r24, Y+3	; 0x03
     dd4:	9c 81       	ldd	r25, Y+4	; 0x04
     dd6:	fc 01       	movw	r30, r24
     dd8:	e2 0f       	add	r30, r18
     dda:	f3 1f       	adc	r31, r19
     ddc:	80 81       	ld	r24, Z
     dde:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>

		Local_u8Counter++;
     de2:	8a 81       	ldd	r24, Y+2	; 0x02
     de4:	8f 5f       	subi	r24, 0xFF	; 255
     de6:	8a 83       	std	Y+2, r24	; 0x02
u8 CLCD_u8SendString(const char* Copy_pcString)
{
	u8 Local_u8Counter=0;
	u8 Local_u8ErrorState=0;

	while (Copy_pcString[Local_u8Counter] != '\0') // still looping until finishing all index of array
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	28 2f       	mov	r18, r24
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	8b 81       	ldd	r24, Y+3	; 0x03
     df0:	9c 81       	ldd	r25, Y+4	; 0x04
     df2:	fc 01       	movw	r30, r24
     df4:	e2 0f       	add	r30, r18
     df6:	f3 1f       	adc	r31, r19
     df8:	80 81       	ld	r24, Z
     dfa:	88 23       	and	r24, r24
     dfc:	39 f7       	brne	.-50     	; 0xdcc <CLCD_u8SendString+0x16>

		Local_u8Counter++;
	}


	return Local_u8ErrorState;
     dfe:	89 81       	ldd	r24, Y+1	; 0x01
}
     e00:	0f 90       	pop	r0
     e02:	0f 90       	pop	r0
     e04:	0f 90       	pop	r0
     e06:	0f 90       	pop	r0
     e08:	cf 91       	pop	r28
     e0a:	df 91       	pop	r29
     e0c:	08 95       	ret

00000e0e <CLCD_u8GoToXY>:


u8 CLCD_u8GoToXY(u8 Copy_u8XPos ,u8 Copy_u8YPos)
{
     e0e:	df 93       	push	r29
     e10:	cf 93       	push	r28
     e12:	00 d0       	rcall	.+0      	; 0xe14 <CLCD_u8GoToXY+0x6>
     e14:	00 d0       	rcall	.+0      	; 0xe16 <CLCD_u8GoToXY+0x8>
     e16:	cd b7       	in	r28, 0x3d	; 61
     e18:	de b7       	in	r29, 0x3e	; 62
     e1a:	8b 83       	std	Y+3, r24	; 0x03
     e1c:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8ErrorState=0;
     e1e:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Address;

	if (Copy_u8XPos==0)
     e20:	8b 81       	ldd	r24, Y+3	; 0x03
     e22:	88 23       	and	r24, r24
     e24:	19 f4       	brne	.+6      	; 0xe2c <CLCD_u8GoToXY+0x1e>
	{
		/*Location is at first line*/
		Local_u8Address=Copy_u8YPos;
     e26:	8c 81       	ldd	r24, Y+4	; 0x04
     e28:	89 83       	std	Y+1, r24	; 0x01
     e2a:	09 c0       	rjmp	.+18     	; 0xe3e <CLCD_u8GoToXY+0x30>
	}
	else if (Copy_u8XPos==1)
     e2c:	8b 81       	ldd	r24, Y+3	; 0x03
     e2e:	81 30       	cpi	r24, 0x01	; 1
     e30:	21 f4       	brne	.+8      	; 0xe3a <CLCD_u8GoToXY+0x2c>
	{
		/*Location is at second line*/
		Local_u8Address=Copy_u8YPos+0x40;
     e32:	8c 81       	ldd	r24, Y+4	; 0x04
     e34:	80 5c       	subi	r24, 0xC0	; 192
     e36:	89 83       	std	Y+1, r24	; 0x01
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <CLCD_u8GoToXY+0x30>
	}
	else Local_u8ErrorState=1;
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	8a 83       	std	Y+2, r24	; 0x02

	CLCD_u8SendCommand(Local_u8Address+128);
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	80 58       	subi	r24, 0x80	; 128
     e42:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	return Local_u8ErrorState;
     e46:	8a 81       	ldd	r24, Y+2	; 0x02
}
     e48:	0f 90       	pop	r0
     e4a:	0f 90       	pop	r0
     e4c:	0f 90       	pop	r0
     e4e:	0f 90       	pop	r0
     e50:	cf 91       	pop	r28
     e52:	df 91       	pop	r29
     e54:	08 95       	ret

00000e56 <CLCD_u8WriteSpecialCharacter>:

u8 CLCD_u8WriteSpecialCharacter(u8* Copy_pu8Pattern, u8 Copy_u8BlockNumber,u8 Copy_u8XPos ,u8 Copy_u8YPos)
{
     e56:	df 93       	push	r29
     e58:	cf 93       	push	r28
     e5a:	cd b7       	in	r28, 0x3d	; 61
     e5c:	de b7       	in	r29, 0x3e	; 62
     e5e:	28 97       	sbiw	r28, 0x08	; 8
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	de bf       	out	0x3e, r29	; 62
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	cd bf       	out	0x3d, r28	; 61
     e6a:	9d 83       	std	Y+5, r25	; 0x05
     e6c:	8c 83       	std	Y+4, r24	; 0x04
     e6e:	6e 83       	std	Y+6, r22	; 0x06
     e70:	4f 83       	std	Y+7, r20	; 0x07
     e72:	28 87       	std	Y+8, r18	; 0x08
	u8 Local_u8ErrorState=0;
     e74:	1b 82       	std	Y+3, r1	; 0x03
	u8 Local_u8CGRAMAddress=0;
     e76:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8BlockNumber*8; //Calculate CGRAM Address whose each block is 8 bytes
     e78:	8e 81       	ldd	r24, Y+6	; 0x06
     e7a:	88 2f       	mov	r24, r24
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	88 0f       	add	r24, r24
     e80:	99 1f       	adc	r25, r25
     e82:	88 0f       	add	r24, r24
     e84:	99 1f       	adc	r25, r25
     e86:	88 0f       	add	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	8a 83       	std	Y+2, r24	; 0x02

	CLCD_u8SendCommand(Local_u8CGRAMAddress+64);  // from datasheet send CGRAM Address to LCD with the sixth digit should be one
     e8c:	8a 81       	ldd	r24, Y+2	; 0x02
     e8e:	80 5c       	subi	r24, 0xC0	; 192
     e90:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	for (Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
     e94:	19 82       	std	Y+1, r1	; 0x01
     e96:	0e c0       	rjmp	.+28     	; 0xeb4 <CLCD_u8WriteSpecialCharacter+0x5e>
	{
		CLCD_u8SendData(Copy_pu8Pattern[Local_u8Counter]);  // write the pattern into CGRAM
     e98:	89 81       	ldd	r24, Y+1	; 0x01
     e9a:	28 2f       	mov	r18, r24
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	8c 81       	ldd	r24, Y+4	; 0x04
     ea0:	9d 81       	ldd	r25, Y+5	; 0x05
     ea2:	fc 01       	movw	r30, r24
     ea4:	e2 0f       	add	r30, r18
     ea6:	f3 1f       	adc	r31, r19
     ea8:	80 81       	ld	r24, Z
     eaa:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>
	u8 Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8BlockNumber*8; //Calculate CGRAM Address whose each block is 8 bytes

	CLCD_u8SendCommand(Local_u8CGRAMAddress+64);  // from datasheet send CGRAM Address to LCD with the sixth digit should be one

	for (Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
     eae:	89 81       	ldd	r24, Y+1	; 0x01
     eb0:	8f 5f       	subi	r24, 0xFF	; 255
     eb2:	89 83       	std	Y+1, r24	; 0x01
     eb4:	89 81       	ldd	r24, Y+1	; 0x01
     eb6:	88 30       	cpi	r24, 0x08	; 8
     eb8:	78 f3       	brcs	.-34     	; 0xe98 <CLCD_u8WriteSpecialCharacter+0x42>
	{
		CLCD_u8SendData(Copy_pu8Pattern[Local_u8Counter]);  // write the pattern into CGRAM
	}

	CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos); //Go back to DDRAM to display
     eba:	8f 81       	ldd	r24, Y+7	; 0x07
     ebc:	68 85       	ldd	r22, Y+8	; 0x08
     ebe:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>

	CLCD_u8SendData(Copy_u8BlockNumber);  //Display the pattern
     ec2:	8e 81       	ldd	r24, Y+6	; 0x06
     ec4:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>


	return Local_u8ErrorState;
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
}
     eca:	28 96       	adiw	r28, 0x08	; 8
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	de bf       	out	0x3e, r29	; 62
     ed2:	0f be       	out	0x3f, r0	; 63
     ed4:	cd bf       	out	0x3d, r28	; 61
     ed6:	cf 91       	pop	r28
     ed8:	df 91       	pop	r29
     eda:	08 95       	ret

00000edc <CLCD_voidShiftingStrLeft>:

void CLCD_voidShiftingStrLeft(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting )
{
     edc:	df 93       	push	r29
     ede:	cf 93       	push	r28
     ee0:	00 d0       	rcall	.+0      	; 0xee2 <CLCD_voidShiftingStrLeft+0x6>
     ee2:	00 d0       	rcall	.+0      	; 0xee4 <CLCD_voidShiftingStrLeft+0x8>
     ee4:	00 d0       	rcall	.+0      	; 0xee6 <CLCD_voidShiftingStrLeft+0xa>
     ee6:	cd b7       	in	r28, 0x3d	; 61
     ee8:	de b7       	in	r29, 0x3e	; 62
     eea:	9b 83       	std	Y+3, r25	; 0x03
     eec:	8a 83       	std	Y+2, r24	; 0x02
     eee:	6c 83       	std	Y+4, r22	; 0x04
     ef0:	4d 83       	std	Y+5, r20	; 0x05
     ef2:	2e 83       	std	Y+6, r18	; 0x06
	u8 Local_u8Iteration;
	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     ef4:	19 82       	std	Y+1, r1	; 0x01
     ef6:	11 c0       	rjmp	.+34     	; 0xf1a <CLCD_voidShiftingStrLeft+0x3e>
	{
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos-Local_u8Iteration);
     ef8:	9d 81       	ldd	r25, Y+5	; 0x05
     efa:	89 81       	ldd	r24, Y+1	; 0x01
     efc:	98 1b       	sub	r25, r24
     efe:	8c 81       	ldd	r24, Y+4	; 0x04
     f00:	69 2f       	mov	r22, r25
     f02:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(&Copy_pcString);
     f06:	ce 01       	movw	r24, r28
     f08:	02 96       	adiw	r24, 0x02	; 2
     f0a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8SendCommand(0b00011000);		//To Shifting left
     f0e:	88 e1       	ldi	r24, 0x18	; 24
     f10:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
}

void CLCD_voidShiftingStrLeft(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting )
{
	u8 Local_u8Iteration;
	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     f14:	89 81       	ldd	r24, Y+1	; 0x01
     f16:	8f 5f       	subi	r24, 0xFF	; 255
     f18:	89 83       	std	Y+1, r24	; 0x01
     f1a:	99 81       	ldd	r25, Y+1	; 0x01
     f1c:	8e 81       	ldd	r24, Y+6	; 0x06
     f1e:	89 17       	cp	r24, r25
     f20:	58 f7       	brcc	.-42     	; 0xef8 <CLCD_voidShiftingStrLeft+0x1c>
	{
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos-Local_u8Iteration);
		CLCD_u8SendString(&Copy_pcString);
		CLCD_u8SendCommand(0b00011000);		//To Shifting left
	}
}
     f22:	26 96       	adiw	r28, 0x06	; 6
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	de bf       	out	0x3e, r29	; 62
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	cd bf       	out	0x3d, r28	; 61
     f2e:	cf 91       	pop	r28
     f30:	df 91       	pop	r29
     f32:	08 95       	ret

00000f34 <CLCD_voidShiftingStrRight>:

void CLCD_voidShiftingStrRight(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting)
{
     f34:	df 93       	push	r29
     f36:	cf 93       	push	r28
     f38:	00 d0       	rcall	.+0      	; 0xf3a <CLCD_voidShiftingStrRight+0x6>
     f3a:	00 d0       	rcall	.+0      	; 0xf3c <CLCD_voidShiftingStrRight+0x8>
     f3c:	00 d0       	rcall	.+0      	; 0xf3e <CLCD_voidShiftingStrRight+0xa>
     f3e:	cd b7       	in	r28, 0x3d	; 61
     f40:	de b7       	in	r29, 0x3e	; 62
     f42:	9b 83       	std	Y+3, r25	; 0x03
     f44:	8a 83       	std	Y+2, r24	; 0x02
     f46:	6c 83       	std	Y+4, r22	; 0x04
     f48:	4d 83       	std	Y+5, r20	; 0x05
     f4a:	2e 83       	std	Y+6, r18	; 0x06
	u8 Local_u8Iteration;

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     f4c:	19 82       	std	Y+1, r1	; 0x01
     f4e:	11 c0       	rjmp	.+34     	; 0xf72 <CLCD_voidShiftingStrRight+0x3e>
	{
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos+Local_u8Iteration);
     f50:	9d 81       	ldd	r25, Y+5	; 0x05
     f52:	89 81       	ldd	r24, Y+1	; 0x01
     f54:	98 0f       	add	r25, r24
     f56:	8c 81       	ldd	r24, Y+4	; 0x04
     f58:	69 2f       	mov	r22, r25
     f5a:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(&Copy_pcString);
     f5e:	ce 01       	movw	r24, r28
     f60:	02 96       	adiw	r24, 0x02	; 2
     f62:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8SendCommand(0b00011100);		//To Shifting right
     f66:	8c e1       	ldi	r24, 0x1C	; 28
     f68:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

void CLCD_voidShiftingStrRight(char* Copy_pcString, u8 Copy_u8XPos , u8 Copy_u8YPos , u8 Copy_u8NumOfShiting)
{
	u8 Local_u8Iteration;

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
     f6c:	89 81       	ldd	r24, Y+1	; 0x01
     f6e:	8f 5f       	subi	r24, 0xFF	; 255
     f70:	89 83       	std	Y+1, r24	; 0x01
     f72:	99 81       	ldd	r25, Y+1	; 0x01
     f74:	8e 81       	ldd	r24, Y+6	; 0x06
     f76:	89 17       	cp	r24, r25
     f78:	58 f7       	brcc	.-42     	; 0xf50 <CLCD_voidShiftingStrRight+0x1c>
		CLCD_u8GoToXY(Copy_u8XPos,Copy_u8YPos+Local_u8Iteration);
		CLCD_u8SendString(&Copy_pcString);
		CLCD_u8SendCommand(0b00011100);		//To Shifting right

	}
}
     f7a:	26 96       	adiw	r28, 0x06	; 6
     f7c:	0f b6       	in	r0, 0x3f	; 63
     f7e:	f8 94       	cli
     f80:	de bf       	out	0x3e, r29	; 62
     f82:	0f be       	out	0x3f, r0	; 63
     f84:	cd bf       	out	0x3d, r28	; 61
     f86:	cf 91       	pop	r28
     f88:	df 91       	pop	r29
     f8a:	08 95       	ret

00000f8c <CLCD_voidWriteNumber>:
void CLCD_voidWriteNumber(u32 Copy_u32Number)
{
     f8c:	0f 93       	push	r16
     f8e:	1f 93       	push	r17
     f90:	df 93       	push	r29
     f92:	cf 93       	push	r28
     f94:	cd b7       	in	r28, 0x3d	; 61
     f96:	de b7       	in	r29, 0x3e	; 62
     f98:	66 97       	sbiw	r28, 0x16	; 22
     f9a:	0f b6       	in	r0, 0x3f	; 63
     f9c:	f8 94       	cli
     f9e:	de bf       	out	0x3e, r29	; 62
     fa0:	0f be       	out	0x3f, r0	; 63
     fa2:	cd bf       	out	0x3d, r28	; 61
     fa4:	6b 8b       	std	Y+19, r22	; 0x13
     fa6:	7c 8b       	std	Y+20, r23	; 0x14
     fa8:	8d 8b       	std	Y+21, r24	; 0x15
     faa:	9e 8b       	std	Y+22, r25	; 0x16

	u8 Local_u8Counter1=0;
     fac:	1b 82       	std	Y+3, r1	; 0x03
     fae:	2d c0       	rjmp	.+90     	; 0x100a <CLCD_voidWriteNumber+0x7e>

	char NUM[15];		//Max No. of Characters in one row on LMB161A LCD

	while(Copy_u32Number != 0)
	{
		NUM[Local_u8Counter1]=Copy_u32Number % 10 ;  // To Get only Last digit
     fb0:	8b 81       	ldd	r24, Y+3	; 0x03
     fb2:	08 2f       	mov	r16, r24
     fb4:	10 e0       	ldi	r17, 0x00	; 0
     fb6:	8b 89       	ldd	r24, Y+19	; 0x13
     fb8:	9c 89       	ldd	r25, Y+20	; 0x14
     fba:	ad 89       	ldd	r26, Y+21	; 0x15
     fbc:	be 89       	ldd	r27, Y+22	; 0x16
     fbe:	2a e0       	ldi	r18, 0x0A	; 10
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	40 e0       	ldi	r20, 0x00	; 0
     fc4:	50 e0       	ldi	r21, 0x00	; 0
     fc6:	bc 01       	movw	r22, r24
     fc8:	cd 01       	movw	r24, r26
     fca:	0e 94 6f 24 	call	0x48de	; 0x48de <__udivmodsi4>
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	28 2f       	mov	r18, r24
     fd4:	ce 01       	movw	r24, r28
     fd6:	04 96       	adiw	r24, 0x04	; 4
     fd8:	fc 01       	movw	r30, r24
     fda:	e0 0f       	add	r30, r16
     fdc:	f1 1f       	adc	r31, r17
     fde:	20 83       	st	Z, r18
		Copy_u32Number/=10;   // new number is previous number without last digit
     fe0:	8b 89       	ldd	r24, Y+19	; 0x13
     fe2:	9c 89       	ldd	r25, Y+20	; 0x14
     fe4:	ad 89       	ldd	r26, Y+21	; 0x15
     fe6:	be 89       	ldd	r27, Y+22	; 0x16
     fe8:	2a e0       	ldi	r18, 0x0A	; 10
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	40 e0       	ldi	r20, 0x00	; 0
     fee:	50 e0       	ldi	r21, 0x00	; 0
     ff0:	bc 01       	movw	r22, r24
     ff2:	cd 01       	movw	r24, r26
     ff4:	0e 94 6f 24 	call	0x48de	; 0x48de <__udivmodsi4>
     ff8:	da 01       	movw	r26, r20
     ffa:	c9 01       	movw	r24, r18
     ffc:	8b 8b       	std	Y+19, r24	; 0x13
     ffe:	9c 8b       	std	Y+20, r25	; 0x14
    1000:	ad 8b       	std	Y+21, r26	; 0x15
    1002:	be 8b       	std	Y+22, r27	; 0x16
		Local_u8Counter1++;
    1004:	8b 81       	ldd	r24, Y+3	; 0x03
    1006:	8f 5f       	subi	r24, 0xFF	; 255
    1008:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8Counter1=0;
	u8 Local_u8Counter2;

	char NUM[15];		//Max No. of Characters in one row on LMB161A LCD

	while(Copy_u32Number != 0)
    100a:	8b 89       	ldd	r24, Y+19	; 0x13
    100c:	9c 89       	ldd	r25, Y+20	; 0x14
    100e:	ad 89       	ldd	r26, Y+21	; 0x15
    1010:	be 89       	ldd	r27, Y+22	; 0x16
    1012:	00 97       	sbiw	r24, 0x00	; 0
    1014:	a1 05       	cpc	r26, r1
    1016:	b1 05       	cpc	r27, r1
    1018:	59 f6       	brne	.-106    	; 0xfb0 <CLCD_voidWriteNumber+0x24>
		NUM[Local_u8Counter1]=Copy_u32Number % 10 ;  // To Get only Last digit
		Copy_u32Number/=10;   // new number is previous number without last digit
		Local_u8Counter1++;
	}

	u8 Local_u8ArrSize=Local_u8Counter1;  // To identify the size of  our Array
    101a:	8b 81       	ldd	r24, Y+3	; 0x03
    101c:	89 83       	std	Y+1, r24	; 0x01

	for (Local_u8Counter2=Local_u8ArrSize;Local_u8Counter2>0;Local_u8Counter2--)
    101e:	89 81       	ldd	r24, Y+1	; 0x01
    1020:	8a 83       	std	Y+2, r24	; 0x02
    1022:	12 c0       	rjmp	.+36     	; 0x1048 <CLCD_voidWriteNumber+0xbc>
	{
		CLCD_u8SendData(NUM[Local_u8Counter2-1]+'0');  // To print The correct Number
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	88 2f       	mov	r24, r24
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	9c 01       	movw	r18, r24
    102c:	21 50       	subi	r18, 0x01	; 1
    102e:	30 40       	sbci	r19, 0x00	; 0
    1030:	ce 01       	movw	r24, r28
    1032:	04 96       	adiw	r24, 0x04	; 4
    1034:	fc 01       	movw	r30, r24
    1036:	e2 0f       	add	r30, r18
    1038:	f3 1f       	adc	r31, r19
    103a:	80 81       	ld	r24, Z
    103c:	80 5d       	subi	r24, 0xD0	; 208
    103e:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>
		Local_u8Counter1++;
	}

	u8 Local_u8ArrSize=Local_u8Counter1;  // To identify the size of  our Array

	for (Local_u8Counter2=Local_u8ArrSize;Local_u8Counter2>0;Local_u8Counter2--)
    1042:	8a 81       	ldd	r24, Y+2	; 0x02
    1044:	81 50       	subi	r24, 0x01	; 1
    1046:	8a 83       	std	Y+2, r24	; 0x02
    1048:	8a 81       	ldd	r24, Y+2	; 0x02
    104a:	88 23       	and	r24, r24
    104c:	59 f7       	brne	.-42     	; 0x1024 <CLCD_voidWriteNumber+0x98>
	{
		CLCD_u8SendData(NUM[Local_u8Counter2-1]+'0');  // To print The correct Number
	}

}
    104e:	66 96       	adiw	r28, 0x16	; 22
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	cf 91       	pop	r28
    105c:	df 91       	pop	r29
    105e:	1f 91       	pop	r17
    1060:	0f 91       	pop	r16
    1062:	08 95       	ret

00001064 <CLCD_voidShiftingSpecialChar>:


void CLCD_voidShiftingSpecialChar(u8* Copy_pu8Pattern, u8 Copy_u8BlockNum, u8 Copy_u8XPos ,u8 Copy_u8YPos , u8 Copy_u8NumOfShiting ,u8 Copy_u8TypeOfShifting)
{
    1064:	ef 92       	push	r14
    1066:	0f 93       	push	r16
    1068:	df 93       	push	r29
    106a:	cf 93       	push	r28
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	a4 97       	sbiw	r28, 0x24	; 36
    1072:	0f b6       	in	r0, 0x3f	; 63
    1074:	f8 94       	cli
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	cd bf       	out	0x3d, r28	; 61
    107c:	9f 8f       	std	Y+31, r25	; 0x1f
    107e:	8e 8f       	std	Y+30, r24	; 0x1e
    1080:	68 a3       	std	Y+32, r22	; 0x20
    1082:	49 a3       	std	Y+33, r20	; 0x21
    1084:	2a a3       	std	Y+34, r18	; 0x22
    1086:	0b a3       	std	Y+35, r16	; 0x23
    1088:	ec a2       	std	Y+36, r14	; 0x24
	u8 Local_u8Iteration;
	CLCD_u8WriteSpecialCharacter(Copy_pu8Pattern,Copy_u8BlockNum,Copy_u8XPos,Copy_u8YPos);
    108a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    108c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    108e:	68 a1       	ldd	r22, Y+32	; 0x20
    1090:	49 a1       	ldd	r20, Y+33	; 0x21
    1092:	2a a1       	ldd	r18, Y+34	; 0x22
    1094:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
	if(Copy_u8TypeOfShifting==CLCD_SHIFTING_LEFT)
    1098:	8c a1       	ldd	r24, Y+36	; 0x24
    109a:	88 23       	and	r24, r24
    109c:	09 f0       	breq	.+2      	; 0x10a0 <CLCD_voidShiftingSpecialChar+0x3c>
    109e:	80 c0       	rjmp	.+256    	; 0x11a0 <CLCD_voidShiftingSpecialChar+0x13c>

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    10a0:	1d 8e       	std	Y+29, r1	; 0x1d
    10a2:	78 c0       	rjmp	.+240    	; 0x1194 <CLCD_voidShiftingSpecialChar+0x130>
	{

		CLCD_u8SendCommand(0b00011000);		//To Shifting left
    10a4:	88 e1       	ldi	r24, 0x18	; 24
    10a6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
    10aa:	80 e0       	ldi	r24, 0x00	; 0
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	a8 e4       	ldi	r26, 0x48	; 72
    10b0:	b2 e4       	ldi	r27, 0x42	; 66
    10b2:	89 8f       	std	Y+25, r24	; 0x19
    10b4:	9a 8f       	std	Y+26, r25	; 0x1a
    10b6:	ab 8f       	std	Y+27, r26	; 0x1b
    10b8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ba:	69 8d       	ldd	r22, Y+25	; 0x19
    10bc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10c2:	20 e0       	ldi	r18, 0x00	; 0
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	4a ef       	ldi	r20, 0xFA	; 250
    10c8:	54 e4       	ldi	r21, 0x44	; 68
    10ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10ce:	dc 01       	movw	r26, r24
    10d0:	cb 01       	movw	r24, r22
    10d2:	8d 8b       	std	Y+21, r24	; 0x15
    10d4:	9e 8b       	std	Y+22, r25	; 0x16
    10d6:	af 8b       	std	Y+23, r26	; 0x17
    10d8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    10da:	6d 89       	ldd	r22, Y+21	; 0x15
    10dc:	7e 89       	ldd	r23, Y+22	; 0x16
    10de:	8f 89       	ldd	r24, Y+23	; 0x17
    10e0:	98 8d       	ldd	r25, Y+24	; 0x18
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	40 e8       	ldi	r20, 0x80	; 128
    10e8:	5f e3       	ldi	r21, 0x3F	; 63
    10ea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    10ee:	88 23       	and	r24, r24
    10f0:	2c f4       	brge	.+10     	; 0x10fc <CLCD_voidShiftingSpecialChar+0x98>
		__ticks = 1;
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	9c 8b       	std	Y+20, r25	; 0x14
    10f8:	8b 8b       	std	Y+19, r24	; 0x13
    10fa:	3f c0       	rjmp	.+126    	; 0x117a <CLCD_voidShiftingSpecialChar+0x116>
	else if (__tmp > 65535)
    10fc:	6d 89       	ldd	r22, Y+21	; 0x15
    10fe:	7e 89       	ldd	r23, Y+22	; 0x16
    1100:	8f 89       	ldd	r24, Y+23	; 0x17
    1102:	98 8d       	ldd	r25, Y+24	; 0x18
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	3f ef       	ldi	r19, 0xFF	; 255
    1108:	4f e7       	ldi	r20, 0x7F	; 127
    110a:	57 e4       	ldi	r21, 0x47	; 71
    110c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1110:	18 16       	cp	r1, r24
    1112:	4c f5       	brge	.+82     	; 0x1166 <CLCD_voidShiftingSpecialChar+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1114:	69 8d       	ldd	r22, Y+25	; 0x19
    1116:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1118:	8b 8d       	ldd	r24, Y+27	; 0x1b
    111a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 e2       	ldi	r20, 0x20	; 32
    1122:	51 e4       	ldi	r21, 0x41	; 65
    1124:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	bc 01       	movw	r22, r24
    112e:	cd 01       	movw	r24, r26
    1130:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	9c 8b       	std	Y+20, r25	; 0x14
    113a:	8b 8b       	std	Y+19, r24	; 0x13
    113c:	0f c0       	rjmp	.+30     	; 0x115c <CLCD_voidShiftingSpecialChar+0xf8>
    113e:	88 ec       	ldi	r24, 0xC8	; 200
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	9a 8b       	std	Y+18, r25	; 0x12
    1144:	89 8b       	std	Y+17, r24	; 0x11
    1146:	89 89       	ldd	r24, Y+17	; 0x11
    1148:	9a 89       	ldd	r25, Y+18	; 0x12
    114a:	01 97       	sbiw	r24, 0x01	; 1
    114c:	f1 f7       	brne	.-4      	; 0x114a <CLCD_voidShiftingSpecialChar+0xe6>
    114e:	9a 8b       	std	Y+18, r25	; 0x12
    1150:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1152:	8b 89       	ldd	r24, Y+19	; 0x13
    1154:	9c 89       	ldd	r25, Y+20	; 0x14
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	9c 8b       	std	Y+20, r25	; 0x14
    115a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    115c:	8b 89       	ldd	r24, Y+19	; 0x13
    115e:	9c 89       	ldd	r25, Y+20	; 0x14
    1160:	00 97       	sbiw	r24, 0x00	; 0
    1162:	69 f7       	brne	.-38     	; 0x113e <CLCD_voidShiftingSpecialChar+0xda>
    1164:	14 c0       	rjmp	.+40     	; 0x118e <CLCD_voidShiftingSpecialChar+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1166:	6d 89       	ldd	r22, Y+21	; 0x15
    1168:	7e 89       	ldd	r23, Y+22	; 0x16
    116a:	8f 89       	ldd	r24, Y+23	; 0x17
    116c:	98 8d       	ldd	r25, Y+24	; 0x18
    116e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1172:	dc 01       	movw	r26, r24
    1174:	cb 01       	movw	r24, r22
    1176:	9c 8b       	std	Y+20, r25	; 0x14
    1178:	8b 8b       	std	Y+19, r24	; 0x13
    117a:	8b 89       	ldd	r24, Y+19	; 0x13
    117c:	9c 89       	ldd	r25, Y+20	; 0x14
    117e:	98 8b       	std	Y+16, r25	; 0x10
    1180:	8f 87       	std	Y+15, r24	; 0x0f
    1182:	8f 85       	ldd	r24, Y+15	; 0x0f
    1184:	98 89       	ldd	r25, Y+16	; 0x10
    1186:	01 97       	sbiw	r24, 0x01	; 1
    1188:	f1 f7       	brne	.-4      	; 0x1186 <CLCD_voidShiftingSpecialChar+0x122>
    118a:	98 8b       	std	Y+16, r25	; 0x10
    118c:	8f 87       	std	Y+15, r24	; 0x0f
{
	u8 Local_u8Iteration;
	CLCD_u8WriteSpecialCharacter(Copy_pu8Pattern,Copy_u8BlockNum,Copy_u8XPos,Copy_u8YPos);
	if(Copy_u8TypeOfShifting==CLCD_SHIFTING_LEFT)

	for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    118e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1190:	8f 5f       	subi	r24, 0xFF	; 255
    1192:	8d 8f       	std	Y+29, r24	; 0x1d
    1194:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1196:	8b a1       	ldd	r24, Y+35	; 0x23
    1198:	89 17       	cp	r24, r25
    119a:	08 f0       	brcs	.+2      	; 0x119e <CLCD_voidShiftingSpecialChar+0x13a>
    119c:	83 cf       	rjmp	.-250    	; 0x10a4 <CLCD_voidShiftingSpecialChar+0x40>
    119e:	83 c0       	rjmp	.+262    	; 0x12a6 <CLCD_voidShiftingSpecialChar+0x242>
	{

		CLCD_u8SendCommand(0b00011000);		//To Shifting left
		_delay_ms(50);
	}
	else if (Copy_u8TypeOfShifting==CLCD_SHIFTING_RIGHT)
    11a0:	8c a1       	ldd	r24, Y+36	; 0x24
    11a2:	81 30       	cpi	r24, 0x01	; 1
    11a4:	09 f0       	breq	.+2      	; 0x11a8 <CLCD_voidShiftingSpecialChar+0x144>
    11a6:	7f c0       	rjmp	.+254    	; 0x12a6 <CLCD_voidShiftingSpecialChar+0x242>
		for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    11a8:	1d 8e       	std	Y+29, r1	; 0x1d
    11aa:	78 c0       	rjmp	.+240    	; 0x129c <CLCD_voidShiftingSpecialChar+0x238>
		{

			CLCD_u8SendCommand(0b00011100);		//To Shifting left
    11ac:	8c e1       	ldi	r24, 0x1C	; 28
    11ae:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	a8 e4       	ldi	r26, 0x48	; 72
    11b8:	b2 e4       	ldi	r27, 0x42	; 66
    11ba:	8b 87       	std	Y+11, r24	; 0x0b
    11bc:	9c 87       	std	Y+12, r25	; 0x0c
    11be:	ad 87       	std	Y+13, r26	; 0x0d
    11c0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    11c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    11c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    11c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	4a ef       	ldi	r20, 0xFA	; 250
    11d0:	54 e4       	ldi	r21, 0x44	; 68
    11d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	8f 83       	std	Y+7, r24	; 0x07
    11dc:	98 87       	std	Y+8, r25	; 0x08
    11de:	a9 87       	std	Y+9, r26	; 0x09
    11e0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11e2:	6f 81       	ldd	r22, Y+7	; 0x07
    11e4:	78 85       	ldd	r23, Y+8	; 0x08
    11e6:	89 85       	ldd	r24, Y+9	; 0x09
    11e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ea:	20 e0       	ldi	r18, 0x00	; 0
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	40 e8       	ldi	r20, 0x80	; 128
    11f0:	5f e3       	ldi	r21, 0x3F	; 63
    11f2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11f6:	88 23       	and	r24, r24
    11f8:	2c f4       	brge	.+10     	; 0x1204 <CLCD_voidShiftingSpecialChar+0x1a0>
		__ticks = 1;
    11fa:	81 e0       	ldi	r24, 0x01	; 1
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	9e 83       	std	Y+6, r25	; 0x06
    1200:	8d 83       	std	Y+5, r24	; 0x05
    1202:	3f c0       	rjmp	.+126    	; 0x1282 <CLCD_voidShiftingSpecialChar+0x21e>
	else if (__tmp > 65535)
    1204:	6f 81       	ldd	r22, Y+7	; 0x07
    1206:	78 85       	ldd	r23, Y+8	; 0x08
    1208:	89 85       	ldd	r24, Y+9	; 0x09
    120a:	9a 85       	ldd	r25, Y+10	; 0x0a
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	3f ef       	ldi	r19, 0xFF	; 255
    1210:	4f e7       	ldi	r20, 0x7F	; 127
    1212:	57 e4       	ldi	r21, 0x47	; 71
    1214:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1218:	18 16       	cp	r1, r24
    121a:	4c f5       	brge	.+82     	; 0x126e <CLCD_voidShiftingSpecialChar+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    121c:	6b 85       	ldd	r22, Y+11	; 0x0b
    121e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1220:	8d 85       	ldd	r24, Y+13	; 0x0d
    1222:	9e 85       	ldd	r25, Y+14	; 0x0e
    1224:	20 e0       	ldi	r18, 0x00	; 0
    1226:	30 e0       	ldi	r19, 0x00	; 0
    1228:	40 e2       	ldi	r20, 0x20	; 32
    122a:	51 e4       	ldi	r21, 0x41	; 65
    122c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1230:	dc 01       	movw	r26, r24
    1232:	cb 01       	movw	r24, r22
    1234:	bc 01       	movw	r22, r24
    1236:	cd 01       	movw	r24, r26
    1238:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	9e 83       	std	Y+6, r25	; 0x06
    1242:	8d 83       	std	Y+5, r24	; 0x05
    1244:	0f c0       	rjmp	.+30     	; 0x1264 <CLCD_voidShiftingSpecialChar+0x200>
    1246:	88 ec       	ldi	r24, 0xC8	; 200
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	9c 83       	std	Y+4, r25	; 0x04
    124c:	8b 83       	std	Y+3, r24	; 0x03
    124e:	8b 81       	ldd	r24, Y+3	; 0x03
    1250:	9c 81       	ldd	r25, Y+4	; 0x04
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	f1 f7       	brne	.-4      	; 0x1252 <CLCD_voidShiftingSpecialChar+0x1ee>
    1256:	9c 83       	std	Y+4, r25	; 0x04
    1258:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    125a:	8d 81       	ldd	r24, Y+5	; 0x05
    125c:	9e 81       	ldd	r25, Y+6	; 0x06
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	9e 83       	std	Y+6, r25	; 0x06
    1262:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1264:	8d 81       	ldd	r24, Y+5	; 0x05
    1266:	9e 81       	ldd	r25, Y+6	; 0x06
    1268:	00 97       	sbiw	r24, 0x00	; 0
    126a:	69 f7       	brne	.-38     	; 0x1246 <CLCD_voidShiftingSpecialChar+0x1e2>
    126c:	14 c0       	rjmp	.+40     	; 0x1296 <CLCD_voidShiftingSpecialChar+0x232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    126e:	6f 81       	ldd	r22, Y+7	; 0x07
    1270:	78 85       	ldd	r23, Y+8	; 0x08
    1272:	89 85       	ldd	r24, Y+9	; 0x09
    1274:	9a 85       	ldd	r25, Y+10	; 0x0a
    1276:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    127a:	dc 01       	movw	r26, r24
    127c:	cb 01       	movw	r24, r22
    127e:	9e 83       	std	Y+6, r25	; 0x06
    1280:	8d 83       	std	Y+5, r24	; 0x05
    1282:	8d 81       	ldd	r24, Y+5	; 0x05
    1284:	9e 81       	ldd	r25, Y+6	; 0x06
    1286:	9a 83       	std	Y+2, r25	; 0x02
    1288:	89 83       	std	Y+1, r24	; 0x01
    128a:	89 81       	ldd	r24, Y+1	; 0x01
    128c:	9a 81       	ldd	r25, Y+2	; 0x02
    128e:	01 97       	sbiw	r24, 0x01	; 1
    1290:	f1 f7       	brne	.-4      	; 0x128e <CLCD_voidShiftingSpecialChar+0x22a>
    1292:	9a 83       	std	Y+2, r25	; 0x02
    1294:	89 83       	std	Y+1, r24	; 0x01

		CLCD_u8SendCommand(0b00011000);		//To Shifting left
		_delay_ms(50);
	}
	else if (Copy_u8TypeOfShifting==CLCD_SHIFTING_RIGHT)
		for (Local_u8Iteration=0;Local_u8Iteration<=Copy_u8NumOfShiting;Local_u8Iteration++)
    1296:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1298:	8f 5f       	subi	r24, 0xFF	; 255
    129a:	8d 8f       	std	Y+29, r24	; 0x1d
    129c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    129e:	8b a1       	ldd	r24, Y+35	; 0x23
    12a0:	89 17       	cp	r24, r25
    12a2:	08 f0       	brcs	.+2      	; 0x12a6 <CLCD_voidShiftingSpecialChar+0x242>
    12a4:	83 cf       	rjmp	.-250    	; 0x11ac <CLCD_voidShiftingSpecialChar+0x148>

			CLCD_u8SendCommand(0b00011100);		//To Shifting left
			_delay_ms(50);
		}

}
    12a6:	a4 96       	adiw	r28, 0x24	; 36
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	f8 94       	cli
    12ac:	de bf       	out	0x3e, r29	; 62
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	cd bf       	out	0x3d, r28	; 61
    12b2:	cf 91       	pop	r28
    12b4:	df 91       	pop	r29
    12b6:	0f 91       	pop	r16
    12b8:	ef 90       	pop	r14
    12ba:	08 95       	ret

000012bc <CLCD_voidIntialization>:

void CLCD_voidIntialization(void)
{
    12bc:	df 93       	push	r29
    12be:	cf 93       	push	r28
    12c0:	cd b7       	in	r28, 0x3d	; 61
    12c2:	de b7       	in	r29, 0x3e	; 62
    12c4:	2e 97       	sbiw	r28, 0x0e	; 14
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	80 e0       	ldi	r24, 0x00	; 0
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	a0 e2       	ldi	r26, 0x20	; 32
    12d6:	b2 e4       	ldi	r27, 0x42	; 66
    12d8:	8b 87       	std	Y+11, r24	; 0x0b
    12da:	9c 87       	std	Y+12, r25	; 0x0c
    12dc:	ad 87       	std	Y+13, r26	; 0x0d
    12de:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    12e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    12e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    12e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	4a ef       	ldi	r20, 0xFA	; 250
    12ee:	54 e4       	ldi	r21, 0x44	; 68
    12f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12f4:	dc 01       	movw	r26, r24
    12f6:	cb 01       	movw	r24, r22
    12f8:	8f 83       	std	Y+7, r24	; 0x07
    12fa:	98 87       	std	Y+8, r25	; 0x08
    12fc:	a9 87       	std	Y+9, r26	; 0x09
    12fe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1300:	6f 81       	ldd	r22, Y+7	; 0x07
    1302:	78 85       	ldd	r23, Y+8	; 0x08
    1304:	89 85       	ldd	r24, Y+9	; 0x09
    1306:	9a 85       	ldd	r25, Y+10	; 0x0a
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	40 e8       	ldi	r20, 0x80	; 128
    130e:	5f e3       	ldi	r21, 0x3F	; 63
    1310:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1314:	88 23       	and	r24, r24
    1316:	2c f4       	brge	.+10     	; 0x1322 <CLCD_voidIntialization+0x66>
		__ticks = 1;
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	9e 83       	std	Y+6, r25	; 0x06
    131e:	8d 83       	std	Y+5, r24	; 0x05
    1320:	3f c0       	rjmp	.+126    	; 0x13a0 <CLCD_voidIntialization+0xe4>
	else if (__tmp > 65535)
    1322:	6f 81       	ldd	r22, Y+7	; 0x07
    1324:	78 85       	ldd	r23, Y+8	; 0x08
    1326:	89 85       	ldd	r24, Y+9	; 0x09
    1328:	9a 85       	ldd	r25, Y+10	; 0x0a
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	3f ef       	ldi	r19, 0xFF	; 255
    132e:	4f e7       	ldi	r20, 0x7F	; 127
    1330:	57 e4       	ldi	r21, 0x47	; 71
    1332:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1336:	18 16       	cp	r1, r24
    1338:	4c f5       	brge	.+82     	; 0x138c <CLCD_voidIntialization+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    133a:	6b 85       	ldd	r22, Y+11	; 0x0b
    133c:	7c 85       	ldd	r23, Y+12	; 0x0c
    133e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1340:	9e 85       	ldd	r25, Y+14	; 0x0e
    1342:	20 e0       	ldi	r18, 0x00	; 0
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	40 e2       	ldi	r20, 0x20	; 32
    1348:	51 e4       	ldi	r21, 0x41	; 65
    134a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    134e:	dc 01       	movw	r26, r24
    1350:	cb 01       	movw	r24, r22
    1352:	bc 01       	movw	r22, r24
    1354:	cd 01       	movw	r24, r26
    1356:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    135a:	dc 01       	movw	r26, r24
    135c:	cb 01       	movw	r24, r22
    135e:	9e 83       	std	Y+6, r25	; 0x06
    1360:	8d 83       	std	Y+5, r24	; 0x05
    1362:	0f c0       	rjmp	.+30     	; 0x1382 <CLCD_voidIntialization+0xc6>
    1364:	88 ec       	ldi	r24, 0xC8	; 200
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	9c 83       	std	Y+4, r25	; 0x04
    136a:	8b 83       	std	Y+3, r24	; 0x03
    136c:	8b 81       	ldd	r24, Y+3	; 0x03
    136e:	9c 81       	ldd	r25, Y+4	; 0x04
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <CLCD_voidIntialization+0xb4>
    1374:	9c 83       	std	Y+4, r25	; 0x04
    1376:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1378:	8d 81       	ldd	r24, Y+5	; 0x05
    137a:	9e 81       	ldd	r25, Y+6	; 0x06
    137c:	01 97       	sbiw	r24, 0x01	; 1
    137e:	9e 83       	std	Y+6, r25	; 0x06
    1380:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1382:	8d 81       	ldd	r24, Y+5	; 0x05
    1384:	9e 81       	ldd	r25, Y+6	; 0x06
    1386:	00 97       	sbiw	r24, 0x00	; 0
    1388:	69 f7       	brne	.-38     	; 0x1364 <CLCD_voidIntialization+0xa8>
    138a:	14 c0       	rjmp	.+40     	; 0x13b4 <CLCD_voidIntialization+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    138c:	6f 81       	ldd	r22, Y+7	; 0x07
    138e:	78 85       	ldd	r23, Y+8	; 0x08
    1390:	89 85       	ldd	r24, Y+9	; 0x09
    1392:	9a 85       	ldd	r25, Y+10	; 0x0a
    1394:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1398:	dc 01       	movw	r26, r24
    139a:	cb 01       	movw	r24, r22
    139c:	9e 83       	std	Y+6, r25	; 0x06
    139e:	8d 83       	std	Y+5, r24	; 0x05
    13a0:	8d 81       	ldd	r24, Y+5	; 0x05
    13a2:	9e 81       	ldd	r25, Y+6	; 0x06
    13a4:	9a 83       	std	Y+2, r25	; 0x02
    13a6:	89 83       	std	Y+1, r24	; 0x01
    13a8:	89 81       	ldd	r24, Y+1	; 0x01
    13aa:	9a 81       	ldd	r25, Y+2	; 0x02
    13ac:	01 97       	sbiw	r24, 0x01	; 1
    13ae:	f1 f7       	brne	.-4      	; 0x13ac <CLCD_voidIntialization+0xf0>
    13b0:	9a 83       	std	Y+2, r25	; 0x02
    13b2:	89 83       	std	Y+1, r24	; 0x01
	/*wait for 40 ms*/
	_delay_ms(40);
	/*command func set*/
	CLCD_u8SendCommand(0b00111100);
    13b4:	8c e3       	ldi	r24, 0x3C	; 60
    13b6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	/*wait for 39 micro second
 we made delay already on the implementation of SendCommand func */

	/*display on off control : display enable,disable cursor & no blink cursor */
	CLCD_u8SendCommand(0b00001100);
    13ba:	8c e0       	ldi	r24, 0x0C	; 12
    13bc:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

	/*wait for 39 micro second
 we made delay already on the implementation of SendCommand func */

	/*Clear display*/
	CLCD_u8SendCommand(0b00000001);
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>


}
    13c6:	2e 96       	adiw	r28, 0x0e	; 14
    13c8:	0f b6       	in	r0, 0x3f	; 63
    13ca:	f8 94       	cli
    13cc:	de bf       	out	0x3e, r29	; 62
    13ce:	0f be       	out	0x3f, r0	; 63
    13d0:	cd bf       	out	0x3d, r28	; 61
    13d2:	cf 91       	pop	r28
    13d4:	df 91       	pop	r29
    13d6:	08 95       	ret

000013d8 <DIO_u8SetPinValue>:




u8 DIO_u8SetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)
{
    13d8:	df 93       	push	r29
    13da:	cf 93       	push	r28
    13dc:	cd b7       	in	r28, 0x3d	; 61
    13de:	de b7       	in	r29, 0x3e	; 62
    13e0:	28 97       	sbiw	r28, 0x08	; 8
    13e2:	0f b6       	in	r0, 0x3f	; 63
    13e4:	f8 94       	cli
    13e6:	de bf       	out	0x3e, r29	; 62
    13e8:	0f be       	out	0x3f, r0	; 63
    13ea:	cd bf       	out	0x3d, r28	; 61
    13ec:	8a 83       	std	Y+2, r24	; 0x02
    13ee:	6b 83       	std	Y+3, r22	; 0x03
    13f0:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    13f2:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_u8Pin<=DIO_u8PIN7)
    13f4:	8b 81       	ldd	r24, Y+3	; 0x03
    13f6:	88 30       	cpi	r24, 0x08	; 8
    13f8:	08 f0       	brcs	.+2      	; 0x13fc <DIO_u8SetPinValue+0x24>
    13fa:	f4 c0       	rjmp	.+488    	; 0x15e4 <DIO_u8SetPinValue+0x20c>
	{
		if (Copy_u8Value==DIO_u8PIN_LOW)
    13fc:	8c 81       	ldd	r24, Y+4	; 0x04
    13fe:	88 23       	and	r24, r24
    1400:	09 f0       	breq	.+2      	; 0x1404 <DIO_u8SetPinValue+0x2c>
    1402:	77 c0       	rjmp	.+238    	; 0x14f2 <DIO_u8SetPinValue+0x11a>
		{
			switch(Copy_u8Port)
    1404:	8a 81       	ldd	r24, Y+2	; 0x02
    1406:	28 2f       	mov	r18, r24
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	38 87       	std	Y+8, r19	; 0x08
    140c:	2f 83       	std	Y+7, r18	; 0x07
    140e:	8f 81       	ldd	r24, Y+7	; 0x07
    1410:	98 85       	ldd	r25, Y+8	; 0x08
    1412:	81 30       	cpi	r24, 0x01	; 1
    1414:	91 05       	cpc	r25, r1
    1416:	59 f1       	breq	.+86     	; 0x146e <DIO_u8SetPinValue+0x96>
    1418:	2f 81       	ldd	r18, Y+7	; 0x07
    141a:	38 85       	ldd	r19, Y+8	; 0x08
    141c:	22 30       	cpi	r18, 0x02	; 2
    141e:	31 05       	cpc	r19, r1
    1420:	2c f4       	brge	.+10     	; 0x142c <DIO_u8SetPinValue+0x54>
    1422:	8f 81       	ldd	r24, Y+7	; 0x07
    1424:	98 85       	ldd	r25, Y+8	; 0x08
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	69 f0       	breq	.+26     	; 0x1444 <DIO_u8SetPinValue+0x6c>
    142a:	60 c0       	rjmp	.+192    	; 0x14ec <DIO_u8SetPinValue+0x114>
    142c:	2f 81       	ldd	r18, Y+7	; 0x07
    142e:	38 85       	ldd	r19, Y+8	; 0x08
    1430:	22 30       	cpi	r18, 0x02	; 2
    1432:	31 05       	cpc	r19, r1
    1434:	89 f1       	breq	.+98     	; 0x1498 <DIO_u8SetPinValue+0xc0>
    1436:	8f 81       	ldd	r24, Y+7	; 0x07
    1438:	98 85       	ldd	r25, Y+8	; 0x08
    143a:	83 30       	cpi	r24, 0x03	; 3
    143c:	91 05       	cpc	r25, r1
    143e:	09 f4       	brne	.+2      	; 0x1442 <DIO_u8SetPinValue+0x6a>
    1440:	40 c0       	rjmp	.+128    	; 0x14c2 <DIO_u8SetPinValue+0xea>
    1442:	54 c0       	rjmp	.+168    	; 0x14ec <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA : CLR_BIT(PORTA,Copy_u8Pin); break;
    1444:	ab e3       	ldi	r26, 0x3B	; 59
    1446:	b0 e0       	ldi	r27, 0x00	; 0
    1448:	eb e3       	ldi	r30, 0x3B	; 59
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	80 81       	ld	r24, Z
    144e:	48 2f       	mov	r20, r24
    1450:	8b 81       	ldd	r24, Y+3	; 0x03
    1452:	28 2f       	mov	r18, r24
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	81 e0       	ldi	r24, 0x01	; 1
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	02 2e       	mov	r0, r18
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <DIO_u8SetPinValue+0x8a>
    145e:	88 0f       	add	r24, r24
    1460:	99 1f       	adc	r25, r25
    1462:	0a 94       	dec	r0
    1464:	e2 f7       	brpl	.-8      	; 0x145e <DIO_u8SetPinValue+0x86>
    1466:	80 95       	com	r24
    1468:	84 23       	and	r24, r20
    146a:	8c 93       	st	X, r24
    146c:	bd c0       	rjmp	.+378    	; 0x15e8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : CLR_BIT(PORTB,Copy_u8Pin); break;
    146e:	a8 e3       	ldi	r26, 0x38	; 56
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	e8 e3       	ldi	r30, 0x38	; 56
    1474:	f0 e0       	ldi	r31, 0x00	; 0
    1476:	80 81       	ld	r24, Z
    1478:	48 2f       	mov	r20, r24
    147a:	8b 81       	ldd	r24, Y+3	; 0x03
    147c:	28 2f       	mov	r18, r24
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	02 2e       	mov	r0, r18
    1486:	02 c0       	rjmp	.+4      	; 0x148c <DIO_u8SetPinValue+0xb4>
    1488:	88 0f       	add	r24, r24
    148a:	99 1f       	adc	r25, r25
    148c:	0a 94       	dec	r0
    148e:	e2 f7       	brpl	.-8      	; 0x1488 <DIO_u8SetPinValue+0xb0>
    1490:	80 95       	com	r24
    1492:	84 23       	and	r24, r20
    1494:	8c 93       	st	X, r24
    1496:	a8 c0       	rjmp	.+336    	; 0x15e8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : CLR_BIT(PORTC,Copy_u8Pin); break;
    1498:	a5 e3       	ldi	r26, 0x35	; 53
    149a:	b0 e0       	ldi	r27, 0x00	; 0
    149c:	e5 e3       	ldi	r30, 0x35	; 53
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	80 81       	ld	r24, Z
    14a2:	48 2f       	mov	r20, r24
    14a4:	8b 81       	ldd	r24, Y+3	; 0x03
    14a6:	28 2f       	mov	r18, r24
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	02 2e       	mov	r0, r18
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <DIO_u8SetPinValue+0xde>
    14b2:	88 0f       	add	r24, r24
    14b4:	99 1f       	adc	r25, r25
    14b6:	0a 94       	dec	r0
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <DIO_u8SetPinValue+0xda>
    14ba:	80 95       	com	r24
    14bc:	84 23       	and	r24, r20
    14be:	8c 93       	st	X, r24
    14c0:	93 c0       	rjmp	.+294    	; 0x15e8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : CLR_BIT(PORTD,Copy_u8Pin); break;
    14c2:	a2 e3       	ldi	r26, 0x32	; 50
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	e2 e3       	ldi	r30, 0x32	; 50
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	48 2f       	mov	r20, r24
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	28 2f       	mov	r18, r24
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	81 e0       	ldi	r24, 0x01	; 1
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	02 2e       	mov	r0, r18
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <DIO_u8SetPinValue+0x108>
    14dc:	88 0f       	add	r24, r24
    14de:	99 1f       	adc	r25, r25
    14e0:	0a 94       	dec	r0
    14e2:	e2 f7       	brpl	.-8      	; 0x14dc <DIO_u8SetPinValue+0x104>
    14e4:	80 95       	com	r24
    14e6:	84 23       	and	r24, r20
    14e8:	8c 93       	st	X, r24
    14ea:	7e c0       	rjmp	.+252    	; 0x15e8 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1;
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	89 83       	std	Y+1, r24	; 0x01
    14f0:	7b c0       	rjmp	.+246    	; 0x15e8 <DIO_u8SetPinValue+0x210>
			}
		}
		else if (Copy_u8Value==DIO_u8PIN_HIGH)
    14f2:	8c 81       	ldd	r24, Y+4	; 0x04
    14f4:	81 30       	cpi	r24, 0x01	; 1
    14f6:	09 f0       	breq	.+2      	; 0x14fa <DIO_u8SetPinValue+0x122>
    14f8:	72 c0       	rjmp	.+228    	; 0x15de <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
    14fa:	8a 81       	ldd	r24, Y+2	; 0x02
    14fc:	28 2f       	mov	r18, r24
    14fe:	30 e0       	ldi	r19, 0x00	; 0
    1500:	3e 83       	std	Y+6, r19	; 0x06
    1502:	2d 83       	std	Y+5, r18	; 0x05
    1504:	8d 81       	ldd	r24, Y+5	; 0x05
    1506:	9e 81       	ldd	r25, Y+6	; 0x06
    1508:	81 30       	cpi	r24, 0x01	; 1
    150a:	91 05       	cpc	r25, r1
    150c:	49 f1       	breq	.+82     	; 0x1560 <DIO_u8SetPinValue+0x188>
    150e:	2d 81       	ldd	r18, Y+5	; 0x05
    1510:	3e 81       	ldd	r19, Y+6	; 0x06
    1512:	22 30       	cpi	r18, 0x02	; 2
    1514:	31 05       	cpc	r19, r1
    1516:	2c f4       	brge	.+10     	; 0x1522 <DIO_u8SetPinValue+0x14a>
    1518:	8d 81       	ldd	r24, Y+5	; 0x05
    151a:	9e 81       	ldd	r25, Y+6	; 0x06
    151c:	00 97       	sbiw	r24, 0x00	; 0
    151e:	61 f0       	breq	.+24     	; 0x1538 <DIO_u8SetPinValue+0x160>
    1520:	5b c0       	rjmp	.+182    	; 0x15d8 <DIO_u8SetPinValue+0x200>
    1522:	2d 81       	ldd	r18, Y+5	; 0x05
    1524:	3e 81       	ldd	r19, Y+6	; 0x06
    1526:	22 30       	cpi	r18, 0x02	; 2
    1528:	31 05       	cpc	r19, r1
    152a:	71 f1       	breq	.+92     	; 0x1588 <DIO_u8SetPinValue+0x1b0>
    152c:	8d 81       	ldd	r24, Y+5	; 0x05
    152e:	9e 81       	ldd	r25, Y+6	; 0x06
    1530:	83 30       	cpi	r24, 0x03	; 3
    1532:	91 05       	cpc	r25, r1
    1534:	e9 f1       	breq	.+122    	; 0x15b0 <DIO_u8SetPinValue+0x1d8>
    1536:	50 c0       	rjmp	.+160    	; 0x15d8 <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA : SET_BIT(PORTA,Copy_u8Pin); break;
    1538:	ab e3       	ldi	r26, 0x3B	; 59
    153a:	b0 e0       	ldi	r27, 0x00	; 0
    153c:	eb e3       	ldi	r30, 0x3B	; 59
    153e:	f0 e0       	ldi	r31, 0x00	; 0
    1540:	80 81       	ld	r24, Z
    1542:	48 2f       	mov	r20, r24
    1544:	8b 81       	ldd	r24, Y+3	; 0x03
    1546:	28 2f       	mov	r18, r24
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	81 e0       	ldi	r24, 0x01	; 1
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	02 2e       	mov	r0, r18
    1550:	02 c0       	rjmp	.+4      	; 0x1556 <DIO_u8SetPinValue+0x17e>
    1552:	88 0f       	add	r24, r24
    1554:	99 1f       	adc	r25, r25
    1556:	0a 94       	dec	r0
    1558:	e2 f7       	brpl	.-8      	; 0x1552 <DIO_u8SetPinValue+0x17a>
    155a:	84 2b       	or	r24, r20
    155c:	8c 93       	st	X, r24
    155e:	44 c0       	rjmp	.+136    	; 0x15e8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : SET_BIT(PORTB,Copy_u8Pin); break;
    1560:	a8 e3       	ldi	r26, 0x38	; 56
    1562:	b0 e0       	ldi	r27, 0x00	; 0
    1564:	e8 e3       	ldi	r30, 0x38	; 56
    1566:	f0 e0       	ldi	r31, 0x00	; 0
    1568:	80 81       	ld	r24, Z
    156a:	48 2f       	mov	r20, r24
    156c:	8b 81       	ldd	r24, Y+3	; 0x03
    156e:	28 2f       	mov	r18, r24
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	81 e0       	ldi	r24, 0x01	; 1
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	02 2e       	mov	r0, r18
    1578:	02 c0       	rjmp	.+4      	; 0x157e <DIO_u8SetPinValue+0x1a6>
    157a:	88 0f       	add	r24, r24
    157c:	99 1f       	adc	r25, r25
    157e:	0a 94       	dec	r0
    1580:	e2 f7       	brpl	.-8      	; 0x157a <DIO_u8SetPinValue+0x1a2>
    1582:	84 2b       	or	r24, r20
    1584:	8c 93       	st	X, r24
    1586:	30 c0       	rjmp	.+96     	; 0x15e8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : SET_BIT(PORTC,Copy_u8Pin); break;
    1588:	a5 e3       	ldi	r26, 0x35	; 53
    158a:	b0 e0       	ldi	r27, 0x00	; 0
    158c:	e5 e3       	ldi	r30, 0x35	; 53
    158e:	f0 e0       	ldi	r31, 0x00	; 0
    1590:	80 81       	ld	r24, Z
    1592:	48 2f       	mov	r20, r24
    1594:	8b 81       	ldd	r24, Y+3	; 0x03
    1596:	28 2f       	mov	r18, r24
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	02 2e       	mov	r0, r18
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <DIO_u8SetPinValue+0x1ce>
    15a2:	88 0f       	add	r24, r24
    15a4:	99 1f       	adc	r25, r25
    15a6:	0a 94       	dec	r0
    15a8:	e2 f7       	brpl	.-8      	; 0x15a2 <DIO_u8SetPinValue+0x1ca>
    15aa:	84 2b       	or	r24, r20
    15ac:	8c 93       	st	X, r24
    15ae:	1c c0       	rjmp	.+56     	; 0x15e8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : SET_BIT(PORTD,Copy_u8Pin); break;
    15b0:	a2 e3       	ldi	r26, 0x32	; 50
    15b2:	b0 e0       	ldi	r27, 0x00	; 0
    15b4:	e2 e3       	ldi	r30, 0x32	; 50
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	80 81       	ld	r24, Z
    15ba:	48 2f       	mov	r20, r24
    15bc:	8b 81       	ldd	r24, Y+3	; 0x03
    15be:	28 2f       	mov	r18, r24
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	02 2e       	mov	r0, r18
    15c8:	02 c0       	rjmp	.+4      	; 0x15ce <DIO_u8SetPinValue+0x1f6>
    15ca:	88 0f       	add	r24, r24
    15cc:	99 1f       	adc	r25, r25
    15ce:	0a 94       	dec	r0
    15d0:	e2 f7       	brpl	.-8      	; 0x15ca <DIO_u8SetPinValue+0x1f2>
    15d2:	84 2b       	or	r24, r20
    15d4:	8c 93       	st	X, r24
    15d6:	08 c0       	rjmp	.+16     	; 0x15e8 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1;
    15d8:	81 e0       	ldi	r24, 0x01	; 1
    15da:	89 83       	std	Y+1, r24	; 0x01
    15dc:	05 c0       	rjmp	.+10     	; 0x15e8 <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8ErrorState=1;
    15de:	81 e0       	ldi	r24, 0x01	; 1
    15e0:	89 83       	std	Y+1, r24	; 0x01
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8ErrorState=1;
    15e4:	81 e0       	ldi	r24, 0x01	; 1
    15e6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    15e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    15ea:	28 96       	adiw	r28, 0x08	; 8
    15ec:	0f b6       	in	r0, 0x3f	; 63
    15ee:	f8 94       	cli
    15f0:	de bf       	out	0x3e, r29	; 62
    15f2:	0f be       	out	0x3f, r0	; 63
    15f4:	cd bf       	out	0x3d, r28	; 61
    15f6:	cf 91       	pop	r28
    15f8:	df 91       	pop	r29
    15fa:	08 95       	ret

000015fc <DIO_u8SetPortValue>:
u8 DIO_u8SetPortValue(u8 Copy_u8Port , u8 Copy_u8Value)
{
    15fc:	df 93       	push	r29
    15fe:	cf 93       	push	r28
    1600:	00 d0       	rcall	.+0      	; 0x1602 <DIO_u8SetPortValue+0x6>
    1602:	00 d0       	rcall	.+0      	; 0x1604 <DIO_u8SetPortValue+0x8>
    1604:	0f 92       	push	r0
    1606:	cd b7       	in	r28, 0x3d	; 61
    1608:	de b7       	in	r29, 0x3e	; 62
    160a:	8a 83       	std	Y+2, r24	; 0x02
    160c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
    160e:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    1610:	8a 81       	ldd	r24, Y+2	; 0x02
    1612:	28 2f       	mov	r18, r24
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	3d 83       	std	Y+5, r19	; 0x05
    1618:	2c 83       	std	Y+4, r18	; 0x04
    161a:	8c 81       	ldd	r24, Y+4	; 0x04
    161c:	9d 81       	ldd	r25, Y+5	; 0x05
    161e:	81 30       	cpi	r24, 0x01	; 1
    1620:	91 05       	cpc	r25, r1
    1622:	d1 f0       	breq	.+52     	; 0x1658 <DIO_u8SetPortValue+0x5c>
    1624:	2c 81       	ldd	r18, Y+4	; 0x04
    1626:	3d 81       	ldd	r19, Y+5	; 0x05
    1628:	22 30       	cpi	r18, 0x02	; 2
    162a:	31 05       	cpc	r19, r1
    162c:	2c f4       	brge	.+10     	; 0x1638 <DIO_u8SetPortValue+0x3c>
    162e:	8c 81       	ldd	r24, Y+4	; 0x04
    1630:	9d 81       	ldd	r25, Y+5	; 0x05
    1632:	00 97       	sbiw	r24, 0x00	; 0
    1634:	61 f0       	breq	.+24     	; 0x164e <DIO_u8SetPortValue+0x52>
    1636:	1f c0       	rjmp	.+62     	; 0x1676 <DIO_u8SetPortValue+0x7a>
    1638:	2c 81       	ldd	r18, Y+4	; 0x04
    163a:	3d 81       	ldd	r19, Y+5	; 0x05
    163c:	22 30       	cpi	r18, 0x02	; 2
    163e:	31 05       	cpc	r19, r1
    1640:	81 f0       	breq	.+32     	; 0x1662 <DIO_u8SetPortValue+0x66>
    1642:	8c 81       	ldd	r24, Y+4	; 0x04
    1644:	9d 81       	ldd	r25, Y+5	; 0x05
    1646:	83 30       	cpi	r24, 0x03	; 3
    1648:	91 05       	cpc	r25, r1
    164a:	81 f0       	breq	.+32     	; 0x166c <DIO_u8SetPortValue+0x70>
    164c:	14 c0       	rjmp	.+40     	; 0x1676 <DIO_u8SetPortValue+0x7a>
	{
	case DIO_u8PORTA: PORTA=Copy_u8Value; break;
    164e:	eb e3       	ldi	r30, 0x3B	; 59
    1650:	f0 e0       	ldi	r31, 0x00	; 0
    1652:	8b 81       	ldd	r24, Y+3	; 0x03
    1654:	80 83       	st	Z, r24
    1656:	11 c0       	rjmp	.+34     	; 0x167a <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTB: PORTB=Copy_u8Value; break;
    1658:	e8 e3       	ldi	r30, 0x38	; 56
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	8b 81       	ldd	r24, Y+3	; 0x03
    165e:	80 83       	st	Z, r24
    1660:	0c c0       	rjmp	.+24     	; 0x167a <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTC: PORTC=Copy_u8Value; break;
    1662:	e5 e3       	ldi	r30, 0x35	; 53
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	80 83       	st	Z, r24
    166a:	07 c0       	rjmp	.+14     	; 0x167a <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTD: PORTD=Copy_u8Value; break;
    166c:	e2 e3       	ldi	r30, 0x32	; 50
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	8b 81       	ldd	r24, Y+3	; 0x03
    1672:	80 83       	st	Z, r24
    1674:	02 c0       	rjmp	.+4      	; 0x167a <DIO_u8SetPortValue+0x7e>
	default : Local_u8ErrorState=1;
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    167a:	89 81       	ldd	r24, Y+1	; 0x01
}
    167c:	0f 90       	pop	r0
    167e:	0f 90       	pop	r0
    1680:	0f 90       	pop	r0
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	cf 91       	pop	r28
    1688:	df 91       	pop	r29
    168a:	08 95       	ret

0000168c <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8* Copy_pu8Value)
{
    168c:	df 93       	push	r29
    168e:	cf 93       	push	r28
    1690:	cd b7       	in	r28, 0x3d	; 61
    1692:	de b7       	in	r29, 0x3e	; 62
    1694:	27 97       	sbiw	r28, 0x07	; 7
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	f8 94       	cli
    169a:	de bf       	out	0x3e, r29	; 62
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	cd bf       	out	0x3d, r28	; 61
    16a0:	8a 83       	std	Y+2, r24	; 0x02
    16a2:	6b 83       	std	Y+3, r22	; 0x03
    16a4:	5d 83       	std	Y+5, r21	; 0x05
    16a6:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    16a8:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_pu8Value!=NULL)&&(Copy_u8Pin<=DIO_u8PIN7))
    16aa:	8c 81       	ldd	r24, Y+4	; 0x04
    16ac:	9d 81       	ldd	r25, Y+5	; 0x05
    16ae:	00 97       	sbiw	r24, 0x00	; 0
    16b0:	09 f4       	brne	.+2      	; 0x16b4 <DIO_u8GetPinValue+0x28>
    16b2:	78 c0       	rjmp	.+240    	; 0x17a4 <DIO_u8GetPinValue+0x118>
    16b4:	8b 81       	ldd	r24, Y+3	; 0x03
    16b6:	88 30       	cpi	r24, 0x08	; 8
    16b8:	08 f0       	brcs	.+2      	; 0x16bc <DIO_u8GetPinValue+0x30>
    16ba:	74 c0       	rjmp	.+232    	; 0x17a4 <DIO_u8GetPinValue+0x118>
	{
		switch(Copy_u8Port)
    16bc:	8a 81       	ldd	r24, Y+2	; 0x02
    16be:	28 2f       	mov	r18, r24
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	3f 83       	std	Y+7, r19	; 0x07
    16c4:	2e 83       	std	Y+6, r18	; 0x06
    16c6:	4e 81       	ldd	r20, Y+6	; 0x06
    16c8:	5f 81       	ldd	r21, Y+7	; 0x07
    16ca:	41 30       	cpi	r20, 0x01	; 1
    16cc:	51 05       	cpc	r21, r1
    16ce:	59 f1       	breq	.+86     	; 0x1726 <DIO_u8GetPinValue+0x9a>
    16d0:	8e 81       	ldd	r24, Y+6	; 0x06
    16d2:	9f 81       	ldd	r25, Y+7	; 0x07
    16d4:	82 30       	cpi	r24, 0x02	; 2
    16d6:	91 05       	cpc	r25, r1
    16d8:	34 f4       	brge	.+12     	; 0x16e6 <DIO_u8GetPinValue+0x5a>
    16da:	2e 81       	ldd	r18, Y+6	; 0x06
    16dc:	3f 81       	ldd	r19, Y+7	; 0x07
    16de:	21 15       	cp	r18, r1
    16e0:	31 05       	cpc	r19, r1
    16e2:	69 f0       	breq	.+26     	; 0x16fe <DIO_u8GetPinValue+0x72>
    16e4:	5c c0       	rjmp	.+184    	; 0x179e <DIO_u8GetPinValue+0x112>
    16e6:	4e 81       	ldd	r20, Y+6	; 0x06
    16e8:	5f 81       	ldd	r21, Y+7	; 0x07
    16ea:	42 30       	cpi	r20, 0x02	; 2
    16ec:	51 05       	cpc	r21, r1
    16ee:	79 f1       	breq	.+94     	; 0x174e <DIO_u8GetPinValue+0xc2>
    16f0:	8e 81       	ldd	r24, Y+6	; 0x06
    16f2:	9f 81       	ldd	r25, Y+7	; 0x07
    16f4:	83 30       	cpi	r24, 0x03	; 3
    16f6:	91 05       	cpc	r25, r1
    16f8:	09 f4       	brne	.+2      	; 0x16fc <DIO_u8GetPinValue+0x70>
    16fa:	3d c0       	rjmp	.+122    	; 0x1776 <DIO_u8GetPinValue+0xea>
    16fc:	50 c0       	rjmp	.+160    	; 0x179e <DIO_u8GetPinValue+0x112>
		{
		case DIO_u8PORTA: *Copy_pu8Value=GET_BIT(PINA,Copy_u8Pin); break;
    16fe:	e9 e3       	ldi	r30, 0x39	; 57
    1700:	f0 e0       	ldi	r31, 0x00	; 0
    1702:	80 81       	ld	r24, Z
    1704:	28 2f       	mov	r18, r24
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	8b 81       	ldd	r24, Y+3	; 0x03
    170a:	88 2f       	mov	r24, r24
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	a9 01       	movw	r20, r18
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <DIO_u8GetPinValue+0x8a>
    1712:	55 95       	asr	r21
    1714:	47 95       	ror	r20
    1716:	8a 95       	dec	r24
    1718:	e2 f7       	brpl	.-8      	; 0x1712 <DIO_u8GetPinValue+0x86>
    171a:	ca 01       	movw	r24, r20
    171c:	81 70       	andi	r24, 0x01	; 1
    171e:	ec 81       	ldd	r30, Y+4	; 0x04
    1720:	fd 81       	ldd	r31, Y+5	; 0x05
    1722:	80 83       	st	Z, r24
    1724:	41 c0       	rjmp	.+130    	; 0x17a8 <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTB: *Copy_pu8Value=GET_BIT(PINB,Copy_u8Pin); break;
    1726:	e6 e3       	ldi	r30, 0x36	; 54
    1728:	f0 e0       	ldi	r31, 0x00	; 0
    172a:	80 81       	ld	r24, Z
    172c:	28 2f       	mov	r18, r24
    172e:	30 e0       	ldi	r19, 0x00	; 0
    1730:	8b 81       	ldd	r24, Y+3	; 0x03
    1732:	88 2f       	mov	r24, r24
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	a9 01       	movw	r20, r18
    1738:	02 c0       	rjmp	.+4      	; 0x173e <DIO_u8GetPinValue+0xb2>
    173a:	55 95       	asr	r21
    173c:	47 95       	ror	r20
    173e:	8a 95       	dec	r24
    1740:	e2 f7       	brpl	.-8      	; 0x173a <DIO_u8GetPinValue+0xae>
    1742:	ca 01       	movw	r24, r20
    1744:	81 70       	andi	r24, 0x01	; 1
    1746:	ec 81       	ldd	r30, Y+4	; 0x04
    1748:	fd 81       	ldd	r31, Y+5	; 0x05
    174a:	80 83       	st	Z, r24
    174c:	2d c0       	rjmp	.+90     	; 0x17a8 <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTC: *Copy_pu8Value=GET_BIT(PINC,Copy_u8Pin); break;
    174e:	e3 e3       	ldi	r30, 0x33	; 51
    1750:	f0 e0       	ldi	r31, 0x00	; 0
    1752:	80 81       	ld	r24, Z
    1754:	28 2f       	mov	r18, r24
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	8b 81       	ldd	r24, Y+3	; 0x03
    175a:	88 2f       	mov	r24, r24
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	a9 01       	movw	r20, r18
    1760:	02 c0       	rjmp	.+4      	; 0x1766 <DIO_u8GetPinValue+0xda>
    1762:	55 95       	asr	r21
    1764:	47 95       	ror	r20
    1766:	8a 95       	dec	r24
    1768:	e2 f7       	brpl	.-8      	; 0x1762 <DIO_u8GetPinValue+0xd6>
    176a:	ca 01       	movw	r24, r20
    176c:	81 70       	andi	r24, 0x01	; 1
    176e:	ec 81       	ldd	r30, Y+4	; 0x04
    1770:	fd 81       	ldd	r31, Y+5	; 0x05
    1772:	80 83       	st	Z, r24
    1774:	19 c0       	rjmp	.+50     	; 0x17a8 <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTD: *Copy_pu8Value=GET_BIT(PIND,Copy_u8Pin); break;
    1776:	e0 e3       	ldi	r30, 0x30	; 48
    1778:	f0 e0       	ldi	r31, 0x00	; 0
    177a:	80 81       	ld	r24, Z
    177c:	28 2f       	mov	r18, r24
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	8b 81       	ldd	r24, Y+3	; 0x03
    1782:	88 2f       	mov	r24, r24
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	a9 01       	movw	r20, r18
    1788:	02 c0       	rjmp	.+4      	; 0x178e <DIO_u8GetPinValue+0x102>
    178a:	55 95       	asr	r21
    178c:	47 95       	ror	r20
    178e:	8a 95       	dec	r24
    1790:	e2 f7       	brpl	.-8      	; 0x178a <DIO_u8GetPinValue+0xfe>
    1792:	ca 01       	movw	r24, r20
    1794:	81 70       	andi	r24, 0x01	; 1
    1796:	ec 81       	ldd	r30, Y+4	; 0x04
    1798:	fd 81       	ldd	r31, Y+5	; 0x05
    179a:	80 83       	st	Z, r24
    179c:	05 c0       	rjmp	.+10     	; 0x17a8 <DIO_u8GetPinValue+0x11c>
		default : Local_u8ErrorState=1;
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	89 83       	std	Y+1, r24	; 0x01
    17a2:	02 c0       	rjmp	.+4      	; 0x17a8 <DIO_u8GetPinValue+0x11c>
		}
	}
	else Local_u8ErrorState=1;
    17a4:	81 e0       	ldi	r24, 0x01	; 1
    17a6:	89 83       	std	Y+1, r24	; 0x01

	return Local_u8ErrorState;
    17a8:	89 81       	ldd	r24, Y+1	; 0x01
}
    17aa:	27 96       	adiw	r28, 0x07	; 7
    17ac:	0f b6       	in	r0, 0x3f	; 63
    17ae:	f8 94       	cli
    17b0:	de bf       	out	0x3e, r29	; 62
    17b2:	0f be       	out	0x3f, r0	; 63
    17b4:	cd bf       	out	0x3d, r28	; 61
    17b6:	cf 91       	pop	r28
    17b8:	df 91       	pop	r29
    17ba:	08 95       	ret

000017bc <PORT_voidInit>:
#include "PORT_interface.h"
#include "PORT_register.h"


void PORT_voidInit(void)
{
    17bc:	df 93       	push	r29
    17be:	cf 93       	push	r28
    17c0:	cd b7       	in	r28, 0x3d	; 61
    17c2:	de b7       	in	r29, 0x3e	; 62
	
	DDRA=PORTA_DIR;
    17c4:	ea e3       	ldi	r30, 0x3A	; 58
    17c6:	f0 e0       	ldi	r31, 0x00	; 0
    17c8:	8f ef       	ldi	r24, 0xFF	; 255
    17ca:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
    17cc:	e7 e3       	ldi	r30, 0x37	; 55
    17ce:	f0 e0       	ldi	r31, 0x00	; 0
    17d0:	87 e0       	ldi	r24, 0x07	; 7
    17d2:	80 83       	st	Z, r24
	DDRC=PORTC_DIR;
    17d4:	e4 e3       	ldi	r30, 0x34	; 52
    17d6:	f0 e0       	ldi	r31, 0x00	; 0
    17d8:	10 82       	st	Z, r1
	DDRD=PORTD_DIR;
    17da:	e1 e3       	ldi	r30, 0x31	; 49
    17dc:	f0 e0       	ldi	r31, 0x00	; 0
    17de:	10 82       	st	Z, r1
	
	PORTA=PORTA_INITIAL_VALUE;
    17e0:	eb e3       	ldi	r30, 0x3B	; 59
    17e2:	f0 e0       	ldi	r31, 0x00	; 0
    17e4:	10 82       	st	Z, r1
	PORTB=PORTB_INITIAL_VALUE;
    17e6:	e8 e3       	ldi	r30, 0x38	; 56
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	10 82       	st	Z, r1
	PORTC=PORTC_INITIAL_VALUE;
    17ec:	e5 e3       	ldi	r30, 0x35	; 53
    17ee:	f0 e0       	ldi	r31, 0x00	; 0
    17f0:	10 82       	st	Z, r1
	PORTD=PORTD_INITIAL_VALUE;
    17f2:	e2 e3       	ldi	r30, 0x32	; 50
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	10 82       	st	Z, r1
	
	
}
    17f8:	cf 91       	pop	r28
    17fa:	df 91       	pop	r29
    17fc:	08 95       	ret

000017fe <main>:
#include"CLCD_interface.h"
#include<util/delay.h>
#include"PORT_interface.h"

void main (void)
{
    17fe:	0f 93       	push	r16
    1800:	1f 93       	push	r17
    1802:	df 93       	push	r29
    1804:	cf 93       	push	r28
    1806:	cd b7       	in	r28, 0x3d	; 61
    1808:	de b7       	in	r29, 0x3e	; 62
    180a:	c0 56       	subi	r28, 0x60	; 96
    180c:	d2 40       	sbci	r29, 0x02	; 2
    180e:	0f b6       	in	r0, 0x3f	; 63
    1810:	f8 94       	cli
    1812:	de bf       	out	0x3e, r29	; 62
    1814:	0f be       	out	0x3f, r0	; 63
    1816:	cd bf       	out	0x3d, r28	; 61

	PORT_voidInit();
    1818:	0e 94 de 0b 	call	0x17bc	; 0x17bc <PORT_voidInit>
	CLCD_voidIntialization();
    181c:	0e 94 5e 09 	call	0x12bc	; 0x12bc <CLCD_voidIntialization>

	char Hello[]={"Hello"};
    1820:	ce 01       	movw	r24, r28
    1822:	81 58       	subi	r24, 0x81	; 129
    1824:	9e 4f       	sbci	r25, 0xFE	; 254
    1826:	c7 5c       	subi	r28, 0xC7	; 199
    1828:	dd 4f       	sbci	r29, 0xFD	; 253
    182a:	99 83       	std	Y+1, r25	; 0x01
    182c:	88 83       	st	Y, r24
    182e:	c9 53       	subi	r28, 0x39	; 57
    1830:	d2 40       	sbci	r29, 0x02	; 2
    1832:	80 e6       	ldi	r24, 0x60	; 96
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	c5 5c       	subi	r28, 0xC5	; 197
    1838:	dd 4f       	sbci	r29, 0xFD	; 253
    183a:	99 83       	std	Y+1, r25	; 0x01
    183c:	88 83       	st	Y, r24
    183e:	cb 53       	subi	r28, 0x3B	; 59
    1840:	d2 40       	sbci	r29, 0x02	; 2
    1842:	96 e0       	ldi	r25, 0x06	; 6
    1844:	c3 5c       	subi	r28, 0xC3	; 195
    1846:	dd 4f       	sbci	r29, 0xFD	; 253
    1848:	98 83       	st	Y, r25
    184a:	cd 53       	subi	r28, 0x3D	; 61
    184c:	d2 40       	sbci	r29, 0x02	; 2
    184e:	c5 5c       	subi	r28, 0xC5	; 197
    1850:	dd 4f       	sbci	r29, 0xFD	; 253
    1852:	a8 81       	ld	r26, Y
    1854:	b9 81       	ldd	r27, Y+1	; 0x01
    1856:	cb 53       	subi	r28, 0x3B	; 59
    1858:	d2 40       	sbci	r29, 0x02	; 2
    185a:	0c 90       	ld	r0, X
    185c:	c5 5c       	subi	r28, 0xC5	; 197
    185e:	dd 4f       	sbci	r29, 0xFD	; 253
    1860:	e8 81       	ld	r30, Y
    1862:	f9 81       	ldd	r31, Y+1	; 0x01
    1864:	cb 53       	subi	r28, 0x3B	; 59
    1866:	d2 40       	sbci	r29, 0x02	; 2
    1868:	31 96       	adiw	r30, 0x01	; 1
    186a:	c5 5c       	subi	r28, 0xC5	; 197
    186c:	dd 4f       	sbci	r29, 0xFD	; 253
    186e:	f9 83       	std	Y+1, r31	; 0x01
    1870:	e8 83       	st	Y, r30
    1872:	cb 53       	subi	r28, 0x3B	; 59
    1874:	d2 40       	sbci	r29, 0x02	; 2
    1876:	c7 5c       	subi	r28, 0xC7	; 199
    1878:	dd 4f       	sbci	r29, 0xFD	; 253
    187a:	a8 81       	ld	r26, Y
    187c:	b9 81       	ldd	r27, Y+1	; 0x01
    187e:	c9 53       	subi	r28, 0x39	; 57
    1880:	d2 40       	sbci	r29, 0x02	; 2
    1882:	0c 92       	st	X, r0
    1884:	c7 5c       	subi	r28, 0xC7	; 199
    1886:	dd 4f       	sbci	r29, 0xFD	; 253
    1888:	e8 81       	ld	r30, Y
    188a:	f9 81       	ldd	r31, Y+1	; 0x01
    188c:	c9 53       	subi	r28, 0x39	; 57
    188e:	d2 40       	sbci	r29, 0x02	; 2
    1890:	31 96       	adiw	r30, 0x01	; 1
    1892:	c7 5c       	subi	r28, 0xC7	; 199
    1894:	dd 4f       	sbci	r29, 0xFD	; 253
    1896:	f9 83       	std	Y+1, r31	; 0x01
    1898:	e8 83       	st	Y, r30
    189a:	c9 53       	subi	r28, 0x39	; 57
    189c:	d2 40       	sbci	r29, 0x02	; 2
    189e:	c3 5c       	subi	r28, 0xC3	; 195
    18a0:	dd 4f       	sbci	r29, 0xFD	; 253
    18a2:	f8 81       	ld	r31, Y
    18a4:	cd 53       	subi	r28, 0x3D	; 61
    18a6:	d2 40       	sbci	r29, 0x02	; 2
    18a8:	f1 50       	subi	r31, 0x01	; 1
    18aa:	c3 5c       	subi	r28, 0xC3	; 195
    18ac:	dd 4f       	sbci	r29, 0xFD	; 253
    18ae:	f8 83       	st	Y, r31
    18b0:	cd 53       	subi	r28, 0x3D	; 61
    18b2:	d2 40       	sbci	r29, 0x02	; 2
    18b4:	c3 5c       	subi	r28, 0xC3	; 195
    18b6:	dd 4f       	sbci	r29, 0xFD	; 253
    18b8:	88 81       	ld	r24, Y
    18ba:	cd 53       	subi	r28, 0x3D	; 61
    18bc:	d2 40       	sbci	r29, 0x02	; 2
    18be:	88 23       	and	r24, r24
    18c0:	31 f6       	brne	.-116    	; 0x184e <main+0x50>
	char statement1[]={"I'm"};
    18c2:	fe 01       	movw	r30, r28
    18c4:	eb 57       	subi	r30, 0x7B	; 123
    18c6:	fe 4f       	sbci	r31, 0xFE	; 254
    18c8:	80 91 66 00 	lds	r24, 0x0066
    18cc:	90 91 67 00 	lds	r25, 0x0067
    18d0:	a0 91 68 00 	lds	r26, 0x0068
    18d4:	b0 91 69 00 	lds	r27, 0x0069
    18d8:	80 83       	st	Z, r24
    18da:	91 83       	std	Z+1, r25	; 0x01
    18dc:	a2 83       	std	Z+2, r26	; 0x02
    18de:	b3 83       	std	Z+3, r27	; 0x03
	char statement2[]={"Rokba"};
    18e0:	ce 01       	movw	r24, r28
    18e2:	87 57       	subi	r24, 0x77	; 119
    18e4:	9e 4f       	sbci	r25, 0xFE	; 254
    18e6:	c2 5c       	subi	r28, 0xC2	; 194
    18e8:	dd 4f       	sbci	r29, 0xFD	; 253
    18ea:	99 83       	std	Y+1, r25	; 0x01
    18ec:	88 83       	st	Y, r24
    18ee:	ce 53       	subi	r28, 0x3E	; 62
    18f0:	d2 40       	sbci	r29, 0x02	; 2
    18f2:	aa e6       	ldi	r26, 0x6A	; 106
    18f4:	b0 e0       	ldi	r27, 0x00	; 0
    18f6:	c0 5c       	subi	r28, 0xC0	; 192
    18f8:	dd 4f       	sbci	r29, 0xFD	; 253
    18fa:	b9 83       	std	Y+1, r27	; 0x01
    18fc:	a8 83       	st	Y, r26
    18fe:	c0 54       	subi	r28, 0x40	; 64
    1900:	d2 40       	sbci	r29, 0x02	; 2
    1902:	b6 e0       	ldi	r27, 0x06	; 6
    1904:	ce 5b       	subi	r28, 0xBE	; 190
    1906:	dd 4f       	sbci	r29, 0xFD	; 253
    1908:	b8 83       	st	Y, r27
    190a:	c2 54       	subi	r28, 0x42	; 66
    190c:	d2 40       	sbci	r29, 0x02	; 2
    190e:	c0 5c       	subi	r28, 0xC0	; 192
    1910:	dd 4f       	sbci	r29, 0xFD	; 253
    1912:	e8 81       	ld	r30, Y
    1914:	f9 81       	ldd	r31, Y+1	; 0x01
    1916:	c0 54       	subi	r28, 0x40	; 64
    1918:	d2 40       	sbci	r29, 0x02	; 2
    191a:	00 80       	ld	r0, Z
    191c:	c0 5c       	subi	r28, 0xC0	; 192
    191e:	dd 4f       	sbci	r29, 0xFD	; 253
    1920:	88 81       	ld	r24, Y
    1922:	99 81       	ldd	r25, Y+1	; 0x01
    1924:	c0 54       	subi	r28, 0x40	; 64
    1926:	d2 40       	sbci	r29, 0x02	; 2
    1928:	01 96       	adiw	r24, 0x01	; 1
    192a:	c0 5c       	subi	r28, 0xC0	; 192
    192c:	dd 4f       	sbci	r29, 0xFD	; 253
    192e:	99 83       	std	Y+1, r25	; 0x01
    1930:	88 83       	st	Y, r24
    1932:	c0 54       	subi	r28, 0x40	; 64
    1934:	d2 40       	sbci	r29, 0x02	; 2
    1936:	c2 5c       	subi	r28, 0xC2	; 194
    1938:	dd 4f       	sbci	r29, 0xFD	; 253
    193a:	a8 81       	ld	r26, Y
    193c:	b9 81       	ldd	r27, Y+1	; 0x01
    193e:	ce 53       	subi	r28, 0x3E	; 62
    1940:	d2 40       	sbci	r29, 0x02	; 2
    1942:	0c 92       	st	X, r0
    1944:	c2 5c       	subi	r28, 0xC2	; 194
    1946:	dd 4f       	sbci	r29, 0xFD	; 253
    1948:	e8 81       	ld	r30, Y
    194a:	f9 81       	ldd	r31, Y+1	; 0x01
    194c:	ce 53       	subi	r28, 0x3E	; 62
    194e:	d2 40       	sbci	r29, 0x02	; 2
    1950:	31 96       	adiw	r30, 0x01	; 1
    1952:	c2 5c       	subi	r28, 0xC2	; 194
    1954:	dd 4f       	sbci	r29, 0xFD	; 253
    1956:	f9 83       	std	Y+1, r31	; 0x01
    1958:	e8 83       	st	Y, r30
    195a:	ce 53       	subi	r28, 0x3E	; 62
    195c:	d2 40       	sbci	r29, 0x02	; 2
    195e:	ce 5b       	subi	r28, 0xBE	; 190
    1960:	dd 4f       	sbci	r29, 0xFD	; 253
    1962:	f8 81       	ld	r31, Y
    1964:	c2 54       	subi	r28, 0x42	; 66
    1966:	d2 40       	sbci	r29, 0x02	; 2
    1968:	f1 50       	subi	r31, 0x01	; 1
    196a:	ce 5b       	subi	r28, 0xBE	; 190
    196c:	dd 4f       	sbci	r29, 0xFD	; 253
    196e:	f8 83       	st	Y, r31
    1970:	c2 54       	subi	r28, 0x42	; 66
    1972:	d2 40       	sbci	r29, 0x02	; 2
    1974:	ce 5b       	subi	r28, 0xBE	; 190
    1976:	dd 4f       	sbci	r29, 0xFD	; 253
    1978:	88 81       	ld	r24, Y
    197a:	c2 54       	subi	r28, 0x42	; 66
    197c:	d2 40       	sbci	r29, 0x02	; 2
    197e:	88 23       	and	r24, r24
    1980:	31 f6       	brne	.-116    	; 0x190e <main+0x110>
	char play[]={"I can play "};
    1982:	ce 01       	movw	r24, r28
    1984:	81 57       	subi	r24, 0x71	; 113
    1986:	9e 4f       	sbci	r25, 0xFE	; 254
    1988:	cd 5b       	subi	r28, 0xBD	; 189
    198a:	dd 4f       	sbci	r29, 0xFD	; 253
    198c:	99 83       	std	Y+1, r25	; 0x01
    198e:	88 83       	st	Y, r24
    1990:	c3 54       	subi	r28, 0x43	; 67
    1992:	d2 40       	sbci	r29, 0x02	; 2
    1994:	a0 e7       	ldi	r26, 0x70	; 112
    1996:	b0 e0       	ldi	r27, 0x00	; 0
    1998:	cb 5b       	subi	r28, 0xBB	; 187
    199a:	dd 4f       	sbci	r29, 0xFD	; 253
    199c:	b9 83       	std	Y+1, r27	; 0x01
    199e:	a8 83       	st	Y, r26
    19a0:	c5 54       	subi	r28, 0x45	; 69
    19a2:	d2 40       	sbci	r29, 0x02	; 2
    19a4:	bc e0       	ldi	r27, 0x0C	; 12
    19a6:	c9 5b       	subi	r28, 0xB9	; 185
    19a8:	dd 4f       	sbci	r29, 0xFD	; 253
    19aa:	b8 83       	st	Y, r27
    19ac:	c7 54       	subi	r28, 0x47	; 71
    19ae:	d2 40       	sbci	r29, 0x02	; 2
    19b0:	cb 5b       	subi	r28, 0xBB	; 187
    19b2:	dd 4f       	sbci	r29, 0xFD	; 253
    19b4:	e8 81       	ld	r30, Y
    19b6:	f9 81       	ldd	r31, Y+1	; 0x01
    19b8:	c5 54       	subi	r28, 0x45	; 69
    19ba:	d2 40       	sbci	r29, 0x02	; 2
    19bc:	00 80       	ld	r0, Z
    19be:	cb 5b       	subi	r28, 0xBB	; 187
    19c0:	dd 4f       	sbci	r29, 0xFD	; 253
    19c2:	88 81       	ld	r24, Y
    19c4:	99 81       	ldd	r25, Y+1	; 0x01
    19c6:	c5 54       	subi	r28, 0x45	; 69
    19c8:	d2 40       	sbci	r29, 0x02	; 2
    19ca:	01 96       	adiw	r24, 0x01	; 1
    19cc:	cb 5b       	subi	r28, 0xBB	; 187
    19ce:	dd 4f       	sbci	r29, 0xFD	; 253
    19d0:	99 83       	std	Y+1, r25	; 0x01
    19d2:	88 83       	st	Y, r24
    19d4:	c5 54       	subi	r28, 0x45	; 69
    19d6:	d2 40       	sbci	r29, 0x02	; 2
    19d8:	cd 5b       	subi	r28, 0xBD	; 189
    19da:	dd 4f       	sbci	r29, 0xFD	; 253
    19dc:	a8 81       	ld	r26, Y
    19de:	b9 81       	ldd	r27, Y+1	; 0x01
    19e0:	c3 54       	subi	r28, 0x43	; 67
    19e2:	d2 40       	sbci	r29, 0x02	; 2
    19e4:	0c 92       	st	X, r0
    19e6:	cd 5b       	subi	r28, 0xBD	; 189
    19e8:	dd 4f       	sbci	r29, 0xFD	; 253
    19ea:	e8 81       	ld	r30, Y
    19ec:	f9 81       	ldd	r31, Y+1	; 0x01
    19ee:	c3 54       	subi	r28, 0x43	; 67
    19f0:	d2 40       	sbci	r29, 0x02	; 2
    19f2:	31 96       	adiw	r30, 0x01	; 1
    19f4:	cd 5b       	subi	r28, 0xBD	; 189
    19f6:	dd 4f       	sbci	r29, 0xFD	; 253
    19f8:	f9 83       	std	Y+1, r31	; 0x01
    19fa:	e8 83       	st	Y, r30
    19fc:	c3 54       	subi	r28, 0x43	; 67
    19fe:	d2 40       	sbci	r29, 0x02	; 2
    1a00:	c9 5b       	subi	r28, 0xB9	; 185
    1a02:	dd 4f       	sbci	r29, 0xFD	; 253
    1a04:	f8 81       	ld	r31, Y
    1a06:	c7 54       	subi	r28, 0x47	; 71
    1a08:	d2 40       	sbci	r29, 0x02	; 2
    1a0a:	f1 50       	subi	r31, 0x01	; 1
    1a0c:	c9 5b       	subi	r28, 0xB9	; 185
    1a0e:	dd 4f       	sbci	r29, 0xFD	; 253
    1a10:	f8 83       	st	Y, r31
    1a12:	c7 54       	subi	r28, 0x47	; 71
    1a14:	d2 40       	sbci	r29, 0x02	; 2
    1a16:	c9 5b       	subi	r28, 0xB9	; 185
    1a18:	dd 4f       	sbci	r29, 0xFD	; 253
    1a1a:	88 81       	ld	r24, Y
    1a1c:	c7 54       	subi	r28, 0x47	; 71
    1a1e:	d2 40       	sbci	r29, 0x02	; 2
    1a20:	88 23       	and	r24, r24
    1a22:	31 f6       	brne	.-116    	; 0x19b0 <main+0x1b2>
	char football[]={"football"};
    1a24:	ce 01       	movw	r24, r28
    1a26:	85 56       	subi	r24, 0x65	; 101
    1a28:	9e 4f       	sbci	r25, 0xFE	; 254
    1a2a:	c8 5b       	subi	r28, 0xB8	; 184
    1a2c:	dd 4f       	sbci	r29, 0xFD	; 253
    1a2e:	99 83       	std	Y+1, r25	; 0x01
    1a30:	88 83       	st	Y, r24
    1a32:	c8 54       	subi	r28, 0x48	; 72
    1a34:	d2 40       	sbci	r29, 0x02	; 2
    1a36:	ac e7       	ldi	r26, 0x7C	; 124
    1a38:	b0 e0       	ldi	r27, 0x00	; 0
    1a3a:	c6 5b       	subi	r28, 0xB6	; 182
    1a3c:	dd 4f       	sbci	r29, 0xFD	; 253
    1a3e:	b9 83       	std	Y+1, r27	; 0x01
    1a40:	a8 83       	st	Y, r26
    1a42:	ca 54       	subi	r28, 0x4A	; 74
    1a44:	d2 40       	sbci	r29, 0x02	; 2
    1a46:	b9 e0       	ldi	r27, 0x09	; 9
    1a48:	c4 5b       	subi	r28, 0xB4	; 180
    1a4a:	dd 4f       	sbci	r29, 0xFD	; 253
    1a4c:	b8 83       	st	Y, r27
    1a4e:	cc 54       	subi	r28, 0x4C	; 76
    1a50:	d2 40       	sbci	r29, 0x02	; 2
    1a52:	c6 5b       	subi	r28, 0xB6	; 182
    1a54:	dd 4f       	sbci	r29, 0xFD	; 253
    1a56:	e8 81       	ld	r30, Y
    1a58:	f9 81       	ldd	r31, Y+1	; 0x01
    1a5a:	ca 54       	subi	r28, 0x4A	; 74
    1a5c:	d2 40       	sbci	r29, 0x02	; 2
    1a5e:	00 80       	ld	r0, Z
    1a60:	c6 5b       	subi	r28, 0xB6	; 182
    1a62:	dd 4f       	sbci	r29, 0xFD	; 253
    1a64:	88 81       	ld	r24, Y
    1a66:	99 81       	ldd	r25, Y+1	; 0x01
    1a68:	ca 54       	subi	r28, 0x4A	; 74
    1a6a:	d2 40       	sbci	r29, 0x02	; 2
    1a6c:	01 96       	adiw	r24, 0x01	; 1
    1a6e:	c6 5b       	subi	r28, 0xB6	; 182
    1a70:	dd 4f       	sbci	r29, 0xFD	; 253
    1a72:	99 83       	std	Y+1, r25	; 0x01
    1a74:	88 83       	st	Y, r24
    1a76:	ca 54       	subi	r28, 0x4A	; 74
    1a78:	d2 40       	sbci	r29, 0x02	; 2
    1a7a:	c8 5b       	subi	r28, 0xB8	; 184
    1a7c:	dd 4f       	sbci	r29, 0xFD	; 253
    1a7e:	a8 81       	ld	r26, Y
    1a80:	b9 81       	ldd	r27, Y+1	; 0x01
    1a82:	c8 54       	subi	r28, 0x48	; 72
    1a84:	d2 40       	sbci	r29, 0x02	; 2
    1a86:	0c 92       	st	X, r0
    1a88:	c8 5b       	subi	r28, 0xB8	; 184
    1a8a:	dd 4f       	sbci	r29, 0xFD	; 253
    1a8c:	e8 81       	ld	r30, Y
    1a8e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a90:	c8 54       	subi	r28, 0x48	; 72
    1a92:	d2 40       	sbci	r29, 0x02	; 2
    1a94:	31 96       	adiw	r30, 0x01	; 1
    1a96:	c8 5b       	subi	r28, 0xB8	; 184
    1a98:	dd 4f       	sbci	r29, 0xFD	; 253
    1a9a:	f9 83       	std	Y+1, r31	; 0x01
    1a9c:	e8 83       	st	Y, r30
    1a9e:	c8 54       	subi	r28, 0x48	; 72
    1aa0:	d2 40       	sbci	r29, 0x02	; 2
    1aa2:	c4 5b       	subi	r28, 0xB4	; 180
    1aa4:	dd 4f       	sbci	r29, 0xFD	; 253
    1aa6:	f8 81       	ld	r31, Y
    1aa8:	cc 54       	subi	r28, 0x4C	; 76
    1aaa:	d2 40       	sbci	r29, 0x02	; 2
    1aac:	f1 50       	subi	r31, 0x01	; 1
    1aae:	c4 5b       	subi	r28, 0xB4	; 180
    1ab0:	dd 4f       	sbci	r29, 0xFD	; 253
    1ab2:	f8 83       	st	Y, r31
    1ab4:	cc 54       	subi	r28, 0x4C	; 76
    1ab6:	d2 40       	sbci	r29, 0x02	; 2
    1ab8:	c4 5b       	subi	r28, 0xB4	; 180
    1aba:	dd 4f       	sbci	r29, 0xFD	; 253
    1abc:	88 81       	ld	r24, Y
    1abe:	cc 54       	subi	r28, 0x4C	; 76
    1ac0:	d2 40       	sbci	r29, 0x02	; 2
    1ac2:	88 23       	and	r24, r24
    1ac4:	31 f6       	brne	.-116    	; 0x1a52 <main+0x254>
	char dance[]={"I can dance "};
    1ac6:	ce 01       	movw	r24, r28
    1ac8:	8c 55       	subi	r24, 0x5C	; 92
    1aca:	9e 4f       	sbci	r25, 0xFE	; 254
    1acc:	c3 5b       	subi	r28, 0xB3	; 179
    1ace:	dd 4f       	sbci	r29, 0xFD	; 253
    1ad0:	99 83       	std	Y+1, r25	; 0x01
    1ad2:	88 83       	st	Y, r24
    1ad4:	cd 54       	subi	r28, 0x4D	; 77
    1ad6:	d2 40       	sbci	r29, 0x02	; 2
    1ad8:	a5 e8       	ldi	r26, 0x85	; 133
    1ada:	b0 e0       	ldi	r27, 0x00	; 0
    1adc:	c1 5b       	subi	r28, 0xB1	; 177
    1ade:	dd 4f       	sbci	r29, 0xFD	; 253
    1ae0:	b9 83       	std	Y+1, r27	; 0x01
    1ae2:	a8 83       	st	Y, r26
    1ae4:	cf 54       	subi	r28, 0x4F	; 79
    1ae6:	d2 40       	sbci	r29, 0x02	; 2
    1ae8:	bd e0       	ldi	r27, 0x0D	; 13
    1aea:	cf 5a       	subi	r28, 0xAF	; 175
    1aec:	dd 4f       	sbci	r29, 0xFD	; 253
    1aee:	b8 83       	st	Y, r27
    1af0:	c1 55       	subi	r28, 0x51	; 81
    1af2:	d2 40       	sbci	r29, 0x02	; 2
    1af4:	c1 5b       	subi	r28, 0xB1	; 177
    1af6:	dd 4f       	sbci	r29, 0xFD	; 253
    1af8:	e8 81       	ld	r30, Y
    1afa:	f9 81       	ldd	r31, Y+1	; 0x01
    1afc:	cf 54       	subi	r28, 0x4F	; 79
    1afe:	d2 40       	sbci	r29, 0x02	; 2
    1b00:	00 80       	ld	r0, Z
    1b02:	c1 5b       	subi	r28, 0xB1	; 177
    1b04:	dd 4f       	sbci	r29, 0xFD	; 253
    1b06:	88 81       	ld	r24, Y
    1b08:	99 81       	ldd	r25, Y+1	; 0x01
    1b0a:	cf 54       	subi	r28, 0x4F	; 79
    1b0c:	d2 40       	sbci	r29, 0x02	; 2
    1b0e:	01 96       	adiw	r24, 0x01	; 1
    1b10:	c1 5b       	subi	r28, 0xB1	; 177
    1b12:	dd 4f       	sbci	r29, 0xFD	; 253
    1b14:	99 83       	std	Y+1, r25	; 0x01
    1b16:	88 83       	st	Y, r24
    1b18:	cf 54       	subi	r28, 0x4F	; 79
    1b1a:	d2 40       	sbci	r29, 0x02	; 2
    1b1c:	c3 5b       	subi	r28, 0xB3	; 179
    1b1e:	dd 4f       	sbci	r29, 0xFD	; 253
    1b20:	a8 81       	ld	r26, Y
    1b22:	b9 81       	ldd	r27, Y+1	; 0x01
    1b24:	cd 54       	subi	r28, 0x4D	; 77
    1b26:	d2 40       	sbci	r29, 0x02	; 2
    1b28:	0c 92       	st	X, r0
    1b2a:	c3 5b       	subi	r28, 0xB3	; 179
    1b2c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b2e:	e8 81       	ld	r30, Y
    1b30:	f9 81       	ldd	r31, Y+1	; 0x01
    1b32:	cd 54       	subi	r28, 0x4D	; 77
    1b34:	d2 40       	sbci	r29, 0x02	; 2
    1b36:	31 96       	adiw	r30, 0x01	; 1
    1b38:	c3 5b       	subi	r28, 0xB3	; 179
    1b3a:	dd 4f       	sbci	r29, 0xFD	; 253
    1b3c:	f9 83       	std	Y+1, r31	; 0x01
    1b3e:	e8 83       	st	Y, r30
    1b40:	cd 54       	subi	r28, 0x4D	; 77
    1b42:	d2 40       	sbci	r29, 0x02	; 2
    1b44:	cf 5a       	subi	r28, 0xAF	; 175
    1b46:	dd 4f       	sbci	r29, 0xFD	; 253
    1b48:	f8 81       	ld	r31, Y
    1b4a:	c1 55       	subi	r28, 0x51	; 81
    1b4c:	d2 40       	sbci	r29, 0x02	; 2
    1b4e:	f1 50       	subi	r31, 0x01	; 1
    1b50:	cf 5a       	subi	r28, 0xAF	; 175
    1b52:	dd 4f       	sbci	r29, 0xFD	; 253
    1b54:	f8 83       	st	Y, r31
    1b56:	c1 55       	subi	r28, 0x51	; 81
    1b58:	d2 40       	sbci	r29, 0x02	; 2
    1b5a:	cf 5a       	subi	r28, 0xAF	; 175
    1b5c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b5e:	88 81       	ld	r24, Y
    1b60:	c1 55       	subi	r28, 0x51	; 81
    1b62:	d2 40       	sbci	r29, 0x02	; 2
    1b64:	88 23       	and	r24, r24
    1b66:	31 f6       	brne	.-116    	; 0x1af4 <main+0x2f6>
	char roadblock[]={"jump roadblocks"};
    1b68:	ce 01       	movw	r24, r28
    1b6a:	8f 54       	subi	r24, 0x4F	; 79
    1b6c:	9e 4f       	sbci	r25, 0xFE	; 254
    1b6e:	ce 5a       	subi	r28, 0xAE	; 174
    1b70:	dd 4f       	sbci	r29, 0xFD	; 253
    1b72:	99 83       	std	Y+1, r25	; 0x01
    1b74:	88 83       	st	Y, r24
    1b76:	c2 55       	subi	r28, 0x52	; 82
    1b78:	d2 40       	sbci	r29, 0x02	; 2
    1b7a:	a2 e9       	ldi	r26, 0x92	; 146
    1b7c:	b0 e0       	ldi	r27, 0x00	; 0
    1b7e:	cc 5a       	subi	r28, 0xAC	; 172
    1b80:	dd 4f       	sbci	r29, 0xFD	; 253
    1b82:	b9 83       	std	Y+1, r27	; 0x01
    1b84:	a8 83       	st	Y, r26
    1b86:	c4 55       	subi	r28, 0x54	; 84
    1b88:	d2 40       	sbci	r29, 0x02	; 2
    1b8a:	b0 e1       	ldi	r27, 0x10	; 16
    1b8c:	ca 5a       	subi	r28, 0xAA	; 170
    1b8e:	dd 4f       	sbci	r29, 0xFD	; 253
    1b90:	b8 83       	st	Y, r27
    1b92:	c6 55       	subi	r28, 0x56	; 86
    1b94:	d2 40       	sbci	r29, 0x02	; 2
    1b96:	cc 5a       	subi	r28, 0xAC	; 172
    1b98:	dd 4f       	sbci	r29, 0xFD	; 253
    1b9a:	e8 81       	ld	r30, Y
    1b9c:	f9 81       	ldd	r31, Y+1	; 0x01
    1b9e:	c4 55       	subi	r28, 0x54	; 84
    1ba0:	d2 40       	sbci	r29, 0x02	; 2
    1ba2:	00 80       	ld	r0, Z
    1ba4:	cc 5a       	subi	r28, 0xAC	; 172
    1ba6:	dd 4f       	sbci	r29, 0xFD	; 253
    1ba8:	88 81       	ld	r24, Y
    1baa:	99 81       	ldd	r25, Y+1	; 0x01
    1bac:	c4 55       	subi	r28, 0x54	; 84
    1bae:	d2 40       	sbci	r29, 0x02	; 2
    1bb0:	01 96       	adiw	r24, 0x01	; 1
    1bb2:	cc 5a       	subi	r28, 0xAC	; 172
    1bb4:	dd 4f       	sbci	r29, 0xFD	; 253
    1bb6:	99 83       	std	Y+1, r25	; 0x01
    1bb8:	88 83       	st	Y, r24
    1bba:	c4 55       	subi	r28, 0x54	; 84
    1bbc:	d2 40       	sbci	r29, 0x02	; 2
    1bbe:	ce 5a       	subi	r28, 0xAE	; 174
    1bc0:	dd 4f       	sbci	r29, 0xFD	; 253
    1bc2:	a8 81       	ld	r26, Y
    1bc4:	b9 81       	ldd	r27, Y+1	; 0x01
    1bc6:	c2 55       	subi	r28, 0x52	; 82
    1bc8:	d2 40       	sbci	r29, 0x02	; 2
    1bca:	0c 92       	st	X, r0
    1bcc:	ce 5a       	subi	r28, 0xAE	; 174
    1bce:	dd 4f       	sbci	r29, 0xFD	; 253
    1bd0:	e8 81       	ld	r30, Y
    1bd2:	f9 81       	ldd	r31, Y+1	; 0x01
    1bd4:	c2 55       	subi	r28, 0x52	; 82
    1bd6:	d2 40       	sbci	r29, 0x02	; 2
    1bd8:	31 96       	adiw	r30, 0x01	; 1
    1bda:	ce 5a       	subi	r28, 0xAE	; 174
    1bdc:	dd 4f       	sbci	r29, 0xFD	; 253
    1bde:	f9 83       	std	Y+1, r31	; 0x01
    1be0:	e8 83       	st	Y, r30
    1be2:	c2 55       	subi	r28, 0x52	; 82
    1be4:	d2 40       	sbci	r29, 0x02	; 2
    1be6:	ca 5a       	subi	r28, 0xAA	; 170
    1be8:	dd 4f       	sbci	r29, 0xFD	; 253
    1bea:	f8 81       	ld	r31, Y
    1bec:	c6 55       	subi	r28, 0x56	; 86
    1bee:	d2 40       	sbci	r29, 0x02	; 2
    1bf0:	f1 50       	subi	r31, 0x01	; 1
    1bf2:	ca 5a       	subi	r28, 0xAA	; 170
    1bf4:	dd 4f       	sbci	r29, 0xFD	; 253
    1bf6:	f8 83       	st	Y, r31
    1bf8:	c6 55       	subi	r28, 0x56	; 86
    1bfa:	d2 40       	sbci	r29, 0x02	; 2
    1bfc:	ca 5a       	subi	r28, 0xAA	; 170
    1bfe:	dd 4f       	sbci	r29, 0xFD	; 253
    1c00:	88 81       	ld	r24, Y
    1c02:	c6 55       	subi	r28, 0x56	; 86
    1c04:	d2 40       	sbci	r29, 0x02	; 2
    1c06:	88 23       	and	r24, r24
    1c08:	31 f6       	brne	.-116    	; 0x1b96 <main+0x398>
	char kill[]={"Don't Kill me"};
    1c0a:	ce 01       	movw	r24, r28
    1c0c:	8f 53       	subi	r24, 0x3F	; 63
    1c0e:	9e 4f       	sbci	r25, 0xFE	; 254
    1c10:	c9 5a       	subi	r28, 0xA9	; 169
    1c12:	dd 4f       	sbci	r29, 0xFD	; 253
    1c14:	99 83       	std	Y+1, r25	; 0x01
    1c16:	88 83       	st	Y, r24
    1c18:	c7 55       	subi	r28, 0x57	; 87
    1c1a:	d2 40       	sbci	r29, 0x02	; 2
    1c1c:	a2 ea       	ldi	r26, 0xA2	; 162
    1c1e:	b0 e0       	ldi	r27, 0x00	; 0
    1c20:	c7 5a       	subi	r28, 0xA7	; 167
    1c22:	dd 4f       	sbci	r29, 0xFD	; 253
    1c24:	b9 83       	std	Y+1, r27	; 0x01
    1c26:	a8 83       	st	Y, r26
    1c28:	c9 55       	subi	r28, 0x59	; 89
    1c2a:	d2 40       	sbci	r29, 0x02	; 2
    1c2c:	be e0       	ldi	r27, 0x0E	; 14
    1c2e:	c5 5a       	subi	r28, 0xA5	; 165
    1c30:	dd 4f       	sbci	r29, 0xFD	; 253
    1c32:	b8 83       	st	Y, r27
    1c34:	cb 55       	subi	r28, 0x5B	; 91
    1c36:	d2 40       	sbci	r29, 0x02	; 2
    1c38:	c7 5a       	subi	r28, 0xA7	; 167
    1c3a:	dd 4f       	sbci	r29, 0xFD	; 253
    1c3c:	e8 81       	ld	r30, Y
    1c3e:	f9 81       	ldd	r31, Y+1	; 0x01
    1c40:	c9 55       	subi	r28, 0x59	; 89
    1c42:	d2 40       	sbci	r29, 0x02	; 2
    1c44:	00 80       	ld	r0, Z
    1c46:	c7 5a       	subi	r28, 0xA7	; 167
    1c48:	dd 4f       	sbci	r29, 0xFD	; 253
    1c4a:	88 81       	ld	r24, Y
    1c4c:	99 81       	ldd	r25, Y+1	; 0x01
    1c4e:	c9 55       	subi	r28, 0x59	; 89
    1c50:	d2 40       	sbci	r29, 0x02	; 2
    1c52:	01 96       	adiw	r24, 0x01	; 1
    1c54:	c7 5a       	subi	r28, 0xA7	; 167
    1c56:	dd 4f       	sbci	r29, 0xFD	; 253
    1c58:	99 83       	std	Y+1, r25	; 0x01
    1c5a:	88 83       	st	Y, r24
    1c5c:	c9 55       	subi	r28, 0x59	; 89
    1c5e:	d2 40       	sbci	r29, 0x02	; 2
    1c60:	c9 5a       	subi	r28, 0xA9	; 169
    1c62:	dd 4f       	sbci	r29, 0xFD	; 253
    1c64:	a8 81       	ld	r26, Y
    1c66:	b9 81       	ldd	r27, Y+1	; 0x01
    1c68:	c7 55       	subi	r28, 0x57	; 87
    1c6a:	d2 40       	sbci	r29, 0x02	; 2
    1c6c:	0c 92       	st	X, r0
    1c6e:	c9 5a       	subi	r28, 0xA9	; 169
    1c70:	dd 4f       	sbci	r29, 0xFD	; 253
    1c72:	e8 81       	ld	r30, Y
    1c74:	f9 81       	ldd	r31, Y+1	; 0x01
    1c76:	c7 55       	subi	r28, 0x57	; 87
    1c78:	d2 40       	sbci	r29, 0x02	; 2
    1c7a:	31 96       	adiw	r30, 0x01	; 1
    1c7c:	c9 5a       	subi	r28, 0xA9	; 169
    1c7e:	dd 4f       	sbci	r29, 0xFD	; 253
    1c80:	f9 83       	std	Y+1, r31	; 0x01
    1c82:	e8 83       	st	Y, r30
    1c84:	c7 55       	subi	r28, 0x57	; 87
    1c86:	d2 40       	sbci	r29, 0x02	; 2
    1c88:	c5 5a       	subi	r28, 0xA5	; 165
    1c8a:	dd 4f       	sbci	r29, 0xFD	; 253
    1c8c:	f8 81       	ld	r31, Y
    1c8e:	cb 55       	subi	r28, 0x5B	; 91
    1c90:	d2 40       	sbci	r29, 0x02	; 2
    1c92:	f1 50       	subi	r31, 0x01	; 1
    1c94:	c5 5a       	subi	r28, 0xA5	; 165
    1c96:	dd 4f       	sbci	r29, 0xFD	; 253
    1c98:	f8 83       	st	Y, r31
    1c9a:	cb 55       	subi	r28, 0x5B	; 91
    1c9c:	d2 40       	sbci	r29, 0x02	; 2
    1c9e:	c5 5a       	subi	r28, 0xA5	; 165
    1ca0:	dd 4f       	sbci	r29, 0xFD	; 253
    1ca2:	88 81       	ld	r24, Y
    1ca4:	cb 55       	subi	r28, 0x5B	; 91
    1ca6:	d2 40       	sbci	r29, 0x02	; 2
    1ca8:	88 23       	and	r24, r24
    1caa:	31 f6       	brne	.-116    	; 0x1c38 <main+0x43a>
	char RIP[]={"RIP Rokba"};
    1cac:	ce 01       	movw	r24, r28
    1cae:	81 53       	subi	r24, 0x31	; 49
    1cb0:	9e 4f       	sbci	r25, 0xFE	; 254
    1cb2:	c4 5a       	subi	r28, 0xA4	; 164
    1cb4:	dd 4f       	sbci	r29, 0xFD	; 253
    1cb6:	99 83       	std	Y+1, r25	; 0x01
    1cb8:	88 83       	st	Y, r24
    1cba:	cc 55       	subi	r28, 0x5C	; 92
    1cbc:	d2 40       	sbci	r29, 0x02	; 2
    1cbe:	a0 eb       	ldi	r26, 0xB0	; 176
    1cc0:	b0 e0       	ldi	r27, 0x00	; 0
    1cc2:	c2 5a       	subi	r28, 0xA2	; 162
    1cc4:	dd 4f       	sbci	r29, 0xFD	; 253
    1cc6:	b9 83       	std	Y+1, r27	; 0x01
    1cc8:	a8 83       	st	Y, r26
    1cca:	ce 55       	subi	r28, 0x5E	; 94
    1ccc:	d2 40       	sbci	r29, 0x02	; 2
    1cce:	ba e0       	ldi	r27, 0x0A	; 10
    1cd0:	c0 5a       	subi	r28, 0xA0	; 160
    1cd2:	dd 4f       	sbci	r29, 0xFD	; 253
    1cd4:	b8 83       	st	Y, r27
    1cd6:	c0 56       	subi	r28, 0x60	; 96
    1cd8:	d2 40       	sbci	r29, 0x02	; 2
    1cda:	c2 5a       	subi	r28, 0xA2	; 162
    1cdc:	dd 4f       	sbci	r29, 0xFD	; 253
    1cde:	e8 81       	ld	r30, Y
    1ce0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ce2:	ce 55       	subi	r28, 0x5E	; 94
    1ce4:	d2 40       	sbci	r29, 0x02	; 2
    1ce6:	00 80       	ld	r0, Z
    1ce8:	c2 5a       	subi	r28, 0xA2	; 162
    1cea:	dd 4f       	sbci	r29, 0xFD	; 253
    1cec:	88 81       	ld	r24, Y
    1cee:	99 81       	ldd	r25, Y+1	; 0x01
    1cf0:	ce 55       	subi	r28, 0x5E	; 94
    1cf2:	d2 40       	sbci	r29, 0x02	; 2
    1cf4:	01 96       	adiw	r24, 0x01	; 1
    1cf6:	c2 5a       	subi	r28, 0xA2	; 162
    1cf8:	dd 4f       	sbci	r29, 0xFD	; 253
    1cfa:	99 83       	std	Y+1, r25	; 0x01
    1cfc:	88 83       	st	Y, r24
    1cfe:	ce 55       	subi	r28, 0x5E	; 94
    1d00:	d2 40       	sbci	r29, 0x02	; 2
    1d02:	c4 5a       	subi	r28, 0xA4	; 164
    1d04:	dd 4f       	sbci	r29, 0xFD	; 253
    1d06:	a8 81       	ld	r26, Y
    1d08:	b9 81       	ldd	r27, Y+1	; 0x01
    1d0a:	cc 55       	subi	r28, 0x5C	; 92
    1d0c:	d2 40       	sbci	r29, 0x02	; 2
    1d0e:	0c 92       	st	X, r0
    1d10:	c4 5a       	subi	r28, 0xA4	; 164
    1d12:	dd 4f       	sbci	r29, 0xFD	; 253
    1d14:	e8 81       	ld	r30, Y
    1d16:	f9 81       	ldd	r31, Y+1	; 0x01
    1d18:	cc 55       	subi	r28, 0x5C	; 92
    1d1a:	d2 40       	sbci	r29, 0x02	; 2
    1d1c:	31 96       	adiw	r30, 0x01	; 1
    1d1e:	c4 5a       	subi	r28, 0xA4	; 164
    1d20:	dd 4f       	sbci	r29, 0xFD	; 253
    1d22:	f9 83       	std	Y+1, r31	; 0x01
    1d24:	e8 83       	st	Y, r30
    1d26:	cc 55       	subi	r28, 0x5C	; 92
    1d28:	d2 40       	sbci	r29, 0x02	; 2
    1d2a:	c0 5a       	subi	r28, 0xA0	; 160
    1d2c:	dd 4f       	sbci	r29, 0xFD	; 253
    1d2e:	f8 81       	ld	r31, Y
    1d30:	c0 56       	subi	r28, 0x60	; 96
    1d32:	d2 40       	sbci	r29, 0x02	; 2
    1d34:	f1 50       	subi	r31, 0x01	; 1
    1d36:	c0 5a       	subi	r28, 0xA0	; 160
    1d38:	dd 4f       	sbci	r29, 0xFD	; 253
    1d3a:	f8 83       	st	Y, r31
    1d3c:	c0 56       	subi	r28, 0x60	; 96
    1d3e:	d2 40       	sbci	r29, 0x02	; 2
    1d40:	c0 5a       	subi	r28, 0xA0	; 160
    1d42:	dd 4f       	sbci	r29, 0xFD	; 253
    1d44:	88 81       	ld	r24, Y
    1d46:	c0 56       	subi	r28, 0x60	; 96
    1d48:	d2 40       	sbci	r29, 0x02	; 2
    1d4a:	88 23       	and	r24, r24
    1d4c:	31 f6       	brne	.-116    	; 0x1cda <main+0x4dc>
			0b00001110,
			0b00000100,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00010001};
    1d4e:	ce 01       	movw	r24, r28
    1d50:	87 52       	subi	r24, 0x27	; 39
    1d52:	9e 4f       	sbci	r25, 0xFE	; 254
    1d54:	28 e0       	ldi	r18, 0x08	; 8
    1d56:	fc 01       	movw	r30, r24
    1d58:	df 01       	movw	r26, r30
    1d5a:	82 2f       	mov	r24, r18
    1d5c:	1d 92       	st	X+, r1
    1d5e:	8a 95       	dec	r24
    1d60:	e9 f7       	brne	.-6      	; 0x1d5c <main+0x55e>
    1d62:	fe 01       	movw	r30, r28
    1d64:	e7 52       	subi	r30, 0x27	; 39
    1d66:	fe 4f       	sbci	r31, 0xFE	; 254
    1d68:	8e e0       	ldi	r24, 0x0E	; 14
    1d6a:	80 83       	st	Z, r24
    1d6c:	fe 01       	movw	r30, r28
    1d6e:	e7 52       	subi	r30, 0x27	; 39
    1d70:	fe 4f       	sbci	r31, 0xFE	; 254
    1d72:	8e e0       	ldi	r24, 0x0E	; 14
    1d74:	81 83       	std	Z+1, r24	; 0x01
    1d76:	fe 01       	movw	r30, r28
    1d78:	e7 52       	subi	r30, 0x27	; 39
    1d7a:	fe 4f       	sbci	r31, 0xFE	; 254
    1d7c:	84 e0       	ldi	r24, 0x04	; 4
    1d7e:	82 83       	std	Z+2, r24	; 0x02
    1d80:	fe 01       	movw	r30, r28
    1d82:	e7 52       	subi	r30, 0x27	; 39
    1d84:	fe 4f       	sbci	r31, 0xFE	; 254
    1d86:	8f e1       	ldi	r24, 0x1F	; 31
    1d88:	83 83       	std	Z+3, r24	; 0x03
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e7 52       	subi	r30, 0x27	; 39
    1d8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d90:	84 e0       	ldi	r24, 0x04	; 4
    1d92:	84 83       	std	Z+4, r24	; 0x04
    1d94:	fe 01       	movw	r30, r28
    1d96:	e7 52       	subi	r30, 0x27	; 39
    1d98:	fe 4f       	sbci	r31, 0xFE	; 254
    1d9a:	8f e1       	ldi	r24, 0x1F	; 31
    1d9c:	85 83       	std	Z+5, r24	; 0x05
    1d9e:	fe 01       	movw	r30, r28
    1da0:	e7 52       	subi	r30, 0x27	; 39
    1da2:	fe 4f       	sbci	r31, 0xFE	; 254
    1da4:	81 e1       	ldi	r24, 0x11	; 17
    1da6:	86 83       	std	Z+6, r24	; 0x06
			0b00001110,
			0b00000101,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00010000};
    1da8:	ce 01       	movw	r24, r28
    1daa:	8f 51       	subi	r24, 0x1F	; 31
    1dac:	9e 4f       	sbci	r25, 0xFE	; 254
    1dae:	28 e0       	ldi	r18, 0x08	; 8
    1db0:	fc 01       	movw	r30, r24
    1db2:	df 01       	movw	r26, r30
    1db4:	82 2f       	mov	r24, r18
    1db6:	1d 92       	st	X+, r1
    1db8:	8a 95       	dec	r24
    1dba:	e9 f7       	brne	.-6      	; 0x1db6 <main+0x5b8>
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	ef 51       	subi	r30, 0x1F	; 31
    1dc0:	fe 4f       	sbci	r31, 0xFE	; 254
    1dc2:	8e e0       	ldi	r24, 0x0E	; 14
    1dc4:	80 83       	st	Z, r24
    1dc6:	fe 01       	movw	r30, r28
    1dc8:	ef 51       	subi	r30, 0x1F	; 31
    1dca:	fe 4f       	sbci	r31, 0xFE	; 254
    1dcc:	8e e0       	ldi	r24, 0x0E	; 14
    1dce:	81 83       	std	Z+1, r24	; 0x01
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	ef 51       	subi	r30, 0x1F	; 31
    1dd4:	fe 4f       	sbci	r31, 0xFE	; 254
    1dd6:	85 e0       	ldi	r24, 0x05	; 5
    1dd8:	82 83       	std	Z+2, r24	; 0x02
    1dda:	fe 01       	movw	r30, r28
    1ddc:	ef 51       	subi	r30, 0x1F	; 31
    1dde:	fe 4f       	sbci	r31, 0xFE	; 254
    1de0:	8f e1       	ldi	r24, 0x1F	; 31
    1de2:	83 83       	std	Z+3, r24	; 0x03
    1de4:	fe 01       	movw	r30, r28
    1de6:	ef 51       	subi	r30, 0x1F	; 31
    1de8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dea:	84 e0       	ldi	r24, 0x04	; 4
    1dec:	84 83       	std	Z+4, r24	; 0x04
    1dee:	fe 01       	movw	r30, r28
    1df0:	ef 51       	subi	r30, 0x1F	; 31
    1df2:	fe 4f       	sbci	r31, 0xFE	; 254
    1df4:	8f e1       	ldi	r24, 0x1F	; 31
    1df6:	85 83       	std	Z+5, r24	; 0x05
    1df8:	fe 01       	movw	r30, r28
    1dfa:	ef 51       	subi	r30, 0x1F	; 31
    1dfc:	fe 4f       	sbci	r31, 0xFE	; 254
    1dfe:	80 e1       	ldi	r24, 0x10	; 16
    1e00:	86 83       	std	Z+6, r24	; 0x06
			0b00000000,
			0b00000000,
			0b00000000,
			0b00011000,
			0b00011000,
			0b00000000};
    1e02:	ce 01       	movw	r24, r28
    1e04:	87 51       	subi	r24, 0x17	; 23
    1e06:	9e 4f       	sbci	r25, 0xFE	; 254
    1e08:	28 e0       	ldi	r18, 0x08	; 8
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	df 01       	movw	r26, r30
    1e0e:	82 2f       	mov	r24, r18
    1e10:	1d 92       	st	X+, r1
    1e12:	8a 95       	dec	r24
    1e14:	e9 f7       	brne	.-6      	; 0x1e10 <main+0x612>
    1e16:	fe 01       	movw	r30, r28
    1e18:	e7 51       	subi	r30, 0x17	; 23
    1e1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e1c:	88 e1       	ldi	r24, 0x18	; 24
    1e1e:	84 83       	std	Z+4, r24	; 0x04
    1e20:	fe 01       	movw	r30, r28
    1e22:	e7 51       	subi	r30, 0x17	; 23
    1e24:	fe 4f       	sbci	r31, 0xFE	; 254
    1e26:	88 e1       	ldi	r24, 0x18	; 24
    1e28:	85 83       	std	Z+5, r24	; 0x05
			0b00000000,
			0b00011000,
			0b00011000,
			0b00000000,
			0b00000000,
			0b00000000};
    1e2a:	ce 01       	movw	r24, r28
    1e2c:	8f 50       	subi	r24, 0x0F	; 15
    1e2e:	9e 4f       	sbci	r25, 0xFE	; 254
    1e30:	28 e0       	ldi	r18, 0x08	; 8
    1e32:	fc 01       	movw	r30, r24
    1e34:	df 01       	movw	r26, r30
    1e36:	82 2f       	mov	r24, r18
    1e38:	1d 92       	st	X+, r1
    1e3a:	8a 95       	dec	r24
    1e3c:	e9 f7       	brne	.-6      	; 0x1e38 <main+0x63a>
    1e3e:	fe 01       	movw	r30, r28
    1e40:	ef 50       	subi	r30, 0x0F	; 15
    1e42:	fe 4f       	sbci	r31, 0xFE	; 254
    1e44:	88 e1       	ldi	r24, 0x18	; 24
    1e46:	82 83       	std	Z+2, r24	; 0x02
    1e48:	fe 01       	movw	r30, r28
    1e4a:	ef 50       	subi	r30, 0x0F	; 15
    1e4c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e4e:	88 e1       	ldi	r24, 0x18	; 24
    1e50:	83 83       	std	Z+3, r24	; 0x03
			0b00001110,
			0b00010101,
			0b00001110,
			0b00000110,
			0b00001111,
			0b00001001};
    1e52:	ce 01       	movw	r24, r28
    1e54:	87 50       	subi	r24, 0x07	; 7
    1e56:	9e 4f       	sbci	r25, 0xFE	; 254
    1e58:	28 e0       	ldi	r18, 0x08	; 8
    1e5a:	fc 01       	movw	r30, r24
    1e5c:	df 01       	movw	r26, r30
    1e5e:	82 2f       	mov	r24, r18
    1e60:	1d 92       	st	X+, r1
    1e62:	8a 95       	dec	r24
    1e64:	e9 f7       	brne	.-6      	; 0x1e60 <main+0x662>
    1e66:	fe 01       	movw	r30, r28
    1e68:	e7 50       	subi	r30, 0x07	; 7
    1e6a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e6c:	8e e0       	ldi	r24, 0x0E	; 14
    1e6e:	80 83       	st	Z, r24
    1e70:	fe 01       	movw	r30, r28
    1e72:	e7 50       	subi	r30, 0x07	; 7
    1e74:	fe 4f       	sbci	r31, 0xFE	; 254
    1e76:	8e e0       	ldi	r24, 0x0E	; 14
    1e78:	81 83       	std	Z+1, r24	; 0x01
    1e7a:	fe 01       	movw	r30, r28
    1e7c:	e7 50       	subi	r30, 0x07	; 7
    1e7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e80:	85 e1       	ldi	r24, 0x15	; 21
    1e82:	82 83       	std	Z+2, r24	; 0x02
    1e84:	fe 01       	movw	r30, r28
    1e86:	e7 50       	subi	r30, 0x07	; 7
    1e88:	fe 4f       	sbci	r31, 0xFE	; 254
    1e8a:	8e e0       	ldi	r24, 0x0E	; 14
    1e8c:	83 83       	std	Z+3, r24	; 0x03
    1e8e:	fe 01       	movw	r30, r28
    1e90:	e7 50       	subi	r30, 0x07	; 7
    1e92:	fe 4f       	sbci	r31, 0xFE	; 254
    1e94:	86 e0       	ldi	r24, 0x06	; 6
    1e96:	84 83       	std	Z+4, r24	; 0x04
    1e98:	fe 01       	movw	r30, r28
    1e9a:	e7 50       	subi	r30, 0x07	; 7
    1e9c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e9e:	8f e0       	ldi	r24, 0x0F	; 15
    1ea0:	85 83       	std	Z+5, r24	; 0x05
    1ea2:	fe 01       	movw	r30, r28
    1ea4:	e7 50       	subi	r30, 0x07	; 7
    1ea6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ea8:	89 e0       	ldi	r24, 0x09	; 9
    1eaa:	86 83       	std	Z+6, r24	; 0x06
			0b00001110,
			0b00010101,
			0b00001110,
			0b00001100,
			0b00011110,
			0b00010010};
    1eac:	ce 01       	movw	r24, r28
    1eae:	8f 5f       	subi	r24, 0xFF	; 255
    1eb0:	9d 4f       	sbci	r25, 0xFD	; 253
    1eb2:	28 e0       	ldi	r18, 0x08	; 8
    1eb4:	fc 01       	movw	r30, r24
    1eb6:	df 01       	movw	r26, r30
    1eb8:	82 2f       	mov	r24, r18
    1eba:	1d 92       	st	X+, r1
    1ebc:	8a 95       	dec	r24
    1ebe:	e9 f7       	brne	.-6      	; 0x1eba <main+0x6bc>
    1ec0:	fe 01       	movw	r30, r28
    1ec2:	ef 5f       	subi	r30, 0xFF	; 255
    1ec4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ec6:	8e e0       	ldi	r24, 0x0E	; 14
    1ec8:	80 83       	st	Z, r24
    1eca:	fe 01       	movw	r30, r28
    1ecc:	ef 5f       	subi	r30, 0xFF	; 255
    1ece:	fd 4f       	sbci	r31, 0xFD	; 253
    1ed0:	8e e0       	ldi	r24, 0x0E	; 14
    1ed2:	81 83       	std	Z+1, r24	; 0x01
    1ed4:	fe 01       	movw	r30, r28
    1ed6:	ef 5f       	subi	r30, 0xFF	; 255
    1ed8:	fd 4f       	sbci	r31, 0xFD	; 253
    1eda:	85 e1       	ldi	r24, 0x15	; 21
    1edc:	82 83       	std	Z+2, r24	; 0x02
    1ede:	fe 01       	movw	r30, r28
    1ee0:	ef 5f       	subi	r30, 0xFF	; 255
    1ee2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ee4:	8e e0       	ldi	r24, 0x0E	; 14
    1ee6:	83 83       	std	Z+3, r24	; 0x03
    1ee8:	fe 01       	movw	r30, r28
    1eea:	ef 5f       	subi	r30, 0xFF	; 255
    1eec:	fd 4f       	sbci	r31, 0xFD	; 253
    1eee:	8c e0       	ldi	r24, 0x0C	; 12
    1ef0:	84 83       	std	Z+4, r24	; 0x04
    1ef2:	fe 01       	movw	r30, r28
    1ef4:	ef 5f       	subi	r30, 0xFF	; 255
    1ef6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ef8:	8e e1       	ldi	r24, 0x1E	; 30
    1efa:	85 83       	std	Z+5, r24	; 0x05
    1efc:	fe 01       	movw	r30, r28
    1efe:	ef 5f       	subi	r30, 0xFF	; 255
    1f00:	fd 4f       	sbci	r31, 0xFD	; 253
    1f02:	82 e1       	ldi	r24, 0x12	; 18
    1f04:	86 83       	std	Z+6, r24	; 0x06
			0b00001110,
			0b00000101,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00000001};
    1f06:	ce 01       	movw	r24, r28
    1f08:	87 5f       	subi	r24, 0xF7	; 247
    1f0a:	9d 4f       	sbci	r25, 0xFD	; 253
    1f0c:	28 e0       	ldi	r18, 0x08	; 8
    1f0e:	fc 01       	movw	r30, r24
    1f10:	df 01       	movw	r26, r30
    1f12:	82 2f       	mov	r24, r18
    1f14:	1d 92       	st	X+, r1
    1f16:	8a 95       	dec	r24
    1f18:	e9 f7       	brne	.-6      	; 0x1f14 <main+0x716>
    1f1a:	fe 01       	movw	r30, r28
    1f1c:	e7 5f       	subi	r30, 0xF7	; 247
    1f1e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f20:	8e e0       	ldi	r24, 0x0E	; 14
    1f22:	80 83       	st	Z, r24
    1f24:	fe 01       	movw	r30, r28
    1f26:	e7 5f       	subi	r30, 0xF7	; 247
    1f28:	fd 4f       	sbci	r31, 0xFD	; 253
    1f2a:	8e e0       	ldi	r24, 0x0E	; 14
    1f2c:	81 83       	std	Z+1, r24	; 0x01
    1f2e:	fe 01       	movw	r30, r28
    1f30:	e7 5f       	subi	r30, 0xF7	; 247
    1f32:	fd 4f       	sbci	r31, 0xFD	; 253
    1f34:	85 e0       	ldi	r24, 0x05	; 5
    1f36:	82 83       	std	Z+2, r24	; 0x02
    1f38:	fe 01       	movw	r30, r28
    1f3a:	e7 5f       	subi	r30, 0xF7	; 247
    1f3c:	fd 4f       	sbci	r31, 0xFD	; 253
    1f3e:	8f e1       	ldi	r24, 0x1F	; 31
    1f40:	83 83       	std	Z+3, r24	; 0x03
    1f42:	fe 01       	movw	r30, r28
    1f44:	e7 5f       	subi	r30, 0xF7	; 247
    1f46:	fd 4f       	sbci	r31, 0xFD	; 253
    1f48:	84 e0       	ldi	r24, 0x04	; 4
    1f4a:	84 83       	std	Z+4, r24	; 0x04
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	e7 5f       	subi	r30, 0xF7	; 247
    1f50:	fd 4f       	sbci	r31, 0xFD	; 253
    1f52:	8f e1       	ldi	r24, 0x1F	; 31
    1f54:	85 83       	std	Z+5, r24	; 0x05
    1f56:	fe 01       	movw	r30, r28
    1f58:	e7 5f       	subi	r30, 0xF7	; 247
    1f5a:	fd 4f       	sbci	r31, 0xFD	; 253
    1f5c:	81 e0       	ldi	r24, 0x01	; 1
    1f5e:	86 83       	std	Z+6, r24	; 0x06
			0b00000000,
			0b00001110,
			0b00001110,
			0b00001110,
			0b00011111,
			0b00011111};
    1f60:	ce 01       	movw	r24, r28
    1f62:	8f 5e       	subi	r24, 0xEF	; 239
    1f64:	9d 4f       	sbci	r25, 0xFD	; 253
    1f66:	28 e0       	ldi	r18, 0x08	; 8
    1f68:	fc 01       	movw	r30, r24
    1f6a:	df 01       	movw	r26, r30
    1f6c:	82 2f       	mov	r24, r18
    1f6e:	1d 92       	st	X+, r1
    1f70:	8a 95       	dec	r24
    1f72:	e9 f7       	brne	.-6      	; 0x1f6e <main+0x770>
    1f74:	fe 01       	movw	r30, r28
    1f76:	ef 5e       	subi	r30, 0xEF	; 239
    1f78:	fd 4f       	sbci	r31, 0xFD	; 253
    1f7a:	8e e0       	ldi	r24, 0x0E	; 14
    1f7c:	82 83       	std	Z+2, r24	; 0x02
    1f7e:	fe 01       	movw	r30, r28
    1f80:	ef 5e       	subi	r30, 0xEF	; 239
    1f82:	fd 4f       	sbci	r31, 0xFD	; 253
    1f84:	8e e0       	ldi	r24, 0x0E	; 14
    1f86:	83 83       	std	Z+3, r24	; 0x03
    1f88:	fe 01       	movw	r30, r28
    1f8a:	ef 5e       	subi	r30, 0xEF	; 239
    1f8c:	fd 4f       	sbci	r31, 0xFD	; 253
    1f8e:	8e e0       	ldi	r24, 0x0E	; 14
    1f90:	84 83       	std	Z+4, r24	; 0x04
    1f92:	fe 01       	movw	r30, r28
    1f94:	ef 5e       	subi	r30, 0xEF	; 239
    1f96:	fd 4f       	sbci	r31, 0xFD	; 253
    1f98:	8f e1       	ldi	r24, 0x1F	; 31
    1f9a:	85 83       	std	Z+5, r24	; 0x05
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	ef 5e       	subi	r30, 0xEF	; 239
    1fa0:	fd 4f       	sbci	r31, 0xFD	; 253
    1fa2:	8f e1       	ldi	r24, 0x1F	; 31
    1fa4:	86 83       	std	Z+6, r24	; 0x06
			0b00011111,
			0b00011010,
			0b00011010,
			0b00011000,
			0b00011000,
			0b00011000};
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	87 5e       	subi	r24, 0xE7	; 231
    1faa:	9d 4f       	sbci	r25, 0xFD	; 253
    1fac:	28 e0       	ldi	r18, 0x08	; 8
    1fae:	fc 01       	movw	r30, r24
    1fb0:	df 01       	movw	r26, r30
    1fb2:	82 2f       	mov	r24, r18
    1fb4:	1d 92       	st	X+, r1
    1fb6:	8a 95       	dec	r24
    1fb8:	e9 f7       	brne	.-6      	; 0x1fb4 <main+0x7b6>
    1fba:	fe 01       	movw	r30, r28
    1fbc:	e7 5e       	subi	r30, 0xE7	; 231
    1fbe:	fd 4f       	sbci	r31, 0xFD	; 253
    1fc0:	8f e1       	ldi	r24, 0x1F	; 31
    1fc2:	80 83       	st	Z, r24
    1fc4:	fe 01       	movw	r30, r28
    1fc6:	e7 5e       	subi	r30, 0xE7	; 231
    1fc8:	fd 4f       	sbci	r31, 0xFD	; 253
    1fca:	8f e1       	ldi	r24, 0x1F	; 31
    1fcc:	81 83       	std	Z+1, r24	; 0x01
    1fce:	fe 01       	movw	r30, r28
    1fd0:	e7 5e       	subi	r30, 0xE7	; 231
    1fd2:	fd 4f       	sbci	r31, 0xFD	; 253
    1fd4:	8a e1       	ldi	r24, 0x1A	; 26
    1fd6:	82 83       	std	Z+2, r24	; 0x02
    1fd8:	fe 01       	movw	r30, r28
    1fda:	e7 5e       	subi	r30, 0xE7	; 231
    1fdc:	fd 4f       	sbci	r31, 0xFD	; 253
    1fde:	8a e1       	ldi	r24, 0x1A	; 26
    1fe0:	83 83       	std	Z+3, r24	; 0x03
    1fe2:	fe 01       	movw	r30, r28
    1fe4:	e7 5e       	subi	r30, 0xE7	; 231
    1fe6:	fd 4f       	sbci	r31, 0xFD	; 253
    1fe8:	88 e1       	ldi	r24, 0x18	; 24
    1fea:	84 83       	std	Z+4, r24	; 0x04
    1fec:	fe 01       	movw	r30, r28
    1fee:	e7 5e       	subi	r30, 0xE7	; 231
    1ff0:	fd 4f       	sbci	r31, 0xFD	; 253
    1ff2:	88 e1       	ldi	r24, 0x18	; 24
    1ff4:	85 83       	std	Z+5, r24	; 0x05
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e7 5e       	subi	r30, 0xE7	; 231
    1ffa:	fd 4f       	sbci	r31, 0xFD	; 253
    1ffc:	88 e1       	ldi	r24, 0x18	; 24
    1ffe:	86 83       	std	Z+6, r24	; 0x06
			0b00000000,
			0b00000011,
			0b00011111,
			0b00000011,
			0b00000000,
			0b00000000};
    2000:	ce 01       	movw	r24, r28
    2002:	8f 5d       	subi	r24, 0xDF	; 223
    2004:	9d 4f       	sbci	r25, 0xFD	; 253
    2006:	28 e0       	ldi	r18, 0x08	; 8
    2008:	fc 01       	movw	r30, r24
    200a:	df 01       	movw	r26, r30
    200c:	82 2f       	mov	r24, r18
    200e:	1d 92       	st	X+, r1
    2010:	8a 95       	dec	r24
    2012:	e9 f7       	brne	.-6      	; 0x200e <main+0x810>
    2014:	fe 01       	movw	r30, r28
    2016:	ef 5d       	subi	r30, 0xDF	; 223
    2018:	fd 4f       	sbci	r31, 0xFD	; 253
    201a:	83 e0       	ldi	r24, 0x03	; 3
    201c:	82 83       	std	Z+2, r24	; 0x02
    201e:	fe 01       	movw	r30, r28
    2020:	ef 5d       	subi	r30, 0xDF	; 223
    2022:	fd 4f       	sbci	r31, 0xFD	; 253
    2024:	8f e1       	ldi	r24, 0x1F	; 31
    2026:	83 83       	std	Z+3, r24	; 0x03
    2028:	fe 01       	movw	r30, r28
    202a:	ef 5d       	subi	r30, 0xDF	; 223
    202c:	fd 4f       	sbci	r31, 0xFD	; 253
    202e:	83 e0       	ldi	r24, 0x03	; 3
    2030:	84 83       	std	Z+4, r24	; 0x04
			0b00001111,
			0b00000110,
			0b00011111,
			0b00000100,
			0b00011111,
			0b00010001};
    2032:	ce 01       	movw	r24, r28
    2034:	87 5d       	subi	r24, 0xD7	; 215
    2036:	9d 4f       	sbci	r25, 0xFD	; 253
    2038:	28 e0       	ldi	r18, 0x08	; 8
    203a:	fc 01       	movw	r30, r24
    203c:	df 01       	movw	r26, r30
    203e:	82 2f       	mov	r24, r18
    2040:	1d 92       	st	X+, r1
    2042:	8a 95       	dec	r24
    2044:	e9 f7       	brne	.-6      	; 0x2040 <main+0x842>
    2046:	fe 01       	movw	r30, r28
    2048:	e7 5d       	subi	r30, 0xD7	; 215
    204a:	fd 4f       	sbci	r31, 0xFD	; 253
    204c:	8f e1       	ldi	r24, 0x1F	; 31
    204e:	80 83       	st	Z, r24
    2050:	fe 01       	movw	r30, r28
    2052:	e7 5d       	subi	r30, 0xD7	; 215
    2054:	fd 4f       	sbci	r31, 0xFD	; 253
    2056:	8f e0       	ldi	r24, 0x0F	; 15
    2058:	81 83       	std	Z+1, r24	; 0x01
    205a:	fe 01       	movw	r30, r28
    205c:	e7 5d       	subi	r30, 0xD7	; 215
    205e:	fd 4f       	sbci	r31, 0xFD	; 253
    2060:	86 e0       	ldi	r24, 0x06	; 6
    2062:	82 83       	std	Z+2, r24	; 0x02
    2064:	fe 01       	movw	r30, r28
    2066:	e7 5d       	subi	r30, 0xD7	; 215
    2068:	fd 4f       	sbci	r31, 0xFD	; 253
    206a:	8f e1       	ldi	r24, 0x1F	; 31
    206c:	83 83       	std	Z+3, r24	; 0x03
    206e:	fe 01       	movw	r30, r28
    2070:	e7 5d       	subi	r30, 0xD7	; 215
    2072:	fd 4f       	sbci	r31, 0xFD	; 253
    2074:	84 e0       	ldi	r24, 0x04	; 4
    2076:	84 83       	std	Z+4, r24	; 0x04
    2078:	fe 01       	movw	r30, r28
    207a:	e7 5d       	subi	r30, 0xD7	; 215
    207c:	fd 4f       	sbci	r31, 0xFD	; 253
    207e:	8f e1       	ldi	r24, 0x1F	; 31
    2080:	85 83       	std	Z+5, r24	; 0x05
    2082:	fe 01       	movw	r30, r28
    2084:	e7 5d       	subi	r30, 0xD7	; 215
    2086:	fd 4f       	sbci	r31, 0xFD	; 253
    2088:	81 e1       	ldi	r24, 0x11	; 17
    208a:	86 83       	std	Z+6, r24	; 0x06
			0b00010110,
			0b00001111,
			0b00011110,
			0b00010001,
			0b00001000,
			0b00001000};
    208c:	ce 01       	movw	r24, r28
    208e:	8f 5c       	subi	r24, 0xCF	; 207
    2090:	9d 4f       	sbci	r25, 0xFD	; 253
    2092:	28 e0       	ldi	r18, 0x08	; 8
    2094:	fc 01       	movw	r30, r24
    2096:	df 01       	movw	r26, r30
    2098:	82 2f       	mov	r24, r18
    209a:	1d 92       	st	X+, r1
    209c:	8a 95       	dec	r24
    209e:	e9 f7       	brne	.-6      	; 0x209a <main+0x89c>
    20a0:	fe 01       	movw	r30, r28
    20a2:	ef 5c       	subi	r30, 0xCF	; 207
    20a4:	fd 4f       	sbci	r31, 0xFD	; 253
    20a6:	84 e0       	ldi	r24, 0x04	; 4
    20a8:	80 83       	st	Z, r24
    20aa:	fe 01       	movw	r30, r28
    20ac:	ef 5c       	subi	r30, 0xCF	; 207
    20ae:	fd 4f       	sbci	r31, 0xFD	; 253
    20b0:	86 e1       	ldi	r24, 0x16	; 22
    20b2:	81 83       	std	Z+1, r24	; 0x01
    20b4:	fe 01       	movw	r30, r28
    20b6:	ef 5c       	subi	r30, 0xCF	; 207
    20b8:	fd 4f       	sbci	r31, 0xFD	; 253
    20ba:	8f e0       	ldi	r24, 0x0F	; 15
    20bc:	82 83       	std	Z+2, r24	; 0x02
    20be:	fe 01       	movw	r30, r28
    20c0:	ef 5c       	subi	r30, 0xCF	; 207
    20c2:	fd 4f       	sbci	r31, 0xFD	; 253
    20c4:	8e e1       	ldi	r24, 0x1E	; 30
    20c6:	83 83       	std	Z+3, r24	; 0x03
    20c8:	fe 01       	movw	r30, r28
    20ca:	ef 5c       	subi	r30, 0xCF	; 207
    20cc:	fd 4f       	sbci	r31, 0xFD	; 253
    20ce:	81 e1       	ldi	r24, 0x11	; 17
    20d0:	84 83       	std	Z+4, r24	; 0x04
    20d2:	fe 01       	movw	r30, r28
    20d4:	ef 5c       	subi	r30, 0xCF	; 207
    20d6:	fd 4f       	sbci	r31, 0xFD	; 253
    20d8:	88 e0       	ldi	r24, 0x08	; 8
    20da:	85 83       	std	Z+5, r24	; 0x05
    20dc:	fe 01       	movw	r30, r28
    20de:	ef 5c       	subi	r30, 0xCF	; 207
    20e0:	fd 4f       	sbci	r31, 0xFD	; 253
    20e2:	88 e0       	ldi	r24, 0x08	; 8
    20e4:	86 83       	std	Z+6, r24	; 0x06



	while(1)
	{
		CLCD_u8WriteSpecialCharacter(Pattern,0,0,3);
    20e6:	ce 01       	movw	r24, r28
    20e8:	87 52       	subi	r24, 0x27	; 39
    20ea:	9e 4f       	sbci	r25, 0xFE	; 254
    20ec:	60 e0       	ldi	r22, 0x00	; 0
    20ee:	40 e0       	ldi	r20, 0x00	; 0
    20f0:	23 e0       	ldi	r18, 0x03	; 3
    20f2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    20f6:	fe 01       	movw	r30, r28
    20f8:	e9 58       	subi	r30, 0x89	; 137
    20fa:	fe 4f       	sbci	r31, 0xFE	; 254
    20fc:	80 e0       	ldi	r24, 0x00	; 0
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	a0 e2       	ldi	r26, 0x20	; 32
    2102:	b1 e4       	ldi	r27, 0x41	; 65
    2104:	80 83       	st	Z, r24
    2106:	91 83       	std	Z+1, r25	; 0x01
    2108:	a2 83       	std	Z+2, r26	; 0x02
    210a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    210c:	8e 01       	movw	r16, r28
    210e:	0d 58       	subi	r16, 0x8D	; 141
    2110:	1e 4f       	sbci	r17, 0xFE	; 254
    2112:	fe 01       	movw	r30, r28
    2114:	e9 58       	subi	r30, 0x89	; 137
    2116:	fe 4f       	sbci	r31, 0xFE	; 254
    2118:	60 81       	ld	r22, Z
    211a:	71 81       	ldd	r23, Z+1	; 0x01
    211c:	82 81       	ldd	r24, Z+2	; 0x02
    211e:	93 81       	ldd	r25, Z+3	; 0x03
    2120:	20 e0       	ldi	r18, 0x00	; 0
    2122:	30 e0       	ldi	r19, 0x00	; 0
    2124:	4a ef       	ldi	r20, 0xFA	; 250
    2126:	54 e4       	ldi	r21, 0x44	; 68
    2128:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    212c:	dc 01       	movw	r26, r24
    212e:	cb 01       	movw	r24, r22
    2130:	f8 01       	movw	r30, r16
    2132:	80 83       	st	Z, r24
    2134:	91 83       	std	Z+1, r25	; 0x01
    2136:	a2 83       	std	Z+2, r26	; 0x02
    2138:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    213a:	fe 01       	movw	r30, r28
    213c:	ed 58       	subi	r30, 0x8D	; 141
    213e:	fe 4f       	sbci	r31, 0xFE	; 254
    2140:	60 81       	ld	r22, Z
    2142:	71 81       	ldd	r23, Z+1	; 0x01
    2144:	82 81       	ldd	r24, Z+2	; 0x02
    2146:	93 81       	ldd	r25, Z+3	; 0x03
    2148:	20 e0       	ldi	r18, 0x00	; 0
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	40 e8       	ldi	r20, 0x80	; 128
    214e:	5f e3       	ldi	r21, 0x3F	; 63
    2150:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2154:	88 23       	and	r24, r24
    2156:	44 f4       	brge	.+16     	; 0x2168 <main+0x96a>
		__ticks = 1;
    2158:	fe 01       	movw	r30, r28
    215a:	ef 58       	subi	r30, 0x8F	; 143
    215c:	fe 4f       	sbci	r31, 0xFE	; 254
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	91 83       	std	Z+1, r25	; 0x01
    2164:	80 83       	st	Z, r24
    2166:	64 c0       	rjmp	.+200    	; 0x2230 <main+0xa32>
	else if (__tmp > 65535)
    2168:	fe 01       	movw	r30, r28
    216a:	ed 58       	subi	r30, 0x8D	; 141
    216c:	fe 4f       	sbci	r31, 0xFE	; 254
    216e:	60 81       	ld	r22, Z
    2170:	71 81       	ldd	r23, Z+1	; 0x01
    2172:	82 81       	ldd	r24, Z+2	; 0x02
    2174:	93 81       	ldd	r25, Z+3	; 0x03
    2176:	20 e0       	ldi	r18, 0x00	; 0
    2178:	3f ef       	ldi	r19, 0xFF	; 255
    217a:	4f e7       	ldi	r20, 0x7F	; 127
    217c:	57 e4       	ldi	r21, 0x47	; 71
    217e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2182:	18 16       	cp	r1, r24
    2184:	0c f0       	brlt	.+2      	; 0x2188 <main+0x98a>
    2186:	43 c0       	rjmp	.+134    	; 0x220e <main+0xa10>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2188:	fe 01       	movw	r30, r28
    218a:	e9 58       	subi	r30, 0x89	; 137
    218c:	fe 4f       	sbci	r31, 0xFE	; 254
    218e:	60 81       	ld	r22, Z
    2190:	71 81       	ldd	r23, Z+1	; 0x01
    2192:	82 81       	ldd	r24, Z+2	; 0x02
    2194:	93 81       	ldd	r25, Z+3	; 0x03
    2196:	20 e0       	ldi	r18, 0x00	; 0
    2198:	30 e0       	ldi	r19, 0x00	; 0
    219a:	40 e2       	ldi	r20, 0x20	; 32
    219c:	51 e4       	ldi	r21, 0x41	; 65
    219e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21a2:	dc 01       	movw	r26, r24
    21a4:	cb 01       	movw	r24, r22
    21a6:	8e 01       	movw	r16, r28
    21a8:	0f 58       	subi	r16, 0x8F	; 143
    21aa:	1e 4f       	sbci	r17, 0xFE	; 254
    21ac:	bc 01       	movw	r22, r24
    21ae:	cd 01       	movw	r24, r26
    21b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21b4:	dc 01       	movw	r26, r24
    21b6:	cb 01       	movw	r24, r22
    21b8:	f8 01       	movw	r30, r16
    21ba:	91 83       	std	Z+1, r25	; 0x01
    21bc:	80 83       	st	Z, r24
    21be:	1f c0       	rjmp	.+62     	; 0x21fe <main+0xa00>
    21c0:	fe 01       	movw	r30, r28
    21c2:	e1 59       	subi	r30, 0x91	; 145
    21c4:	fe 4f       	sbci	r31, 0xFE	; 254
    21c6:	88 ec       	ldi	r24, 0xC8	; 200
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	91 83       	std	Z+1, r25	; 0x01
    21cc:	80 83       	st	Z, r24
    21ce:	fe 01       	movw	r30, r28
    21d0:	e1 59       	subi	r30, 0x91	; 145
    21d2:	fe 4f       	sbci	r31, 0xFE	; 254
    21d4:	80 81       	ld	r24, Z
    21d6:	91 81       	ldd	r25, Z+1	; 0x01
    21d8:	01 97       	sbiw	r24, 0x01	; 1
    21da:	f1 f7       	brne	.-4      	; 0x21d8 <main+0x9da>
    21dc:	fe 01       	movw	r30, r28
    21de:	e1 59       	subi	r30, 0x91	; 145
    21e0:	fe 4f       	sbci	r31, 0xFE	; 254
    21e2:	91 83       	std	Z+1, r25	; 0x01
    21e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21e6:	de 01       	movw	r26, r28
    21e8:	af 58       	subi	r26, 0x8F	; 143
    21ea:	be 4f       	sbci	r27, 0xFE	; 254
    21ec:	fe 01       	movw	r30, r28
    21ee:	ef 58       	subi	r30, 0x8F	; 143
    21f0:	fe 4f       	sbci	r31, 0xFE	; 254
    21f2:	80 81       	ld	r24, Z
    21f4:	91 81       	ldd	r25, Z+1	; 0x01
    21f6:	01 97       	sbiw	r24, 0x01	; 1
    21f8:	11 96       	adiw	r26, 0x01	; 1
    21fa:	9c 93       	st	X, r25
    21fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21fe:	fe 01       	movw	r30, r28
    2200:	ef 58       	subi	r30, 0x8F	; 143
    2202:	fe 4f       	sbci	r31, 0xFE	; 254
    2204:	80 81       	ld	r24, Z
    2206:	91 81       	ldd	r25, Z+1	; 0x01
    2208:	00 97       	sbiw	r24, 0x00	; 0
    220a:	d1 f6       	brne	.-76     	; 0x21c0 <main+0x9c2>
    220c:	27 c0       	rjmp	.+78     	; 0x225c <main+0xa5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    220e:	8e 01       	movw	r16, r28
    2210:	0f 58       	subi	r16, 0x8F	; 143
    2212:	1e 4f       	sbci	r17, 0xFE	; 254
    2214:	fe 01       	movw	r30, r28
    2216:	ed 58       	subi	r30, 0x8D	; 141
    2218:	fe 4f       	sbci	r31, 0xFE	; 254
    221a:	60 81       	ld	r22, Z
    221c:	71 81       	ldd	r23, Z+1	; 0x01
    221e:	82 81       	ldd	r24, Z+2	; 0x02
    2220:	93 81       	ldd	r25, Z+3	; 0x03
    2222:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2226:	dc 01       	movw	r26, r24
    2228:	cb 01       	movw	r24, r22
    222a:	f8 01       	movw	r30, r16
    222c:	91 83       	std	Z+1, r25	; 0x01
    222e:	80 83       	st	Z, r24
    2230:	de 01       	movw	r26, r28
    2232:	a3 59       	subi	r26, 0x93	; 147
    2234:	be 4f       	sbci	r27, 0xFE	; 254
    2236:	fe 01       	movw	r30, r28
    2238:	ef 58       	subi	r30, 0x8F	; 143
    223a:	fe 4f       	sbci	r31, 0xFE	; 254
    223c:	80 81       	ld	r24, Z
    223e:	91 81       	ldd	r25, Z+1	; 0x01
    2240:	8d 93       	st	X+, r24
    2242:	9c 93       	st	X, r25
    2244:	fe 01       	movw	r30, r28
    2246:	e3 59       	subi	r30, 0x93	; 147
    2248:	fe 4f       	sbci	r31, 0xFE	; 254
    224a:	80 81       	ld	r24, Z
    224c:	91 81       	ldd	r25, Z+1	; 0x01
    224e:	01 97       	sbiw	r24, 0x01	; 1
    2250:	f1 f7       	brne	.-4      	; 0x224e <main+0xa50>
    2252:	fe 01       	movw	r30, r28
    2254:	e3 59       	subi	r30, 0x93	; 147
    2256:	fe 4f       	sbci	r31, 0xFE	; 254
    2258:	91 83       	std	Z+1, r25	; 0x01
    225a:	80 83       	st	Z, r24
		_delay_ms(10);
		CLCD_u8GoToXY(0,7);
    225c:	80 e0       	ldi	r24, 0x00	; 0
    225e:	67 e0       	ldi	r22, 0x07	; 7
    2260:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(Hello);
    2264:	ce 01       	movw	r24, r28
    2266:	81 58       	subi	r24, 0x81	; 129
    2268:	9e 4f       	sbci	r25, 0xFE	; 254
    226a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8GoToXY(1,5);
    226e:	81 e0       	ldi	r24, 0x01	; 1
    2270:	65 e0       	ldi	r22, 0x05	; 5
    2272:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(statement1);
    2276:	ce 01       	movw	r24, r28
    2278:	8b 57       	subi	r24, 0x7B	; 123
    227a:	9e 4f       	sbci	r25, 0xFE	; 254
    227c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8GoToXY(1,9);
    2280:	81 e0       	ldi	r24, 0x01	; 1
    2282:	69 e0       	ldi	r22, 0x09	; 9
    2284:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(statement2);
    2288:	ce 01       	movw	r24, r28
    228a:	87 57       	subi	r24, 0x77	; 119
    228c:	9e 4f       	sbci	r25, 0xFE	; 254
    228e:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
    2292:	fe 01       	movw	r30, r28
    2294:	e7 59       	subi	r30, 0x97	; 151
    2296:	fe 4f       	sbci	r31, 0xFE	; 254
    2298:	80 e0       	ldi	r24, 0x00	; 0
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	a8 e4       	ldi	r26, 0x48	; 72
    229e:	b3 e4       	ldi	r27, 0x43	; 67
    22a0:	80 83       	st	Z, r24
    22a2:	91 83       	std	Z+1, r25	; 0x01
    22a4:	a2 83       	std	Z+2, r26	; 0x02
    22a6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22a8:	8e 01       	movw	r16, r28
    22aa:	0b 59       	subi	r16, 0x9B	; 155
    22ac:	1e 4f       	sbci	r17, 0xFE	; 254
    22ae:	fe 01       	movw	r30, r28
    22b0:	e7 59       	subi	r30, 0x97	; 151
    22b2:	fe 4f       	sbci	r31, 0xFE	; 254
    22b4:	60 81       	ld	r22, Z
    22b6:	71 81       	ldd	r23, Z+1	; 0x01
    22b8:	82 81       	ldd	r24, Z+2	; 0x02
    22ba:	93 81       	ldd	r25, Z+3	; 0x03
    22bc:	20 e0       	ldi	r18, 0x00	; 0
    22be:	30 e0       	ldi	r19, 0x00	; 0
    22c0:	4a ef       	ldi	r20, 0xFA	; 250
    22c2:	54 e4       	ldi	r21, 0x44	; 68
    22c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	f8 01       	movw	r30, r16
    22ce:	80 83       	st	Z, r24
    22d0:	91 83       	std	Z+1, r25	; 0x01
    22d2:	a2 83       	std	Z+2, r26	; 0x02
    22d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22d6:	fe 01       	movw	r30, r28
    22d8:	eb 59       	subi	r30, 0x9B	; 155
    22da:	fe 4f       	sbci	r31, 0xFE	; 254
    22dc:	60 81       	ld	r22, Z
    22de:	71 81       	ldd	r23, Z+1	; 0x01
    22e0:	82 81       	ldd	r24, Z+2	; 0x02
    22e2:	93 81       	ldd	r25, Z+3	; 0x03
    22e4:	20 e0       	ldi	r18, 0x00	; 0
    22e6:	30 e0       	ldi	r19, 0x00	; 0
    22e8:	40 e8       	ldi	r20, 0x80	; 128
    22ea:	5f e3       	ldi	r21, 0x3F	; 63
    22ec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22f0:	88 23       	and	r24, r24
    22f2:	44 f4       	brge	.+16     	; 0x2304 <main+0xb06>
		__ticks = 1;
    22f4:	fe 01       	movw	r30, r28
    22f6:	ed 59       	subi	r30, 0x9D	; 157
    22f8:	fe 4f       	sbci	r31, 0xFE	; 254
    22fa:	81 e0       	ldi	r24, 0x01	; 1
    22fc:	90 e0       	ldi	r25, 0x00	; 0
    22fe:	91 83       	std	Z+1, r25	; 0x01
    2300:	80 83       	st	Z, r24
    2302:	64 c0       	rjmp	.+200    	; 0x23cc <main+0xbce>
	else if (__tmp > 65535)
    2304:	fe 01       	movw	r30, r28
    2306:	eb 59       	subi	r30, 0x9B	; 155
    2308:	fe 4f       	sbci	r31, 0xFE	; 254
    230a:	60 81       	ld	r22, Z
    230c:	71 81       	ldd	r23, Z+1	; 0x01
    230e:	82 81       	ldd	r24, Z+2	; 0x02
    2310:	93 81       	ldd	r25, Z+3	; 0x03
    2312:	20 e0       	ldi	r18, 0x00	; 0
    2314:	3f ef       	ldi	r19, 0xFF	; 255
    2316:	4f e7       	ldi	r20, 0x7F	; 127
    2318:	57 e4       	ldi	r21, 0x47	; 71
    231a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    231e:	18 16       	cp	r1, r24
    2320:	0c f0       	brlt	.+2      	; 0x2324 <main+0xb26>
    2322:	43 c0       	rjmp	.+134    	; 0x23aa <main+0xbac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2324:	fe 01       	movw	r30, r28
    2326:	e7 59       	subi	r30, 0x97	; 151
    2328:	fe 4f       	sbci	r31, 0xFE	; 254
    232a:	60 81       	ld	r22, Z
    232c:	71 81       	ldd	r23, Z+1	; 0x01
    232e:	82 81       	ldd	r24, Z+2	; 0x02
    2330:	93 81       	ldd	r25, Z+3	; 0x03
    2332:	20 e0       	ldi	r18, 0x00	; 0
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	40 e2       	ldi	r20, 0x20	; 32
    2338:	51 e4       	ldi	r21, 0x41	; 65
    233a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    233e:	dc 01       	movw	r26, r24
    2340:	cb 01       	movw	r24, r22
    2342:	8e 01       	movw	r16, r28
    2344:	0d 59       	subi	r16, 0x9D	; 157
    2346:	1e 4f       	sbci	r17, 0xFE	; 254
    2348:	bc 01       	movw	r22, r24
    234a:	cd 01       	movw	r24, r26
    234c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2350:	dc 01       	movw	r26, r24
    2352:	cb 01       	movw	r24, r22
    2354:	f8 01       	movw	r30, r16
    2356:	91 83       	std	Z+1, r25	; 0x01
    2358:	80 83       	st	Z, r24
    235a:	1f c0       	rjmp	.+62     	; 0x239a <main+0xb9c>
    235c:	fe 01       	movw	r30, r28
    235e:	ef 59       	subi	r30, 0x9F	; 159
    2360:	fe 4f       	sbci	r31, 0xFE	; 254
    2362:	88 ec       	ldi	r24, 0xC8	; 200
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	91 83       	std	Z+1, r25	; 0x01
    2368:	80 83       	st	Z, r24
    236a:	fe 01       	movw	r30, r28
    236c:	ef 59       	subi	r30, 0x9F	; 159
    236e:	fe 4f       	sbci	r31, 0xFE	; 254
    2370:	80 81       	ld	r24, Z
    2372:	91 81       	ldd	r25, Z+1	; 0x01
    2374:	01 97       	sbiw	r24, 0x01	; 1
    2376:	f1 f7       	brne	.-4      	; 0x2374 <main+0xb76>
    2378:	fe 01       	movw	r30, r28
    237a:	ef 59       	subi	r30, 0x9F	; 159
    237c:	fe 4f       	sbci	r31, 0xFE	; 254
    237e:	91 83       	std	Z+1, r25	; 0x01
    2380:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2382:	de 01       	movw	r26, r28
    2384:	ad 59       	subi	r26, 0x9D	; 157
    2386:	be 4f       	sbci	r27, 0xFE	; 254
    2388:	fe 01       	movw	r30, r28
    238a:	ed 59       	subi	r30, 0x9D	; 157
    238c:	fe 4f       	sbci	r31, 0xFE	; 254
    238e:	80 81       	ld	r24, Z
    2390:	91 81       	ldd	r25, Z+1	; 0x01
    2392:	01 97       	sbiw	r24, 0x01	; 1
    2394:	11 96       	adiw	r26, 0x01	; 1
    2396:	9c 93       	st	X, r25
    2398:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    239a:	fe 01       	movw	r30, r28
    239c:	ed 59       	subi	r30, 0x9D	; 157
    239e:	fe 4f       	sbci	r31, 0xFE	; 254
    23a0:	80 81       	ld	r24, Z
    23a2:	91 81       	ldd	r25, Z+1	; 0x01
    23a4:	00 97       	sbiw	r24, 0x00	; 0
    23a6:	d1 f6       	brne	.-76     	; 0x235c <main+0xb5e>
    23a8:	27 c0       	rjmp	.+78     	; 0x23f8 <main+0xbfa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23aa:	8e 01       	movw	r16, r28
    23ac:	0d 59       	subi	r16, 0x9D	; 157
    23ae:	1e 4f       	sbci	r17, 0xFE	; 254
    23b0:	fe 01       	movw	r30, r28
    23b2:	eb 59       	subi	r30, 0x9B	; 155
    23b4:	fe 4f       	sbci	r31, 0xFE	; 254
    23b6:	60 81       	ld	r22, Z
    23b8:	71 81       	ldd	r23, Z+1	; 0x01
    23ba:	82 81       	ldd	r24, Z+2	; 0x02
    23bc:	93 81       	ldd	r25, Z+3	; 0x03
    23be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23c2:	dc 01       	movw	r26, r24
    23c4:	cb 01       	movw	r24, r22
    23c6:	f8 01       	movw	r30, r16
    23c8:	91 83       	std	Z+1, r25	; 0x01
    23ca:	80 83       	st	Z, r24
    23cc:	de 01       	movw	r26, r28
    23ce:	a1 5a       	subi	r26, 0xA1	; 161
    23d0:	be 4f       	sbci	r27, 0xFE	; 254
    23d2:	fe 01       	movw	r30, r28
    23d4:	ed 59       	subi	r30, 0x9D	; 157
    23d6:	fe 4f       	sbci	r31, 0xFE	; 254
    23d8:	80 81       	ld	r24, Z
    23da:	91 81       	ldd	r25, Z+1	; 0x01
    23dc:	8d 93       	st	X+, r24
    23de:	9c 93       	st	X, r25
    23e0:	fe 01       	movw	r30, r28
    23e2:	e1 5a       	subi	r30, 0xA1	; 161
    23e4:	fe 4f       	sbci	r31, 0xFE	; 254
    23e6:	80 81       	ld	r24, Z
    23e8:	91 81       	ldd	r25, Z+1	; 0x01
    23ea:	01 97       	sbiw	r24, 0x01	; 1
    23ec:	f1 f7       	brne	.-4      	; 0x23ea <main+0xbec>
    23ee:	fe 01       	movw	r30, r28
    23f0:	e1 5a       	subi	r30, 0xA1	; 161
    23f2:	fe 4f       	sbci	r31, 0xFE	; 254
    23f4:	91 83       	std	Z+1, r25	; 0x01
    23f6:	80 83       	st	Z, r24

		_delay_ms(200);


		CLCD_u8SendCommand(0b00000001);
    23f8:	81 e0       	ldi	r24, 0x01	; 1
    23fa:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>


		CLCD_u8SendString(play);
    23fe:	ce 01       	movw	r24, r28
    2400:	81 57       	subi	r24, 0x71	; 113
    2402:	9e 4f       	sbci	r25, 0xFE	; 254
    2404:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8GoToXY(1,0);
    2408:	81 e0       	ldi	r24, 0x01	; 1
    240a:	60 e0       	ldi	r22, 0x00	; 0
    240c:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(football);
    2410:	ce 01       	movw	r24, r28
    2412:	85 56       	subi	r24, 0x65	; 101
    2414:	9e 4f       	sbci	r25, 0xFE	; 254
    2416:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>

		for(Local_u8Iterator1=0;Local_u8Iterator1<=5;Local_u8Iterator1++)
    241a:	fe 01       	movw	r30, r28
    241c:	e3 58       	subi	r30, 0x83	; 131
    241e:	fe 4f       	sbci	r31, 0xFE	; 254
    2420:	10 82       	st	Z, r1
    2422:	8f c1       	rjmp	.+798    	; 0x2742 <main+0xf44>
		{
			CLCD_u8WriteSpecialCharacter(Pattern3,0,1,11);
    2424:	ce 01       	movw	r24, r28
    2426:	87 51       	subi	r24, 0x17	; 23
    2428:	9e 4f       	sbci	r25, 0xFE	; 254
    242a:	60 e0       	ldi	r22, 0x00	; 0
    242c:	41 e0       	ldi	r20, 0x01	; 1
    242e:	2b e0       	ldi	r18, 0x0B	; 11
    2430:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern2,1,1,10);
    2434:	ce 01       	movw	r24, r28
    2436:	8f 51       	subi	r24, 0x1F	; 31
    2438:	9e 4f       	sbci	r25, 0xFE	; 254
    243a:	61 e0       	ldi	r22, 0x01	; 1
    243c:	41 e0       	ldi	r20, 0x01	; 1
    243e:	2a e0       	ldi	r18, 0x0A	; 10
    2440:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2444:	fe 01       	movw	r30, r28
    2446:	e5 5a       	subi	r30, 0xA5	; 165
    2448:	fe 4f       	sbci	r31, 0xFE	; 254
    244a:	80 e0       	ldi	r24, 0x00	; 0
    244c:	90 e0       	ldi	r25, 0x00	; 0
    244e:	a0 e2       	ldi	r26, 0x20	; 32
    2450:	b1 e4       	ldi	r27, 0x41	; 65
    2452:	80 83       	st	Z, r24
    2454:	91 83       	std	Z+1, r25	; 0x01
    2456:	a2 83       	std	Z+2, r26	; 0x02
    2458:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    245a:	8e 01       	movw	r16, r28
    245c:	09 5a       	subi	r16, 0xA9	; 169
    245e:	1e 4f       	sbci	r17, 0xFE	; 254
    2460:	fe 01       	movw	r30, r28
    2462:	e5 5a       	subi	r30, 0xA5	; 165
    2464:	fe 4f       	sbci	r31, 0xFE	; 254
    2466:	60 81       	ld	r22, Z
    2468:	71 81       	ldd	r23, Z+1	; 0x01
    246a:	82 81       	ldd	r24, Z+2	; 0x02
    246c:	93 81       	ldd	r25, Z+3	; 0x03
    246e:	20 e0       	ldi	r18, 0x00	; 0
    2470:	30 e0       	ldi	r19, 0x00	; 0
    2472:	4a ef       	ldi	r20, 0xFA	; 250
    2474:	54 e4       	ldi	r21, 0x44	; 68
    2476:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    247a:	dc 01       	movw	r26, r24
    247c:	cb 01       	movw	r24, r22
    247e:	f8 01       	movw	r30, r16
    2480:	80 83       	st	Z, r24
    2482:	91 83       	std	Z+1, r25	; 0x01
    2484:	a2 83       	std	Z+2, r26	; 0x02
    2486:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2488:	fe 01       	movw	r30, r28
    248a:	e9 5a       	subi	r30, 0xA9	; 169
    248c:	fe 4f       	sbci	r31, 0xFE	; 254
    248e:	60 81       	ld	r22, Z
    2490:	71 81       	ldd	r23, Z+1	; 0x01
    2492:	82 81       	ldd	r24, Z+2	; 0x02
    2494:	93 81       	ldd	r25, Z+3	; 0x03
    2496:	20 e0       	ldi	r18, 0x00	; 0
    2498:	30 e0       	ldi	r19, 0x00	; 0
    249a:	40 e8       	ldi	r20, 0x80	; 128
    249c:	5f e3       	ldi	r21, 0x3F	; 63
    249e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24a2:	88 23       	and	r24, r24
    24a4:	44 f4       	brge	.+16     	; 0x24b6 <main+0xcb8>
		__ticks = 1;
    24a6:	fe 01       	movw	r30, r28
    24a8:	eb 5a       	subi	r30, 0xAB	; 171
    24aa:	fe 4f       	sbci	r31, 0xFE	; 254
    24ac:	81 e0       	ldi	r24, 0x01	; 1
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	91 83       	std	Z+1, r25	; 0x01
    24b2:	80 83       	st	Z, r24
    24b4:	64 c0       	rjmp	.+200    	; 0x257e <main+0xd80>
	else if (__tmp > 65535)
    24b6:	fe 01       	movw	r30, r28
    24b8:	e9 5a       	subi	r30, 0xA9	; 169
    24ba:	fe 4f       	sbci	r31, 0xFE	; 254
    24bc:	60 81       	ld	r22, Z
    24be:	71 81       	ldd	r23, Z+1	; 0x01
    24c0:	82 81       	ldd	r24, Z+2	; 0x02
    24c2:	93 81       	ldd	r25, Z+3	; 0x03
    24c4:	20 e0       	ldi	r18, 0x00	; 0
    24c6:	3f ef       	ldi	r19, 0xFF	; 255
    24c8:	4f e7       	ldi	r20, 0x7F	; 127
    24ca:	57 e4       	ldi	r21, 0x47	; 71
    24cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24d0:	18 16       	cp	r1, r24
    24d2:	0c f0       	brlt	.+2      	; 0x24d6 <main+0xcd8>
    24d4:	43 c0       	rjmp	.+134    	; 0x255c <main+0xd5e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24d6:	fe 01       	movw	r30, r28
    24d8:	e5 5a       	subi	r30, 0xA5	; 165
    24da:	fe 4f       	sbci	r31, 0xFE	; 254
    24dc:	60 81       	ld	r22, Z
    24de:	71 81       	ldd	r23, Z+1	; 0x01
    24e0:	82 81       	ldd	r24, Z+2	; 0x02
    24e2:	93 81       	ldd	r25, Z+3	; 0x03
    24e4:	20 e0       	ldi	r18, 0x00	; 0
    24e6:	30 e0       	ldi	r19, 0x00	; 0
    24e8:	40 e2       	ldi	r20, 0x20	; 32
    24ea:	51 e4       	ldi	r21, 0x41	; 65
    24ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	8e 01       	movw	r16, r28
    24f6:	0b 5a       	subi	r16, 0xAB	; 171
    24f8:	1e 4f       	sbci	r17, 0xFE	; 254
    24fa:	bc 01       	movw	r22, r24
    24fc:	cd 01       	movw	r24, r26
    24fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2502:	dc 01       	movw	r26, r24
    2504:	cb 01       	movw	r24, r22
    2506:	f8 01       	movw	r30, r16
    2508:	91 83       	std	Z+1, r25	; 0x01
    250a:	80 83       	st	Z, r24
    250c:	1f c0       	rjmp	.+62     	; 0x254c <main+0xd4e>
    250e:	fe 01       	movw	r30, r28
    2510:	ed 5a       	subi	r30, 0xAD	; 173
    2512:	fe 4f       	sbci	r31, 0xFE	; 254
    2514:	88 ec       	ldi	r24, 0xC8	; 200
    2516:	90 e0       	ldi	r25, 0x00	; 0
    2518:	91 83       	std	Z+1, r25	; 0x01
    251a:	80 83       	st	Z, r24
    251c:	fe 01       	movw	r30, r28
    251e:	ed 5a       	subi	r30, 0xAD	; 173
    2520:	fe 4f       	sbci	r31, 0xFE	; 254
    2522:	80 81       	ld	r24, Z
    2524:	91 81       	ldd	r25, Z+1	; 0x01
    2526:	01 97       	sbiw	r24, 0x01	; 1
    2528:	f1 f7       	brne	.-4      	; 0x2526 <main+0xd28>
    252a:	fe 01       	movw	r30, r28
    252c:	ed 5a       	subi	r30, 0xAD	; 173
    252e:	fe 4f       	sbci	r31, 0xFE	; 254
    2530:	91 83       	std	Z+1, r25	; 0x01
    2532:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2534:	de 01       	movw	r26, r28
    2536:	ab 5a       	subi	r26, 0xAB	; 171
    2538:	be 4f       	sbci	r27, 0xFE	; 254
    253a:	fe 01       	movw	r30, r28
    253c:	eb 5a       	subi	r30, 0xAB	; 171
    253e:	fe 4f       	sbci	r31, 0xFE	; 254
    2540:	80 81       	ld	r24, Z
    2542:	91 81       	ldd	r25, Z+1	; 0x01
    2544:	01 97       	sbiw	r24, 0x01	; 1
    2546:	11 96       	adiw	r26, 0x01	; 1
    2548:	9c 93       	st	X, r25
    254a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    254c:	fe 01       	movw	r30, r28
    254e:	eb 5a       	subi	r30, 0xAB	; 171
    2550:	fe 4f       	sbci	r31, 0xFE	; 254
    2552:	80 81       	ld	r24, Z
    2554:	91 81       	ldd	r25, Z+1	; 0x01
    2556:	00 97       	sbiw	r24, 0x00	; 0
    2558:	d1 f6       	brne	.-76     	; 0x250e <main+0xd10>
    255a:	27 c0       	rjmp	.+78     	; 0x25aa <main+0xdac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    255c:	8e 01       	movw	r16, r28
    255e:	0b 5a       	subi	r16, 0xAB	; 171
    2560:	1e 4f       	sbci	r17, 0xFE	; 254
    2562:	fe 01       	movw	r30, r28
    2564:	e9 5a       	subi	r30, 0xA9	; 169
    2566:	fe 4f       	sbci	r31, 0xFE	; 254
    2568:	60 81       	ld	r22, Z
    256a:	71 81       	ldd	r23, Z+1	; 0x01
    256c:	82 81       	ldd	r24, Z+2	; 0x02
    256e:	93 81       	ldd	r25, Z+3	; 0x03
    2570:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2574:	dc 01       	movw	r26, r24
    2576:	cb 01       	movw	r24, r22
    2578:	f8 01       	movw	r30, r16
    257a:	91 83       	std	Z+1, r25	; 0x01
    257c:	80 83       	st	Z, r24
    257e:	de 01       	movw	r26, r28
    2580:	af 5a       	subi	r26, 0xAF	; 175
    2582:	be 4f       	sbci	r27, 0xFE	; 254
    2584:	fe 01       	movw	r30, r28
    2586:	eb 5a       	subi	r30, 0xAB	; 171
    2588:	fe 4f       	sbci	r31, 0xFE	; 254
    258a:	80 81       	ld	r24, Z
    258c:	91 81       	ldd	r25, Z+1	; 0x01
    258e:	8d 93       	st	X+, r24
    2590:	9c 93       	st	X, r25
    2592:	fe 01       	movw	r30, r28
    2594:	ef 5a       	subi	r30, 0xAF	; 175
    2596:	fe 4f       	sbci	r31, 0xFE	; 254
    2598:	80 81       	ld	r24, Z
    259a:	91 81       	ldd	r25, Z+1	; 0x01
    259c:	01 97       	sbiw	r24, 0x01	; 1
    259e:	f1 f7       	brne	.-4      	; 0x259c <main+0xd9e>
    25a0:	fe 01       	movw	r30, r28
    25a2:	ef 5a       	subi	r30, 0xAF	; 175
    25a4:	fe 4f       	sbci	r31, 0xFE	; 254
    25a6:	91 83       	std	Z+1, r25	; 0x01
    25a8:	80 83       	st	Z, r24
			_delay_ms(10);

			CLCD_u8WriteSpecialCharacter(Pattern4,3,1,11);
    25aa:	ce 01       	movw	r24, r28
    25ac:	8f 50       	subi	r24, 0x0F	; 15
    25ae:	9e 4f       	sbci	r25, 0xFE	; 254
    25b0:	63 e0       	ldi	r22, 0x03	; 3
    25b2:	41 e0       	ldi	r20, 0x01	; 1
    25b4:	2b e0       	ldi	r18, 0x0B	; 11
    25b6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
    25ba:	ce 01       	movw	r24, r28
    25bc:	87 52       	subi	r24, 0x27	; 39
    25be:	9e 4f       	sbci	r25, 0xFE	; 254
    25c0:	62 e0       	ldi	r22, 0x02	; 2
    25c2:	41 e0       	ldi	r20, 0x01	; 1
    25c4:	2a e0       	ldi	r18, 0x0A	; 10
    25c6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    25ca:	fe 01       	movw	r30, r28
    25cc:	e3 5b       	subi	r30, 0xB3	; 179
    25ce:	fe 4f       	sbci	r31, 0xFE	; 254
    25d0:	80 e0       	ldi	r24, 0x00	; 0
    25d2:	90 e0       	ldi	r25, 0x00	; 0
    25d4:	a0 e2       	ldi	r26, 0x20	; 32
    25d6:	b1 e4       	ldi	r27, 0x41	; 65
    25d8:	80 83       	st	Z, r24
    25da:	91 83       	std	Z+1, r25	; 0x01
    25dc:	a2 83       	std	Z+2, r26	; 0x02
    25de:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25e0:	8e 01       	movw	r16, r28
    25e2:	07 5b       	subi	r16, 0xB7	; 183
    25e4:	1e 4f       	sbci	r17, 0xFE	; 254
    25e6:	fe 01       	movw	r30, r28
    25e8:	e3 5b       	subi	r30, 0xB3	; 179
    25ea:	fe 4f       	sbci	r31, 0xFE	; 254
    25ec:	60 81       	ld	r22, Z
    25ee:	71 81       	ldd	r23, Z+1	; 0x01
    25f0:	82 81       	ldd	r24, Z+2	; 0x02
    25f2:	93 81       	ldd	r25, Z+3	; 0x03
    25f4:	20 e0       	ldi	r18, 0x00	; 0
    25f6:	30 e0       	ldi	r19, 0x00	; 0
    25f8:	4a ef       	ldi	r20, 0xFA	; 250
    25fa:	54 e4       	ldi	r21, 0x44	; 68
    25fc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2600:	dc 01       	movw	r26, r24
    2602:	cb 01       	movw	r24, r22
    2604:	f8 01       	movw	r30, r16
    2606:	80 83       	st	Z, r24
    2608:	91 83       	std	Z+1, r25	; 0x01
    260a:	a2 83       	std	Z+2, r26	; 0x02
    260c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    260e:	fe 01       	movw	r30, r28
    2610:	e7 5b       	subi	r30, 0xB7	; 183
    2612:	fe 4f       	sbci	r31, 0xFE	; 254
    2614:	60 81       	ld	r22, Z
    2616:	71 81       	ldd	r23, Z+1	; 0x01
    2618:	82 81       	ldd	r24, Z+2	; 0x02
    261a:	93 81       	ldd	r25, Z+3	; 0x03
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	40 e8       	ldi	r20, 0x80	; 128
    2622:	5f e3       	ldi	r21, 0x3F	; 63
    2624:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2628:	88 23       	and	r24, r24
    262a:	44 f4       	brge	.+16     	; 0x263c <main+0xe3e>
		__ticks = 1;
    262c:	fe 01       	movw	r30, r28
    262e:	e9 5b       	subi	r30, 0xB9	; 185
    2630:	fe 4f       	sbci	r31, 0xFE	; 254
    2632:	81 e0       	ldi	r24, 0x01	; 1
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	91 83       	std	Z+1, r25	; 0x01
    2638:	80 83       	st	Z, r24
    263a:	64 c0       	rjmp	.+200    	; 0x2704 <main+0xf06>
	else if (__tmp > 65535)
    263c:	fe 01       	movw	r30, r28
    263e:	e7 5b       	subi	r30, 0xB7	; 183
    2640:	fe 4f       	sbci	r31, 0xFE	; 254
    2642:	60 81       	ld	r22, Z
    2644:	71 81       	ldd	r23, Z+1	; 0x01
    2646:	82 81       	ldd	r24, Z+2	; 0x02
    2648:	93 81       	ldd	r25, Z+3	; 0x03
    264a:	20 e0       	ldi	r18, 0x00	; 0
    264c:	3f ef       	ldi	r19, 0xFF	; 255
    264e:	4f e7       	ldi	r20, 0x7F	; 127
    2650:	57 e4       	ldi	r21, 0x47	; 71
    2652:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2656:	18 16       	cp	r1, r24
    2658:	0c f0       	brlt	.+2      	; 0x265c <main+0xe5e>
    265a:	43 c0       	rjmp	.+134    	; 0x26e2 <main+0xee4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    265c:	fe 01       	movw	r30, r28
    265e:	e3 5b       	subi	r30, 0xB3	; 179
    2660:	fe 4f       	sbci	r31, 0xFE	; 254
    2662:	60 81       	ld	r22, Z
    2664:	71 81       	ldd	r23, Z+1	; 0x01
    2666:	82 81       	ldd	r24, Z+2	; 0x02
    2668:	93 81       	ldd	r25, Z+3	; 0x03
    266a:	20 e0       	ldi	r18, 0x00	; 0
    266c:	30 e0       	ldi	r19, 0x00	; 0
    266e:	40 e2       	ldi	r20, 0x20	; 32
    2670:	51 e4       	ldi	r21, 0x41	; 65
    2672:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2676:	dc 01       	movw	r26, r24
    2678:	cb 01       	movw	r24, r22
    267a:	8e 01       	movw	r16, r28
    267c:	09 5b       	subi	r16, 0xB9	; 185
    267e:	1e 4f       	sbci	r17, 0xFE	; 254
    2680:	bc 01       	movw	r22, r24
    2682:	cd 01       	movw	r24, r26
    2684:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2688:	dc 01       	movw	r26, r24
    268a:	cb 01       	movw	r24, r22
    268c:	f8 01       	movw	r30, r16
    268e:	91 83       	std	Z+1, r25	; 0x01
    2690:	80 83       	st	Z, r24
    2692:	1f c0       	rjmp	.+62     	; 0x26d2 <main+0xed4>
    2694:	fe 01       	movw	r30, r28
    2696:	eb 5b       	subi	r30, 0xBB	; 187
    2698:	fe 4f       	sbci	r31, 0xFE	; 254
    269a:	88 ec       	ldi	r24, 0xC8	; 200
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	91 83       	std	Z+1, r25	; 0x01
    26a0:	80 83       	st	Z, r24
    26a2:	fe 01       	movw	r30, r28
    26a4:	eb 5b       	subi	r30, 0xBB	; 187
    26a6:	fe 4f       	sbci	r31, 0xFE	; 254
    26a8:	80 81       	ld	r24, Z
    26aa:	91 81       	ldd	r25, Z+1	; 0x01
    26ac:	01 97       	sbiw	r24, 0x01	; 1
    26ae:	f1 f7       	brne	.-4      	; 0x26ac <main+0xeae>
    26b0:	fe 01       	movw	r30, r28
    26b2:	eb 5b       	subi	r30, 0xBB	; 187
    26b4:	fe 4f       	sbci	r31, 0xFE	; 254
    26b6:	91 83       	std	Z+1, r25	; 0x01
    26b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ba:	de 01       	movw	r26, r28
    26bc:	a9 5b       	subi	r26, 0xB9	; 185
    26be:	be 4f       	sbci	r27, 0xFE	; 254
    26c0:	fe 01       	movw	r30, r28
    26c2:	e9 5b       	subi	r30, 0xB9	; 185
    26c4:	fe 4f       	sbci	r31, 0xFE	; 254
    26c6:	80 81       	ld	r24, Z
    26c8:	91 81       	ldd	r25, Z+1	; 0x01
    26ca:	01 97       	sbiw	r24, 0x01	; 1
    26cc:	11 96       	adiw	r26, 0x01	; 1
    26ce:	9c 93       	st	X, r25
    26d0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26d2:	fe 01       	movw	r30, r28
    26d4:	e9 5b       	subi	r30, 0xB9	; 185
    26d6:	fe 4f       	sbci	r31, 0xFE	; 254
    26d8:	80 81       	ld	r24, Z
    26da:	91 81       	ldd	r25, Z+1	; 0x01
    26dc:	00 97       	sbiw	r24, 0x00	; 0
    26de:	d1 f6       	brne	.-76     	; 0x2694 <main+0xe96>
    26e0:	27 c0       	rjmp	.+78     	; 0x2730 <main+0xf32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26e2:	8e 01       	movw	r16, r28
    26e4:	09 5b       	subi	r16, 0xB9	; 185
    26e6:	1e 4f       	sbci	r17, 0xFE	; 254
    26e8:	fe 01       	movw	r30, r28
    26ea:	e7 5b       	subi	r30, 0xB7	; 183
    26ec:	fe 4f       	sbci	r31, 0xFE	; 254
    26ee:	60 81       	ld	r22, Z
    26f0:	71 81       	ldd	r23, Z+1	; 0x01
    26f2:	82 81       	ldd	r24, Z+2	; 0x02
    26f4:	93 81       	ldd	r25, Z+3	; 0x03
    26f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26fa:	dc 01       	movw	r26, r24
    26fc:	cb 01       	movw	r24, r22
    26fe:	f8 01       	movw	r30, r16
    2700:	91 83       	std	Z+1, r25	; 0x01
    2702:	80 83       	st	Z, r24
    2704:	de 01       	movw	r26, r28
    2706:	ad 5b       	subi	r26, 0xBD	; 189
    2708:	be 4f       	sbci	r27, 0xFE	; 254
    270a:	fe 01       	movw	r30, r28
    270c:	e9 5b       	subi	r30, 0xB9	; 185
    270e:	fe 4f       	sbci	r31, 0xFE	; 254
    2710:	80 81       	ld	r24, Z
    2712:	91 81       	ldd	r25, Z+1	; 0x01
    2714:	8d 93       	st	X+, r24
    2716:	9c 93       	st	X, r25
    2718:	fe 01       	movw	r30, r28
    271a:	ed 5b       	subi	r30, 0xBD	; 189
    271c:	fe 4f       	sbci	r31, 0xFE	; 254
    271e:	80 81       	ld	r24, Z
    2720:	91 81       	ldd	r25, Z+1	; 0x01
    2722:	01 97       	sbiw	r24, 0x01	; 1
    2724:	f1 f7       	brne	.-4      	; 0x2722 <main+0xf24>
    2726:	fe 01       	movw	r30, r28
    2728:	ed 5b       	subi	r30, 0xBD	; 189
    272a:	fe 4f       	sbci	r31, 0xFE	; 254
    272c:	91 83       	std	Z+1, r25	; 0x01
    272e:	80 83       	st	Z, r24

		CLCD_u8SendString(play);
		CLCD_u8GoToXY(1,0);
		CLCD_u8SendString(football);

		for(Local_u8Iterator1=0;Local_u8Iterator1<=5;Local_u8Iterator1++)
    2730:	de 01       	movw	r26, r28
    2732:	a3 58       	subi	r26, 0x83	; 131
    2734:	be 4f       	sbci	r27, 0xFE	; 254
    2736:	fe 01       	movw	r30, r28
    2738:	e3 58       	subi	r30, 0x83	; 131
    273a:	fe 4f       	sbci	r31, 0xFE	; 254
    273c:	80 81       	ld	r24, Z
    273e:	8f 5f       	subi	r24, 0xFF	; 255
    2740:	8c 93       	st	X, r24
    2742:	fe 01       	movw	r30, r28
    2744:	e3 58       	subi	r30, 0x83	; 131
    2746:	fe 4f       	sbci	r31, 0xFE	; 254
    2748:	80 81       	ld	r24, Z
    274a:	86 30       	cpi	r24, 0x06	; 6
    274c:	08 f4       	brcc	.+2      	; 0x2750 <main+0xf52>
    274e:	6a ce       	rjmp	.-812    	; 0x2424 <main+0xc26>
			CLCD_u8WriteSpecialCharacter(Pattern,2,1,10);
			_delay_ms(10);

		}

		CLCD_u8SendCommand(0b00000001);
    2750:	81 e0       	ldi	r24, 0x01	; 1
    2752:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8SendString(dance);
    2756:	ce 01       	movw	r24, r28
    2758:	8c 55       	subi	r24, 0x5C	; 92
    275a:	9e 4f       	sbci	r25, 0xFE	; 254
    275c:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		for(Local_u8Iterator2=0;Local_u8Iterator2<=7;Local_u8Iterator2++)
    2760:	fe 01       	movw	r30, r28
    2762:	e4 58       	subi	r30, 0x84	; 132
    2764:	fe 4f       	sbci	r31, 0xFE	; 254
    2766:	10 82       	st	Z, r1
    2768:	7f c1       	rjmp	.+766    	; 0x2a68 <main+0x126a>
		{
			CLCD_u8WriteSpecialCharacter(Pattern5,0,1,7);
    276a:	ce 01       	movw	r24, r28
    276c:	87 50       	subi	r24, 0x07	; 7
    276e:	9e 4f       	sbci	r25, 0xFE	; 254
    2770:	60 e0       	ldi	r22, 0x00	; 0
    2772:	41 e0       	ldi	r20, 0x01	; 1
    2774:	27 e0       	ldi	r18, 0x07	; 7
    2776:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    277a:	fe 01       	movw	r30, r28
    277c:	e1 5c       	subi	r30, 0xC1	; 193
    277e:	fe 4f       	sbci	r31, 0xFE	; 254
    2780:	80 e0       	ldi	r24, 0x00	; 0
    2782:	90 e0       	ldi	r25, 0x00	; 0
    2784:	a0 e2       	ldi	r26, 0x20	; 32
    2786:	b1 e4       	ldi	r27, 0x41	; 65
    2788:	80 83       	st	Z, r24
    278a:	91 83       	std	Z+1, r25	; 0x01
    278c:	a2 83       	std	Z+2, r26	; 0x02
    278e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2790:	8e 01       	movw	r16, r28
    2792:	05 5c       	subi	r16, 0xC5	; 197
    2794:	1e 4f       	sbci	r17, 0xFE	; 254
    2796:	fe 01       	movw	r30, r28
    2798:	e1 5c       	subi	r30, 0xC1	; 193
    279a:	fe 4f       	sbci	r31, 0xFE	; 254
    279c:	60 81       	ld	r22, Z
    279e:	71 81       	ldd	r23, Z+1	; 0x01
    27a0:	82 81       	ldd	r24, Z+2	; 0x02
    27a2:	93 81       	ldd	r25, Z+3	; 0x03
    27a4:	20 e0       	ldi	r18, 0x00	; 0
    27a6:	30 e0       	ldi	r19, 0x00	; 0
    27a8:	4a ef       	ldi	r20, 0xFA	; 250
    27aa:	54 e4       	ldi	r21, 0x44	; 68
    27ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27b0:	dc 01       	movw	r26, r24
    27b2:	cb 01       	movw	r24, r22
    27b4:	f8 01       	movw	r30, r16
    27b6:	80 83       	st	Z, r24
    27b8:	91 83       	std	Z+1, r25	; 0x01
    27ba:	a2 83       	std	Z+2, r26	; 0x02
    27bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27be:	fe 01       	movw	r30, r28
    27c0:	e5 5c       	subi	r30, 0xC5	; 197
    27c2:	fe 4f       	sbci	r31, 0xFE	; 254
    27c4:	60 81       	ld	r22, Z
    27c6:	71 81       	ldd	r23, Z+1	; 0x01
    27c8:	82 81       	ldd	r24, Z+2	; 0x02
    27ca:	93 81       	ldd	r25, Z+3	; 0x03
    27cc:	20 e0       	ldi	r18, 0x00	; 0
    27ce:	30 e0       	ldi	r19, 0x00	; 0
    27d0:	40 e8       	ldi	r20, 0x80	; 128
    27d2:	5f e3       	ldi	r21, 0x3F	; 63
    27d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27d8:	88 23       	and	r24, r24
    27da:	44 f4       	brge	.+16     	; 0x27ec <main+0xfee>
		__ticks = 1;
    27dc:	fe 01       	movw	r30, r28
    27de:	e7 5c       	subi	r30, 0xC7	; 199
    27e0:	fe 4f       	sbci	r31, 0xFE	; 254
    27e2:	81 e0       	ldi	r24, 0x01	; 1
    27e4:	90 e0       	ldi	r25, 0x00	; 0
    27e6:	91 83       	std	Z+1, r25	; 0x01
    27e8:	80 83       	st	Z, r24
    27ea:	64 c0       	rjmp	.+200    	; 0x28b4 <main+0x10b6>
	else if (__tmp > 65535)
    27ec:	fe 01       	movw	r30, r28
    27ee:	e5 5c       	subi	r30, 0xC5	; 197
    27f0:	fe 4f       	sbci	r31, 0xFE	; 254
    27f2:	60 81       	ld	r22, Z
    27f4:	71 81       	ldd	r23, Z+1	; 0x01
    27f6:	82 81       	ldd	r24, Z+2	; 0x02
    27f8:	93 81       	ldd	r25, Z+3	; 0x03
    27fa:	20 e0       	ldi	r18, 0x00	; 0
    27fc:	3f ef       	ldi	r19, 0xFF	; 255
    27fe:	4f e7       	ldi	r20, 0x7F	; 127
    2800:	57 e4       	ldi	r21, 0x47	; 71
    2802:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2806:	18 16       	cp	r1, r24
    2808:	0c f0       	brlt	.+2      	; 0x280c <main+0x100e>
    280a:	43 c0       	rjmp	.+134    	; 0x2892 <main+0x1094>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    280c:	fe 01       	movw	r30, r28
    280e:	e1 5c       	subi	r30, 0xC1	; 193
    2810:	fe 4f       	sbci	r31, 0xFE	; 254
    2812:	60 81       	ld	r22, Z
    2814:	71 81       	ldd	r23, Z+1	; 0x01
    2816:	82 81       	ldd	r24, Z+2	; 0x02
    2818:	93 81       	ldd	r25, Z+3	; 0x03
    281a:	20 e0       	ldi	r18, 0x00	; 0
    281c:	30 e0       	ldi	r19, 0x00	; 0
    281e:	40 e2       	ldi	r20, 0x20	; 32
    2820:	51 e4       	ldi	r21, 0x41	; 65
    2822:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2826:	dc 01       	movw	r26, r24
    2828:	cb 01       	movw	r24, r22
    282a:	8e 01       	movw	r16, r28
    282c:	07 5c       	subi	r16, 0xC7	; 199
    282e:	1e 4f       	sbci	r17, 0xFE	; 254
    2830:	bc 01       	movw	r22, r24
    2832:	cd 01       	movw	r24, r26
    2834:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2838:	dc 01       	movw	r26, r24
    283a:	cb 01       	movw	r24, r22
    283c:	f8 01       	movw	r30, r16
    283e:	91 83       	std	Z+1, r25	; 0x01
    2840:	80 83       	st	Z, r24
    2842:	1f c0       	rjmp	.+62     	; 0x2882 <main+0x1084>
    2844:	fe 01       	movw	r30, r28
    2846:	e9 5c       	subi	r30, 0xC9	; 201
    2848:	fe 4f       	sbci	r31, 0xFE	; 254
    284a:	88 ec       	ldi	r24, 0xC8	; 200
    284c:	90 e0       	ldi	r25, 0x00	; 0
    284e:	91 83       	std	Z+1, r25	; 0x01
    2850:	80 83       	st	Z, r24
    2852:	fe 01       	movw	r30, r28
    2854:	e9 5c       	subi	r30, 0xC9	; 201
    2856:	fe 4f       	sbci	r31, 0xFE	; 254
    2858:	80 81       	ld	r24, Z
    285a:	91 81       	ldd	r25, Z+1	; 0x01
    285c:	01 97       	sbiw	r24, 0x01	; 1
    285e:	f1 f7       	brne	.-4      	; 0x285c <main+0x105e>
    2860:	fe 01       	movw	r30, r28
    2862:	e9 5c       	subi	r30, 0xC9	; 201
    2864:	fe 4f       	sbci	r31, 0xFE	; 254
    2866:	91 83       	std	Z+1, r25	; 0x01
    2868:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    286a:	de 01       	movw	r26, r28
    286c:	a7 5c       	subi	r26, 0xC7	; 199
    286e:	be 4f       	sbci	r27, 0xFE	; 254
    2870:	fe 01       	movw	r30, r28
    2872:	e7 5c       	subi	r30, 0xC7	; 199
    2874:	fe 4f       	sbci	r31, 0xFE	; 254
    2876:	80 81       	ld	r24, Z
    2878:	91 81       	ldd	r25, Z+1	; 0x01
    287a:	01 97       	sbiw	r24, 0x01	; 1
    287c:	11 96       	adiw	r26, 0x01	; 1
    287e:	9c 93       	st	X, r25
    2880:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2882:	fe 01       	movw	r30, r28
    2884:	e7 5c       	subi	r30, 0xC7	; 199
    2886:	fe 4f       	sbci	r31, 0xFE	; 254
    2888:	80 81       	ld	r24, Z
    288a:	91 81       	ldd	r25, Z+1	; 0x01
    288c:	00 97       	sbiw	r24, 0x00	; 0
    288e:	d1 f6       	brne	.-76     	; 0x2844 <main+0x1046>
    2890:	27 c0       	rjmp	.+78     	; 0x28e0 <main+0x10e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2892:	8e 01       	movw	r16, r28
    2894:	07 5c       	subi	r16, 0xC7	; 199
    2896:	1e 4f       	sbci	r17, 0xFE	; 254
    2898:	fe 01       	movw	r30, r28
    289a:	e5 5c       	subi	r30, 0xC5	; 197
    289c:	fe 4f       	sbci	r31, 0xFE	; 254
    289e:	60 81       	ld	r22, Z
    28a0:	71 81       	ldd	r23, Z+1	; 0x01
    28a2:	82 81       	ldd	r24, Z+2	; 0x02
    28a4:	93 81       	ldd	r25, Z+3	; 0x03
    28a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28aa:	dc 01       	movw	r26, r24
    28ac:	cb 01       	movw	r24, r22
    28ae:	f8 01       	movw	r30, r16
    28b0:	91 83       	std	Z+1, r25	; 0x01
    28b2:	80 83       	st	Z, r24
    28b4:	de 01       	movw	r26, r28
    28b6:	ab 5c       	subi	r26, 0xCB	; 203
    28b8:	be 4f       	sbci	r27, 0xFE	; 254
    28ba:	fe 01       	movw	r30, r28
    28bc:	e7 5c       	subi	r30, 0xC7	; 199
    28be:	fe 4f       	sbci	r31, 0xFE	; 254
    28c0:	80 81       	ld	r24, Z
    28c2:	91 81       	ldd	r25, Z+1	; 0x01
    28c4:	8d 93       	st	X+, r24
    28c6:	9c 93       	st	X, r25
    28c8:	fe 01       	movw	r30, r28
    28ca:	eb 5c       	subi	r30, 0xCB	; 203
    28cc:	fe 4f       	sbci	r31, 0xFE	; 254
    28ce:	80 81       	ld	r24, Z
    28d0:	91 81       	ldd	r25, Z+1	; 0x01
    28d2:	01 97       	sbiw	r24, 0x01	; 1
    28d4:	f1 f7       	brne	.-4      	; 0x28d2 <main+0x10d4>
    28d6:	fe 01       	movw	r30, r28
    28d8:	eb 5c       	subi	r30, 0xCB	; 203
    28da:	fe 4f       	sbci	r31, 0xFE	; 254
    28dc:	91 83       	std	Z+1, r25	; 0x01
    28de:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
    28e0:	ce 01       	movw	r24, r28
    28e2:	8f 5f       	subi	r24, 0xFF	; 255
    28e4:	9d 4f       	sbci	r25, 0xFD	; 253
    28e6:	60 e0       	ldi	r22, 0x00	; 0
    28e8:	41 e0       	ldi	r20, 0x01	; 1
    28ea:	27 e0       	ldi	r18, 0x07	; 7
    28ec:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    28f0:	fe 01       	movw	r30, r28
    28f2:	ef 5c       	subi	r30, 0xCF	; 207
    28f4:	fe 4f       	sbci	r31, 0xFE	; 254
    28f6:	80 e0       	ldi	r24, 0x00	; 0
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	a0 e2       	ldi	r26, 0x20	; 32
    28fc:	b1 e4       	ldi	r27, 0x41	; 65
    28fe:	80 83       	st	Z, r24
    2900:	91 83       	std	Z+1, r25	; 0x01
    2902:	a2 83       	std	Z+2, r26	; 0x02
    2904:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2906:	8e 01       	movw	r16, r28
    2908:	03 5d       	subi	r16, 0xD3	; 211
    290a:	1e 4f       	sbci	r17, 0xFE	; 254
    290c:	fe 01       	movw	r30, r28
    290e:	ef 5c       	subi	r30, 0xCF	; 207
    2910:	fe 4f       	sbci	r31, 0xFE	; 254
    2912:	60 81       	ld	r22, Z
    2914:	71 81       	ldd	r23, Z+1	; 0x01
    2916:	82 81       	ldd	r24, Z+2	; 0x02
    2918:	93 81       	ldd	r25, Z+3	; 0x03
    291a:	20 e0       	ldi	r18, 0x00	; 0
    291c:	30 e0       	ldi	r19, 0x00	; 0
    291e:	4a ef       	ldi	r20, 0xFA	; 250
    2920:	54 e4       	ldi	r21, 0x44	; 68
    2922:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2926:	dc 01       	movw	r26, r24
    2928:	cb 01       	movw	r24, r22
    292a:	f8 01       	movw	r30, r16
    292c:	80 83       	st	Z, r24
    292e:	91 83       	std	Z+1, r25	; 0x01
    2930:	a2 83       	std	Z+2, r26	; 0x02
    2932:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2934:	fe 01       	movw	r30, r28
    2936:	e3 5d       	subi	r30, 0xD3	; 211
    2938:	fe 4f       	sbci	r31, 0xFE	; 254
    293a:	60 81       	ld	r22, Z
    293c:	71 81       	ldd	r23, Z+1	; 0x01
    293e:	82 81       	ldd	r24, Z+2	; 0x02
    2940:	93 81       	ldd	r25, Z+3	; 0x03
    2942:	20 e0       	ldi	r18, 0x00	; 0
    2944:	30 e0       	ldi	r19, 0x00	; 0
    2946:	40 e8       	ldi	r20, 0x80	; 128
    2948:	5f e3       	ldi	r21, 0x3F	; 63
    294a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    294e:	88 23       	and	r24, r24
    2950:	44 f4       	brge	.+16     	; 0x2962 <main+0x1164>
		__ticks = 1;
    2952:	fe 01       	movw	r30, r28
    2954:	e5 5d       	subi	r30, 0xD5	; 213
    2956:	fe 4f       	sbci	r31, 0xFE	; 254
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	91 83       	std	Z+1, r25	; 0x01
    295e:	80 83       	st	Z, r24
    2960:	64 c0       	rjmp	.+200    	; 0x2a2a <main+0x122c>
	else if (__tmp > 65535)
    2962:	fe 01       	movw	r30, r28
    2964:	e3 5d       	subi	r30, 0xD3	; 211
    2966:	fe 4f       	sbci	r31, 0xFE	; 254
    2968:	60 81       	ld	r22, Z
    296a:	71 81       	ldd	r23, Z+1	; 0x01
    296c:	82 81       	ldd	r24, Z+2	; 0x02
    296e:	93 81       	ldd	r25, Z+3	; 0x03
    2970:	20 e0       	ldi	r18, 0x00	; 0
    2972:	3f ef       	ldi	r19, 0xFF	; 255
    2974:	4f e7       	ldi	r20, 0x7F	; 127
    2976:	57 e4       	ldi	r21, 0x47	; 71
    2978:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    297c:	18 16       	cp	r1, r24
    297e:	0c f0       	brlt	.+2      	; 0x2982 <main+0x1184>
    2980:	43 c0       	rjmp	.+134    	; 0x2a08 <main+0x120a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2982:	fe 01       	movw	r30, r28
    2984:	ef 5c       	subi	r30, 0xCF	; 207
    2986:	fe 4f       	sbci	r31, 0xFE	; 254
    2988:	60 81       	ld	r22, Z
    298a:	71 81       	ldd	r23, Z+1	; 0x01
    298c:	82 81       	ldd	r24, Z+2	; 0x02
    298e:	93 81       	ldd	r25, Z+3	; 0x03
    2990:	20 e0       	ldi	r18, 0x00	; 0
    2992:	30 e0       	ldi	r19, 0x00	; 0
    2994:	40 e2       	ldi	r20, 0x20	; 32
    2996:	51 e4       	ldi	r21, 0x41	; 65
    2998:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    299c:	dc 01       	movw	r26, r24
    299e:	cb 01       	movw	r24, r22
    29a0:	8e 01       	movw	r16, r28
    29a2:	05 5d       	subi	r16, 0xD5	; 213
    29a4:	1e 4f       	sbci	r17, 0xFE	; 254
    29a6:	bc 01       	movw	r22, r24
    29a8:	cd 01       	movw	r24, r26
    29aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29ae:	dc 01       	movw	r26, r24
    29b0:	cb 01       	movw	r24, r22
    29b2:	f8 01       	movw	r30, r16
    29b4:	91 83       	std	Z+1, r25	; 0x01
    29b6:	80 83       	st	Z, r24
    29b8:	1f c0       	rjmp	.+62     	; 0x29f8 <main+0x11fa>
    29ba:	fe 01       	movw	r30, r28
    29bc:	e7 5d       	subi	r30, 0xD7	; 215
    29be:	fe 4f       	sbci	r31, 0xFE	; 254
    29c0:	88 ec       	ldi	r24, 0xC8	; 200
    29c2:	90 e0       	ldi	r25, 0x00	; 0
    29c4:	91 83       	std	Z+1, r25	; 0x01
    29c6:	80 83       	st	Z, r24
    29c8:	fe 01       	movw	r30, r28
    29ca:	e7 5d       	subi	r30, 0xD7	; 215
    29cc:	fe 4f       	sbci	r31, 0xFE	; 254
    29ce:	80 81       	ld	r24, Z
    29d0:	91 81       	ldd	r25, Z+1	; 0x01
    29d2:	01 97       	sbiw	r24, 0x01	; 1
    29d4:	f1 f7       	brne	.-4      	; 0x29d2 <main+0x11d4>
    29d6:	fe 01       	movw	r30, r28
    29d8:	e7 5d       	subi	r30, 0xD7	; 215
    29da:	fe 4f       	sbci	r31, 0xFE	; 254
    29dc:	91 83       	std	Z+1, r25	; 0x01
    29de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29e0:	de 01       	movw	r26, r28
    29e2:	a5 5d       	subi	r26, 0xD5	; 213
    29e4:	be 4f       	sbci	r27, 0xFE	; 254
    29e6:	fe 01       	movw	r30, r28
    29e8:	e5 5d       	subi	r30, 0xD5	; 213
    29ea:	fe 4f       	sbci	r31, 0xFE	; 254
    29ec:	80 81       	ld	r24, Z
    29ee:	91 81       	ldd	r25, Z+1	; 0x01
    29f0:	01 97       	sbiw	r24, 0x01	; 1
    29f2:	11 96       	adiw	r26, 0x01	; 1
    29f4:	9c 93       	st	X, r25
    29f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29f8:	fe 01       	movw	r30, r28
    29fa:	e5 5d       	subi	r30, 0xD5	; 213
    29fc:	fe 4f       	sbci	r31, 0xFE	; 254
    29fe:	80 81       	ld	r24, Z
    2a00:	91 81       	ldd	r25, Z+1	; 0x01
    2a02:	00 97       	sbiw	r24, 0x00	; 0
    2a04:	d1 f6       	brne	.-76     	; 0x29ba <main+0x11bc>
    2a06:	27 c0       	rjmp	.+78     	; 0x2a56 <main+0x1258>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a08:	8e 01       	movw	r16, r28
    2a0a:	05 5d       	subi	r16, 0xD5	; 213
    2a0c:	1e 4f       	sbci	r17, 0xFE	; 254
    2a0e:	fe 01       	movw	r30, r28
    2a10:	e3 5d       	subi	r30, 0xD3	; 211
    2a12:	fe 4f       	sbci	r31, 0xFE	; 254
    2a14:	60 81       	ld	r22, Z
    2a16:	71 81       	ldd	r23, Z+1	; 0x01
    2a18:	82 81       	ldd	r24, Z+2	; 0x02
    2a1a:	93 81       	ldd	r25, Z+3	; 0x03
    2a1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a20:	dc 01       	movw	r26, r24
    2a22:	cb 01       	movw	r24, r22
    2a24:	f8 01       	movw	r30, r16
    2a26:	91 83       	std	Z+1, r25	; 0x01
    2a28:	80 83       	st	Z, r24
    2a2a:	de 01       	movw	r26, r28
    2a2c:	a9 5d       	subi	r26, 0xD9	; 217
    2a2e:	be 4f       	sbci	r27, 0xFE	; 254
    2a30:	fe 01       	movw	r30, r28
    2a32:	e5 5d       	subi	r30, 0xD5	; 213
    2a34:	fe 4f       	sbci	r31, 0xFE	; 254
    2a36:	80 81       	ld	r24, Z
    2a38:	91 81       	ldd	r25, Z+1	; 0x01
    2a3a:	8d 93       	st	X+, r24
    2a3c:	9c 93       	st	X, r25
    2a3e:	fe 01       	movw	r30, r28
    2a40:	e9 5d       	subi	r30, 0xD9	; 217
    2a42:	fe 4f       	sbci	r31, 0xFE	; 254
    2a44:	80 81       	ld	r24, Z
    2a46:	91 81       	ldd	r25, Z+1	; 0x01
    2a48:	01 97       	sbiw	r24, 0x01	; 1
    2a4a:	f1 f7       	brne	.-4      	; 0x2a48 <main+0x124a>
    2a4c:	fe 01       	movw	r30, r28
    2a4e:	e9 5d       	subi	r30, 0xD9	; 217
    2a50:	fe 4f       	sbci	r31, 0xFE	; 254
    2a52:	91 83       	std	Z+1, r25	; 0x01
    2a54:	80 83       	st	Z, r24
		}

		CLCD_u8SendCommand(0b00000001);

		CLCD_u8SendString(dance);
		for(Local_u8Iterator2=0;Local_u8Iterator2<=7;Local_u8Iterator2++)
    2a56:	de 01       	movw	r26, r28
    2a58:	a4 58       	subi	r26, 0x84	; 132
    2a5a:	be 4f       	sbci	r27, 0xFE	; 254
    2a5c:	fe 01       	movw	r30, r28
    2a5e:	e4 58       	subi	r30, 0x84	; 132
    2a60:	fe 4f       	sbci	r31, 0xFE	; 254
    2a62:	80 81       	ld	r24, Z
    2a64:	8f 5f       	subi	r24, 0xFF	; 255
    2a66:	8c 93       	st	X, r24
    2a68:	fe 01       	movw	r30, r28
    2a6a:	e4 58       	subi	r30, 0x84	; 132
    2a6c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a6e:	80 81       	ld	r24, Z
    2a70:	88 30       	cpi	r24, 0x08	; 8
    2a72:	08 f4       	brcc	.+2      	; 0x2a76 <main+0x1278>
    2a74:	7a ce       	rjmp	.-780    	; 0x276a <main+0xf6c>
			CLCD_u8WriteSpecialCharacter(Pattern6,0,1,7);
			_delay_ms(10);
		}


		CLCD_u8SendCommand(0b00000001);
    2a76:	81 e0       	ldi	r24, 0x01	; 1
    2a78:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
		/* Against roadblocks */




		CLCD_u8SendString(roadblock);
    2a7c:	ce 01       	movw	r24, r28
    2a7e:	8f 54       	subi	r24, 0x4F	; 79
    2a80:	9e 4f       	sbci	r25, 0xFE	; 254
    2a82:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
    2a86:	fe 01       	movw	r30, r28
    2a88:	ed 5d       	subi	r30, 0xDD	; 221
    2a8a:	fe 4f       	sbci	r31, 0xFE	; 254
    2a8c:	80 e0       	ldi	r24, 0x00	; 0
    2a8e:	90 e0       	ldi	r25, 0x00	; 0
    2a90:	a6 e1       	ldi	r26, 0x16	; 22
    2a92:	b3 e4       	ldi	r27, 0x43	; 67
    2a94:	80 83       	st	Z, r24
    2a96:	91 83       	std	Z+1, r25	; 0x01
    2a98:	a2 83       	std	Z+2, r26	; 0x02
    2a9a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a9c:	8e 01       	movw	r16, r28
    2a9e:	01 5e       	subi	r16, 0xE1	; 225
    2aa0:	1e 4f       	sbci	r17, 0xFE	; 254
    2aa2:	fe 01       	movw	r30, r28
    2aa4:	ed 5d       	subi	r30, 0xDD	; 221
    2aa6:	fe 4f       	sbci	r31, 0xFE	; 254
    2aa8:	60 81       	ld	r22, Z
    2aaa:	71 81       	ldd	r23, Z+1	; 0x01
    2aac:	82 81       	ldd	r24, Z+2	; 0x02
    2aae:	93 81       	ldd	r25, Z+3	; 0x03
    2ab0:	20 e0       	ldi	r18, 0x00	; 0
    2ab2:	30 e0       	ldi	r19, 0x00	; 0
    2ab4:	4a ef       	ldi	r20, 0xFA	; 250
    2ab6:	54 e4       	ldi	r21, 0x44	; 68
    2ab8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2abc:	dc 01       	movw	r26, r24
    2abe:	cb 01       	movw	r24, r22
    2ac0:	f8 01       	movw	r30, r16
    2ac2:	80 83       	st	Z, r24
    2ac4:	91 83       	std	Z+1, r25	; 0x01
    2ac6:	a2 83       	std	Z+2, r26	; 0x02
    2ac8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2aca:	fe 01       	movw	r30, r28
    2acc:	e1 5e       	subi	r30, 0xE1	; 225
    2ace:	fe 4f       	sbci	r31, 0xFE	; 254
    2ad0:	60 81       	ld	r22, Z
    2ad2:	71 81       	ldd	r23, Z+1	; 0x01
    2ad4:	82 81       	ldd	r24, Z+2	; 0x02
    2ad6:	93 81       	ldd	r25, Z+3	; 0x03
    2ad8:	20 e0       	ldi	r18, 0x00	; 0
    2ada:	30 e0       	ldi	r19, 0x00	; 0
    2adc:	40 e8       	ldi	r20, 0x80	; 128
    2ade:	5f e3       	ldi	r21, 0x3F	; 63
    2ae0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ae4:	88 23       	and	r24, r24
    2ae6:	44 f4       	brge	.+16     	; 0x2af8 <main+0x12fa>
		__ticks = 1;
    2ae8:	fe 01       	movw	r30, r28
    2aea:	e3 5e       	subi	r30, 0xE3	; 227
    2aec:	fe 4f       	sbci	r31, 0xFE	; 254
    2aee:	81 e0       	ldi	r24, 0x01	; 1
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	91 83       	std	Z+1, r25	; 0x01
    2af4:	80 83       	st	Z, r24
    2af6:	64 c0       	rjmp	.+200    	; 0x2bc0 <main+0x13c2>
	else if (__tmp > 65535)
    2af8:	fe 01       	movw	r30, r28
    2afa:	e1 5e       	subi	r30, 0xE1	; 225
    2afc:	fe 4f       	sbci	r31, 0xFE	; 254
    2afe:	60 81       	ld	r22, Z
    2b00:	71 81       	ldd	r23, Z+1	; 0x01
    2b02:	82 81       	ldd	r24, Z+2	; 0x02
    2b04:	93 81       	ldd	r25, Z+3	; 0x03
    2b06:	20 e0       	ldi	r18, 0x00	; 0
    2b08:	3f ef       	ldi	r19, 0xFF	; 255
    2b0a:	4f e7       	ldi	r20, 0x7F	; 127
    2b0c:	57 e4       	ldi	r21, 0x47	; 71
    2b0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b12:	18 16       	cp	r1, r24
    2b14:	0c f0       	brlt	.+2      	; 0x2b18 <main+0x131a>
    2b16:	43 c0       	rjmp	.+134    	; 0x2b9e <main+0x13a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b18:	fe 01       	movw	r30, r28
    2b1a:	ed 5d       	subi	r30, 0xDD	; 221
    2b1c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b1e:	60 81       	ld	r22, Z
    2b20:	71 81       	ldd	r23, Z+1	; 0x01
    2b22:	82 81       	ldd	r24, Z+2	; 0x02
    2b24:	93 81       	ldd	r25, Z+3	; 0x03
    2b26:	20 e0       	ldi	r18, 0x00	; 0
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	40 e2       	ldi	r20, 0x20	; 32
    2b2c:	51 e4       	ldi	r21, 0x41	; 65
    2b2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b32:	dc 01       	movw	r26, r24
    2b34:	cb 01       	movw	r24, r22
    2b36:	8e 01       	movw	r16, r28
    2b38:	03 5e       	subi	r16, 0xE3	; 227
    2b3a:	1e 4f       	sbci	r17, 0xFE	; 254
    2b3c:	bc 01       	movw	r22, r24
    2b3e:	cd 01       	movw	r24, r26
    2b40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b44:	dc 01       	movw	r26, r24
    2b46:	cb 01       	movw	r24, r22
    2b48:	f8 01       	movw	r30, r16
    2b4a:	91 83       	std	Z+1, r25	; 0x01
    2b4c:	80 83       	st	Z, r24
    2b4e:	1f c0       	rjmp	.+62     	; 0x2b8e <main+0x1390>
    2b50:	fe 01       	movw	r30, r28
    2b52:	e5 5e       	subi	r30, 0xE5	; 229
    2b54:	fe 4f       	sbci	r31, 0xFE	; 254
    2b56:	88 ec       	ldi	r24, 0xC8	; 200
    2b58:	90 e0       	ldi	r25, 0x00	; 0
    2b5a:	91 83       	std	Z+1, r25	; 0x01
    2b5c:	80 83       	st	Z, r24
    2b5e:	fe 01       	movw	r30, r28
    2b60:	e5 5e       	subi	r30, 0xE5	; 229
    2b62:	fe 4f       	sbci	r31, 0xFE	; 254
    2b64:	80 81       	ld	r24, Z
    2b66:	91 81       	ldd	r25, Z+1	; 0x01
    2b68:	01 97       	sbiw	r24, 0x01	; 1
    2b6a:	f1 f7       	brne	.-4      	; 0x2b68 <main+0x136a>
    2b6c:	fe 01       	movw	r30, r28
    2b6e:	e5 5e       	subi	r30, 0xE5	; 229
    2b70:	fe 4f       	sbci	r31, 0xFE	; 254
    2b72:	91 83       	std	Z+1, r25	; 0x01
    2b74:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b76:	de 01       	movw	r26, r28
    2b78:	a3 5e       	subi	r26, 0xE3	; 227
    2b7a:	be 4f       	sbci	r27, 0xFE	; 254
    2b7c:	fe 01       	movw	r30, r28
    2b7e:	e3 5e       	subi	r30, 0xE3	; 227
    2b80:	fe 4f       	sbci	r31, 0xFE	; 254
    2b82:	80 81       	ld	r24, Z
    2b84:	91 81       	ldd	r25, Z+1	; 0x01
    2b86:	01 97       	sbiw	r24, 0x01	; 1
    2b88:	11 96       	adiw	r26, 0x01	; 1
    2b8a:	9c 93       	st	X, r25
    2b8c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b8e:	fe 01       	movw	r30, r28
    2b90:	e3 5e       	subi	r30, 0xE3	; 227
    2b92:	fe 4f       	sbci	r31, 0xFE	; 254
    2b94:	80 81       	ld	r24, Z
    2b96:	91 81       	ldd	r25, Z+1	; 0x01
    2b98:	00 97       	sbiw	r24, 0x00	; 0
    2b9a:	d1 f6       	brne	.-76     	; 0x2b50 <main+0x1352>
    2b9c:	27 c0       	rjmp	.+78     	; 0x2bec <main+0x13ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b9e:	8e 01       	movw	r16, r28
    2ba0:	03 5e       	subi	r16, 0xE3	; 227
    2ba2:	1e 4f       	sbci	r17, 0xFE	; 254
    2ba4:	fe 01       	movw	r30, r28
    2ba6:	e1 5e       	subi	r30, 0xE1	; 225
    2ba8:	fe 4f       	sbci	r31, 0xFE	; 254
    2baa:	60 81       	ld	r22, Z
    2bac:	71 81       	ldd	r23, Z+1	; 0x01
    2bae:	82 81       	ldd	r24, Z+2	; 0x02
    2bb0:	93 81       	ldd	r25, Z+3	; 0x03
    2bb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bb6:	dc 01       	movw	r26, r24
    2bb8:	cb 01       	movw	r24, r22
    2bba:	f8 01       	movw	r30, r16
    2bbc:	91 83       	std	Z+1, r25	; 0x01
    2bbe:	80 83       	st	Z, r24
    2bc0:	de 01       	movw	r26, r28
    2bc2:	a7 5e       	subi	r26, 0xE7	; 231
    2bc4:	be 4f       	sbci	r27, 0xFE	; 254
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	e3 5e       	subi	r30, 0xE3	; 227
    2bca:	fe 4f       	sbci	r31, 0xFE	; 254
    2bcc:	80 81       	ld	r24, Z
    2bce:	91 81       	ldd	r25, Z+1	; 0x01
    2bd0:	8d 93       	st	X+, r24
    2bd2:	9c 93       	st	X, r25
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	e7 5e       	subi	r30, 0xE7	; 231
    2bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    2bda:	80 81       	ld	r24, Z
    2bdc:	91 81       	ldd	r25, Z+1	; 0x01
    2bde:	01 97       	sbiw	r24, 0x01	; 1
    2be0:	f1 f7       	brne	.-4      	; 0x2bde <main+0x13e0>
    2be2:	fe 01       	movw	r30, r28
    2be4:	e7 5e       	subi	r30, 0xE7	; 231
    2be6:	fe 4f       	sbci	r31, 0xFE	; 254
    2be8:	91 83       	std	Z+1, r25	; 0x01
    2bea:	80 83       	st	Z, r24
		_delay_ms(150);
		CLCD_u8SendCommand(0b00000001);
    2bec:	81 e0       	ldi	r24, 0x01	; 1
    2bee:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>





		for(Local_u8Iterator3=0;Local_u8Iterator3<2;Local_u8Iterator3++)
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	e5 58       	subi	r30, 0x85	; 133
    2bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf8:	10 82       	st	Z, r1
    2bfa:	0c 94 3a 22 	jmp	0x4474	; 0x4474 <main+0x2c76>
		{
			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,0);
    2bfe:	ce 01       	movw	r24, r28
    2c00:	87 5f       	subi	r24, 0xF7	; 247
    2c02:	9d 4f       	sbci	r25, 0xFD	; 253
    2c04:	60 e0       	ldi	r22, 0x00	; 0
    2c06:	41 e0       	ldi	r20, 0x01	; 1
    2c08:	20 e0       	ldi	r18, 0x00	; 0
    2c0a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,14);
    2c0e:	ce 01       	movw	r24, r28
    2c10:	8f 5e       	subi	r24, 0xEF	; 239
    2c12:	9d 4f       	sbci	r25, 0xFD	; 253
    2c14:	61 e0       	ldi	r22, 0x01	; 1
    2c16:	41 e0       	ldi	r20, 0x01	; 1
    2c18:	2e e0       	ldi	r18, 0x0E	; 14
    2c1a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2c1e:	fe 01       	movw	r30, r28
    2c20:	eb 5e       	subi	r30, 0xEB	; 235
    2c22:	fe 4f       	sbci	r31, 0xFE	; 254
    2c24:	80 e0       	ldi	r24, 0x00	; 0
    2c26:	90 e0       	ldi	r25, 0x00	; 0
    2c28:	a0 e2       	ldi	r26, 0x20	; 32
    2c2a:	b1 e4       	ldi	r27, 0x41	; 65
    2c2c:	80 83       	st	Z, r24
    2c2e:	91 83       	std	Z+1, r25	; 0x01
    2c30:	a2 83       	std	Z+2, r26	; 0x02
    2c32:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c34:	8e 01       	movw	r16, r28
    2c36:	0f 5e       	subi	r16, 0xEF	; 239
    2c38:	1e 4f       	sbci	r17, 0xFE	; 254
    2c3a:	fe 01       	movw	r30, r28
    2c3c:	eb 5e       	subi	r30, 0xEB	; 235
    2c3e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c40:	60 81       	ld	r22, Z
    2c42:	71 81       	ldd	r23, Z+1	; 0x01
    2c44:	82 81       	ldd	r24, Z+2	; 0x02
    2c46:	93 81       	ldd	r25, Z+3	; 0x03
    2c48:	20 e0       	ldi	r18, 0x00	; 0
    2c4a:	30 e0       	ldi	r19, 0x00	; 0
    2c4c:	4a ef       	ldi	r20, 0xFA	; 250
    2c4e:	54 e4       	ldi	r21, 0x44	; 68
    2c50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c54:	dc 01       	movw	r26, r24
    2c56:	cb 01       	movw	r24, r22
    2c58:	f8 01       	movw	r30, r16
    2c5a:	80 83       	st	Z, r24
    2c5c:	91 83       	std	Z+1, r25	; 0x01
    2c5e:	a2 83       	std	Z+2, r26	; 0x02
    2c60:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c62:	fe 01       	movw	r30, r28
    2c64:	ef 5e       	subi	r30, 0xEF	; 239
    2c66:	fe 4f       	sbci	r31, 0xFE	; 254
    2c68:	60 81       	ld	r22, Z
    2c6a:	71 81       	ldd	r23, Z+1	; 0x01
    2c6c:	82 81       	ldd	r24, Z+2	; 0x02
    2c6e:	93 81       	ldd	r25, Z+3	; 0x03
    2c70:	20 e0       	ldi	r18, 0x00	; 0
    2c72:	30 e0       	ldi	r19, 0x00	; 0
    2c74:	40 e8       	ldi	r20, 0x80	; 128
    2c76:	5f e3       	ldi	r21, 0x3F	; 63
    2c78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c7c:	88 23       	and	r24, r24
    2c7e:	44 f4       	brge	.+16     	; 0x2c90 <main+0x1492>
		__ticks = 1;
    2c80:	fe 01       	movw	r30, r28
    2c82:	e1 5f       	subi	r30, 0xF1	; 241
    2c84:	fe 4f       	sbci	r31, 0xFE	; 254
    2c86:	81 e0       	ldi	r24, 0x01	; 1
    2c88:	90 e0       	ldi	r25, 0x00	; 0
    2c8a:	91 83       	std	Z+1, r25	; 0x01
    2c8c:	80 83       	st	Z, r24
    2c8e:	64 c0       	rjmp	.+200    	; 0x2d58 <main+0x155a>
	else if (__tmp > 65535)
    2c90:	fe 01       	movw	r30, r28
    2c92:	ef 5e       	subi	r30, 0xEF	; 239
    2c94:	fe 4f       	sbci	r31, 0xFE	; 254
    2c96:	60 81       	ld	r22, Z
    2c98:	71 81       	ldd	r23, Z+1	; 0x01
    2c9a:	82 81       	ldd	r24, Z+2	; 0x02
    2c9c:	93 81       	ldd	r25, Z+3	; 0x03
    2c9e:	20 e0       	ldi	r18, 0x00	; 0
    2ca0:	3f ef       	ldi	r19, 0xFF	; 255
    2ca2:	4f e7       	ldi	r20, 0x7F	; 127
    2ca4:	57 e4       	ldi	r21, 0x47	; 71
    2ca6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2caa:	18 16       	cp	r1, r24
    2cac:	0c f0       	brlt	.+2      	; 0x2cb0 <main+0x14b2>
    2cae:	43 c0       	rjmp	.+134    	; 0x2d36 <main+0x1538>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	eb 5e       	subi	r30, 0xEB	; 235
    2cb4:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb6:	60 81       	ld	r22, Z
    2cb8:	71 81       	ldd	r23, Z+1	; 0x01
    2cba:	82 81       	ldd	r24, Z+2	; 0x02
    2cbc:	93 81       	ldd	r25, Z+3	; 0x03
    2cbe:	20 e0       	ldi	r18, 0x00	; 0
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	40 e2       	ldi	r20, 0x20	; 32
    2cc4:	51 e4       	ldi	r21, 0x41	; 65
    2cc6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cca:	dc 01       	movw	r26, r24
    2ccc:	cb 01       	movw	r24, r22
    2cce:	8e 01       	movw	r16, r28
    2cd0:	01 5f       	subi	r16, 0xF1	; 241
    2cd2:	1e 4f       	sbci	r17, 0xFE	; 254
    2cd4:	bc 01       	movw	r22, r24
    2cd6:	cd 01       	movw	r24, r26
    2cd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cdc:	dc 01       	movw	r26, r24
    2cde:	cb 01       	movw	r24, r22
    2ce0:	f8 01       	movw	r30, r16
    2ce2:	91 83       	std	Z+1, r25	; 0x01
    2ce4:	80 83       	st	Z, r24
    2ce6:	1f c0       	rjmp	.+62     	; 0x2d26 <main+0x1528>
    2ce8:	fe 01       	movw	r30, r28
    2cea:	e3 5f       	subi	r30, 0xF3	; 243
    2cec:	fe 4f       	sbci	r31, 0xFE	; 254
    2cee:	88 ec       	ldi	r24, 0xC8	; 200
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	91 83       	std	Z+1, r25	; 0x01
    2cf4:	80 83       	st	Z, r24
    2cf6:	fe 01       	movw	r30, r28
    2cf8:	e3 5f       	subi	r30, 0xF3	; 243
    2cfa:	fe 4f       	sbci	r31, 0xFE	; 254
    2cfc:	80 81       	ld	r24, Z
    2cfe:	91 81       	ldd	r25, Z+1	; 0x01
    2d00:	01 97       	sbiw	r24, 0x01	; 1
    2d02:	f1 f7       	brne	.-4      	; 0x2d00 <main+0x1502>
    2d04:	fe 01       	movw	r30, r28
    2d06:	e3 5f       	subi	r30, 0xF3	; 243
    2d08:	fe 4f       	sbci	r31, 0xFE	; 254
    2d0a:	91 83       	std	Z+1, r25	; 0x01
    2d0c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d0e:	de 01       	movw	r26, r28
    2d10:	a1 5f       	subi	r26, 0xF1	; 241
    2d12:	be 4f       	sbci	r27, 0xFE	; 254
    2d14:	fe 01       	movw	r30, r28
    2d16:	e1 5f       	subi	r30, 0xF1	; 241
    2d18:	fe 4f       	sbci	r31, 0xFE	; 254
    2d1a:	80 81       	ld	r24, Z
    2d1c:	91 81       	ldd	r25, Z+1	; 0x01
    2d1e:	01 97       	sbiw	r24, 0x01	; 1
    2d20:	11 96       	adiw	r26, 0x01	; 1
    2d22:	9c 93       	st	X, r25
    2d24:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d26:	fe 01       	movw	r30, r28
    2d28:	e1 5f       	subi	r30, 0xF1	; 241
    2d2a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d2c:	80 81       	ld	r24, Z
    2d2e:	91 81       	ldd	r25, Z+1	; 0x01
    2d30:	00 97       	sbiw	r24, 0x00	; 0
    2d32:	d1 f6       	brne	.-76     	; 0x2ce8 <main+0x14ea>
    2d34:	27 c0       	rjmp	.+78     	; 0x2d84 <main+0x1586>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d36:	8e 01       	movw	r16, r28
    2d38:	01 5f       	subi	r16, 0xF1	; 241
    2d3a:	1e 4f       	sbci	r17, 0xFE	; 254
    2d3c:	fe 01       	movw	r30, r28
    2d3e:	ef 5e       	subi	r30, 0xEF	; 239
    2d40:	fe 4f       	sbci	r31, 0xFE	; 254
    2d42:	60 81       	ld	r22, Z
    2d44:	71 81       	ldd	r23, Z+1	; 0x01
    2d46:	82 81       	ldd	r24, Z+2	; 0x02
    2d48:	93 81       	ldd	r25, Z+3	; 0x03
    2d4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d4e:	dc 01       	movw	r26, r24
    2d50:	cb 01       	movw	r24, r22
    2d52:	f8 01       	movw	r30, r16
    2d54:	91 83       	std	Z+1, r25	; 0x01
    2d56:	80 83       	st	Z, r24
    2d58:	de 01       	movw	r26, r28
    2d5a:	a5 5f       	subi	r26, 0xF5	; 245
    2d5c:	be 4f       	sbci	r27, 0xFE	; 254
    2d5e:	fe 01       	movw	r30, r28
    2d60:	e1 5f       	subi	r30, 0xF1	; 241
    2d62:	fe 4f       	sbci	r31, 0xFE	; 254
    2d64:	80 81       	ld	r24, Z
    2d66:	91 81       	ldd	r25, Z+1	; 0x01
    2d68:	8d 93       	st	X+, r24
    2d6a:	9c 93       	st	X, r25
    2d6c:	fe 01       	movw	r30, r28
    2d6e:	e5 5f       	subi	r30, 0xF5	; 245
    2d70:	fe 4f       	sbci	r31, 0xFE	; 254
    2d72:	80 81       	ld	r24, Z
    2d74:	91 81       	ldd	r25, Z+1	; 0x01
    2d76:	01 97       	sbiw	r24, 0x01	; 1
    2d78:	f1 f7       	brne	.-4      	; 0x2d76 <main+0x1578>
    2d7a:	fe 01       	movw	r30, r28
    2d7c:	e5 5f       	subi	r30, 0xF5	; 245
    2d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d80:	91 83       	std	Z+1, r25	; 0x01
    2d82:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,1);
    2d8a:	ce 01       	movw	r24, r28
    2d8c:	8f 51       	subi	r24, 0x1F	; 31
    2d8e:	9e 4f       	sbci	r25, 0xFE	; 254
    2d90:	60 e0       	ldi	r22, 0x00	; 0
    2d92:	41 e0       	ldi	r20, 0x01	; 1
    2d94:	21 e0       	ldi	r18, 0x01	; 1
    2d96:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,14);
    2d9a:	ce 01       	movw	r24, r28
    2d9c:	8f 5e       	subi	r24, 0xEF	; 239
    2d9e:	9d 4f       	sbci	r25, 0xFD	; 253
    2da0:	61 e0       	ldi	r22, 0x01	; 1
    2da2:	41 e0       	ldi	r20, 0x01	; 1
    2da4:	2e e0       	ldi	r18, 0x0E	; 14
    2da6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2daa:	fe 01       	movw	r30, r28
    2dac:	e9 5f       	subi	r30, 0xF9	; 249
    2dae:	fe 4f       	sbci	r31, 0xFE	; 254
    2db0:	80 e0       	ldi	r24, 0x00	; 0
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	a0 e2       	ldi	r26, 0x20	; 32
    2db6:	b1 e4       	ldi	r27, 0x41	; 65
    2db8:	80 83       	st	Z, r24
    2dba:	91 83       	std	Z+1, r25	; 0x01
    2dbc:	a2 83       	std	Z+2, r26	; 0x02
    2dbe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dc0:	8e 01       	movw	r16, r28
    2dc2:	0d 5f       	subi	r16, 0xFD	; 253
    2dc4:	1e 4f       	sbci	r17, 0xFE	; 254
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	e9 5f       	subi	r30, 0xF9	; 249
    2dca:	fe 4f       	sbci	r31, 0xFE	; 254
    2dcc:	60 81       	ld	r22, Z
    2dce:	71 81       	ldd	r23, Z+1	; 0x01
    2dd0:	82 81       	ldd	r24, Z+2	; 0x02
    2dd2:	93 81       	ldd	r25, Z+3	; 0x03
    2dd4:	20 e0       	ldi	r18, 0x00	; 0
    2dd6:	30 e0       	ldi	r19, 0x00	; 0
    2dd8:	4a ef       	ldi	r20, 0xFA	; 250
    2dda:	54 e4       	ldi	r21, 0x44	; 68
    2ddc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2de0:	dc 01       	movw	r26, r24
    2de2:	cb 01       	movw	r24, r22
    2de4:	f8 01       	movw	r30, r16
    2de6:	80 83       	st	Z, r24
    2de8:	91 83       	std	Z+1, r25	; 0x01
    2dea:	a2 83       	std	Z+2, r26	; 0x02
    2dec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2dee:	fe 01       	movw	r30, r28
    2df0:	ed 5f       	subi	r30, 0xFD	; 253
    2df2:	fe 4f       	sbci	r31, 0xFE	; 254
    2df4:	60 81       	ld	r22, Z
    2df6:	71 81       	ldd	r23, Z+1	; 0x01
    2df8:	82 81       	ldd	r24, Z+2	; 0x02
    2dfa:	93 81       	ldd	r25, Z+3	; 0x03
    2dfc:	20 e0       	ldi	r18, 0x00	; 0
    2dfe:	30 e0       	ldi	r19, 0x00	; 0
    2e00:	40 e8       	ldi	r20, 0x80	; 128
    2e02:	5f e3       	ldi	r21, 0x3F	; 63
    2e04:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e08:	88 23       	and	r24, r24
    2e0a:	44 f4       	brge	.+16     	; 0x2e1c <main+0x161e>
		__ticks = 1;
    2e0c:	fe 01       	movw	r30, r28
    2e0e:	ef 5f       	subi	r30, 0xFF	; 255
    2e10:	fe 4f       	sbci	r31, 0xFE	; 254
    2e12:	81 e0       	ldi	r24, 0x01	; 1
    2e14:	90 e0       	ldi	r25, 0x00	; 0
    2e16:	91 83       	std	Z+1, r25	; 0x01
    2e18:	80 83       	st	Z, r24
    2e1a:	64 c0       	rjmp	.+200    	; 0x2ee4 <main+0x16e6>
	else if (__tmp > 65535)
    2e1c:	fe 01       	movw	r30, r28
    2e1e:	ed 5f       	subi	r30, 0xFD	; 253
    2e20:	fe 4f       	sbci	r31, 0xFE	; 254
    2e22:	60 81       	ld	r22, Z
    2e24:	71 81       	ldd	r23, Z+1	; 0x01
    2e26:	82 81       	ldd	r24, Z+2	; 0x02
    2e28:	93 81       	ldd	r25, Z+3	; 0x03
    2e2a:	20 e0       	ldi	r18, 0x00	; 0
    2e2c:	3f ef       	ldi	r19, 0xFF	; 255
    2e2e:	4f e7       	ldi	r20, 0x7F	; 127
    2e30:	57 e4       	ldi	r21, 0x47	; 71
    2e32:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e36:	18 16       	cp	r1, r24
    2e38:	0c f0       	brlt	.+2      	; 0x2e3c <main+0x163e>
    2e3a:	43 c0       	rjmp	.+134    	; 0x2ec2 <main+0x16c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e3c:	fe 01       	movw	r30, r28
    2e3e:	e9 5f       	subi	r30, 0xF9	; 249
    2e40:	fe 4f       	sbci	r31, 0xFE	; 254
    2e42:	60 81       	ld	r22, Z
    2e44:	71 81       	ldd	r23, Z+1	; 0x01
    2e46:	82 81       	ldd	r24, Z+2	; 0x02
    2e48:	93 81       	ldd	r25, Z+3	; 0x03
    2e4a:	20 e0       	ldi	r18, 0x00	; 0
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	40 e2       	ldi	r20, 0x20	; 32
    2e50:	51 e4       	ldi	r21, 0x41	; 65
    2e52:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e56:	dc 01       	movw	r26, r24
    2e58:	cb 01       	movw	r24, r22
    2e5a:	8e 01       	movw	r16, r28
    2e5c:	0f 5f       	subi	r16, 0xFF	; 255
    2e5e:	1e 4f       	sbci	r17, 0xFE	; 254
    2e60:	bc 01       	movw	r22, r24
    2e62:	cd 01       	movw	r24, r26
    2e64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e68:	dc 01       	movw	r26, r24
    2e6a:	cb 01       	movw	r24, r22
    2e6c:	f8 01       	movw	r30, r16
    2e6e:	91 83       	std	Z+1, r25	; 0x01
    2e70:	80 83       	st	Z, r24
    2e72:	1f c0       	rjmp	.+62     	; 0x2eb2 <main+0x16b4>
    2e74:	fe 01       	movw	r30, r28
    2e76:	e1 50       	subi	r30, 0x01	; 1
    2e78:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7a:	88 ec       	ldi	r24, 0xC8	; 200
    2e7c:	90 e0       	ldi	r25, 0x00	; 0
    2e7e:	91 83       	std	Z+1, r25	; 0x01
    2e80:	80 83       	st	Z, r24
    2e82:	fe 01       	movw	r30, r28
    2e84:	e1 50       	subi	r30, 0x01	; 1
    2e86:	ff 4f       	sbci	r31, 0xFF	; 255
    2e88:	80 81       	ld	r24, Z
    2e8a:	91 81       	ldd	r25, Z+1	; 0x01
    2e8c:	01 97       	sbiw	r24, 0x01	; 1
    2e8e:	f1 f7       	brne	.-4      	; 0x2e8c <main+0x168e>
    2e90:	fe 01       	movw	r30, r28
    2e92:	e1 50       	subi	r30, 0x01	; 1
    2e94:	ff 4f       	sbci	r31, 0xFF	; 255
    2e96:	91 83       	std	Z+1, r25	; 0x01
    2e98:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e9a:	de 01       	movw	r26, r28
    2e9c:	af 5f       	subi	r26, 0xFF	; 255
    2e9e:	be 4f       	sbci	r27, 0xFE	; 254
    2ea0:	fe 01       	movw	r30, r28
    2ea2:	ef 5f       	subi	r30, 0xFF	; 255
    2ea4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ea6:	80 81       	ld	r24, Z
    2ea8:	91 81       	ldd	r25, Z+1	; 0x01
    2eaa:	01 97       	sbiw	r24, 0x01	; 1
    2eac:	11 96       	adiw	r26, 0x01	; 1
    2eae:	9c 93       	st	X, r25
    2eb0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2eb2:	fe 01       	movw	r30, r28
    2eb4:	ef 5f       	subi	r30, 0xFF	; 255
    2eb6:	fe 4f       	sbci	r31, 0xFE	; 254
    2eb8:	80 81       	ld	r24, Z
    2eba:	91 81       	ldd	r25, Z+1	; 0x01
    2ebc:	00 97       	sbiw	r24, 0x00	; 0
    2ebe:	d1 f6       	brne	.-76     	; 0x2e74 <main+0x1676>
    2ec0:	27 c0       	rjmp	.+78     	; 0x2f10 <main+0x1712>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ec2:	8e 01       	movw	r16, r28
    2ec4:	0f 5f       	subi	r16, 0xFF	; 255
    2ec6:	1e 4f       	sbci	r17, 0xFE	; 254
    2ec8:	fe 01       	movw	r30, r28
    2eca:	ed 5f       	subi	r30, 0xFD	; 253
    2ecc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ece:	60 81       	ld	r22, Z
    2ed0:	71 81       	ldd	r23, Z+1	; 0x01
    2ed2:	82 81       	ldd	r24, Z+2	; 0x02
    2ed4:	93 81       	ldd	r25, Z+3	; 0x03
    2ed6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eda:	dc 01       	movw	r26, r24
    2edc:	cb 01       	movw	r24, r22
    2ede:	f8 01       	movw	r30, r16
    2ee0:	91 83       	std	Z+1, r25	; 0x01
    2ee2:	80 83       	st	Z, r24
    2ee4:	de 01       	movw	r26, r28
    2ee6:	a3 50       	subi	r26, 0x03	; 3
    2ee8:	bf 4f       	sbci	r27, 0xFF	; 255
    2eea:	fe 01       	movw	r30, r28
    2eec:	ef 5f       	subi	r30, 0xFF	; 255
    2eee:	fe 4f       	sbci	r31, 0xFE	; 254
    2ef0:	80 81       	ld	r24, Z
    2ef2:	91 81       	ldd	r25, Z+1	; 0x01
    2ef4:	8d 93       	st	X+, r24
    2ef6:	9c 93       	st	X, r25
    2ef8:	fe 01       	movw	r30, r28
    2efa:	e3 50       	subi	r30, 0x03	; 3
    2efc:	ff 4f       	sbci	r31, 0xFF	; 255
    2efe:	80 81       	ld	r24, Z
    2f00:	91 81       	ldd	r25, Z+1	; 0x01
    2f02:	01 97       	sbiw	r24, 0x01	; 1
    2f04:	f1 f7       	brne	.-4      	; 0x2f02 <main+0x1704>
    2f06:	fe 01       	movw	r30, r28
    2f08:	e3 50       	subi	r30, 0x03	; 3
    2f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f0c:	91 83       	std	Z+1, r25	; 0x01
    2f0e:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    2f10:	81 e0       	ldi	r24, 0x01	; 1
    2f12:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,2);
    2f16:	ce 01       	movw	r24, r28
    2f18:	87 5f       	subi	r24, 0xF7	; 247
    2f1a:	9d 4f       	sbci	r25, 0xFD	; 253
    2f1c:	60 e0       	ldi	r22, 0x00	; 0
    2f1e:	41 e0       	ldi	r20, 0x01	; 1
    2f20:	22 e0       	ldi	r18, 0x02	; 2
    2f22:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,13);
    2f26:	ce 01       	movw	r24, r28
    2f28:	8f 5e       	subi	r24, 0xEF	; 239
    2f2a:	9d 4f       	sbci	r25, 0xFD	; 253
    2f2c:	61 e0       	ldi	r22, 0x01	; 1
    2f2e:	41 e0       	ldi	r20, 0x01	; 1
    2f30:	2d e0       	ldi	r18, 0x0D	; 13
    2f32:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    2f36:	fe 01       	movw	r30, r28
    2f38:	e7 50       	subi	r30, 0x07	; 7
    2f3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f3c:	80 e0       	ldi	r24, 0x00	; 0
    2f3e:	90 e0       	ldi	r25, 0x00	; 0
    2f40:	a0 e2       	ldi	r26, 0x20	; 32
    2f42:	b1 e4       	ldi	r27, 0x41	; 65
    2f44:	80 83       	st	Z, r24
    2f46:	91 83       	std	Z+1, r25	; 0x01
    2f48:	a2 83       	std	Z+2, r26	; 0x02
    2f4a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f4c:	8e 01       	movw	r16, r28
    2f4e:	0b 50       	subi	r16, 0x0B	; 11
    2f50:	1f 4f       	sbci	r17, 0xFF	; 255
    2f52:	fe 01       	movw	r30, r28
    2f54:	e7 50       	subi	r30, 0x07	; 7
    2f56:	ff 4f       	sbci	r31, 0xFF	; 255
    2f58:	60 81       	ld	r22, Z
    2f5a:	71 81       	ldd	r23, Z+1	; 0x01
    2f5c:	82 81       	ldd	r24, Z+2	; 0x02
    2f5e:	93 81       	ldd	r25, Z+3	; 0x03
    2f60:	20 e0       	ldi	r18, 0x00	; 0
    2f62:	30 e0       	ldi	r19, 0x00	; 0
    2f64:	4a ef       	ldi	r20, 0xFA	; 250
    2f66:	54 e4       	ldi	r21, 0x44	; 68
    2f68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f6c:	dc 01       	movw	r26, r24
    2f6e:	cb 01       	movw	r24, r22
    2f70:	f8 01       	movw	r30, r16
    2f72:	80 83       	st	Z, r24
    2f74:	91 83       	std	Z+1, r25	; 0x01
    2f76:	a2 83       	std	Z+2, r26	; 0x02
    2f78:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f7a:	fe 01       	movw	r30, r28
    2f7c:	eb 50       	subi	r30, 0x0B	; 11
    2f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f80:	60 81       	ld	r22, Z
    2f82:	71 81       	ldd	r23, Z+1	; 0x01
    2f84:	82 81       	ldd	r24, Z+2	; 0x02
    2f86:	93 81       	ldd	r25, Z+3	; 0x03
    2f88:	20 e0       	ldi	r18, 0x00	; 0
    2f8a:	30 e0       	ldi	r19, 0x00	; 0
    2f8c:	40 e8       	ldi	r20, 0x80	; 128
    2f8e:	5f e3       	ldi	r21, 0x3F	; 63
    2f90:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f94:	88 23       	and	r24, r24
    2f96:	44 f4       	brge	.+16     	; 0x2fa8 <main+0x17aa>
		__ticks = 1;
    2f98:	fe 01       	movw	r30, r28
    2f9a:	ed 50       	subi	r30, 0x0D	; 13
    2f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9e:	81 e0       	ldi	r24, 0x01	; 1
    2fa0:	90 e0       	ldi	r25, 0x00	; 0
    2fa2:	91 83       	std	Z+1, r25	; 0x01
    2fa4:	80 83       	st	Z, r24
    2fa6:	64 c0       	rjmp	.+200    	; 0x3070 <main+0x1872>
	else if (__tmp > 65535)
    2fa8:	fe 01       	movw	r30, r28
    2faa:	eb 50       	subi	r30, 0x0B	; 11
    2fac:	ff 4f       	sbci	r31, 0xFF	; 255
    2fae:	60 81       	ld	r22, Z
    2fb0:	71 81       	ldd	r23, Z+1	; 0x01
    2fb2:	82 81       	ldd	r24, Z+2	; 0x02
    2fb4:	93 81       	ldd	r25, Z+3	; 0x03
    2fb6:	20 e0       	ldi	r18, 0x00	; 0
    2fb8:	3f ef       	ldi	r19, 0xFF	; 255
    2fba:	4f e7       	ldi	r20, 0x7F	; 127
    2fbc:	57 e4       	ldi	r21, 0x47	; 71
    2fbe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fc2:	18 16       	cp	r1, r24
    2fc4:	0c f0       	brlt	.+2      	; 0x2fc8 <main+0x17ca>
    2fc6:	43 c0       	rjmp	.+134    	; 0x304e <main+0x1850>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fc8:	fe 01       	movw	r30, r28
    2fca:	e7 50       	subi	r30, 0x07	; 7
    2fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2fce:	60 81       	ld	r22, Z
    2fd0:	71 81       	ldd	r23, Z+1	; 0x01
    2fd2:	82 81       	ldd	r24, Z+2	; 0x02
    2fd4:	93 81       	ldd	r25, Z+3	; 0x03
    2fd6:	20 e0       	ldi	r18, 0x00	; 0
    2fd8:	30 e0       	ldi	r19, 0x00	; 0
    2fda:	40 e2       	ldi	r20, 0x20	; 32
    2fdc:	51 e4       	ldi	r21, 0x41	; 65
    2fde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fe2:	dc 01       	movw	r26, r24
    2fe4:	cb 01       	movw	r24, r22
    2fe6:	8e 01       	movw	r16, r28
    2fe8:	0d 50       	subi	r16, 0x0D	; 13
    2fea:	1f 4f       	sbci	r17, 0xFF	; 255
    2fec:	bc 01       	movw	r22, r24
    2fee:	cd 01       	movw	r24, r26
    2ff0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ff4:	dc 01       	movw	r26, r24
    2ff6:	cb 01       	movw	r24, r22
    2ff8:	f8 01       	movw	r30, r16
    2ffa:	91 83       	std	Z+1, r25	; 0x01
    2ffc:	80 83       	st	Z, r24
    2ffe:	1f c0       	rjmp	.+62     	; 0x303e <main+0x1840>
    3000:	fe 01       	movw	r30, r28
    3002:	ef 50       	subi	r30, 0x0F	; 15
    3004:	ff 4f       	sbci	r31, 0xFF	; 255
    3006:	88 ec       	ldi	r24, 0xC8	; 200
    3008:	90 e0       	ldi	r25, 0x00	; 0
    300a:	91 83       	std	Z+1, r25	; 0x01
    300c:	80 83       	st	Z, r24
    300e:	fe 01       	movw	r30, r28
    3010:	ef 50       	subi	r30, 0x0F	; 15
    3012:	ff 4f       	sbci	r31, 0xFF	; 255
    3014:	80 81       	ld	r24, Z
    3016:	91 81       	ldd	r25, Z+1	; 0x01
    3018:	01 97       	sbiw	r24, 0x01	; 1
    301a:	f1 f7       	brne	.-4      	; 0x3018 <main+0x181a>
    301c:	fe 01       	movw	r30, r28
    301e:	ef 50       	subi	r30, 0x0F	; 15
    3020:	ff 4f       	sbci	r31, 0xFF	; 255
    3022:	91 83       	std	Z+1, r25	; 0x01
    3024:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3026:	de 01       	movw	r26, r28
    3028:	ad 50       	subi	r26, 0x0D	; 13
    302a:	bf 4f       	sbci	r27, 0xFF	; 255
    302c:	fe 01       	movw	r30, r28
    302e:	ed 50       	subi	r30, 0x0D	; 13
    3030:	ff 4f       	sbci	r31, 0xFF	; 255
    3032:	80 81       	ld	r24, Z
    3034:	91 81       	ldd	r25, Z+1	; 0x01
    3036:	01 97       	sbiw	r24, 0x01	; 1
    3038:	11 96       	adiw	r26, 0x01	; 1
    303a:	9c 93       	st	X, r25
    303c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    303e:	fe 01       	movw	r30, r28
    3040:	ed 50       	subi	r30, 0x0D	; 13
    3042:	ff 4f       	sbci	r31, 0xFF	; 255
    3044:	80 81       	ld	r24, Z
    3046:	91 81       	ldd	r25, Z+1	; 0x01
    3048:	00 97       	sbiw	r24, 0x00	; 0
    304a:	d1 f6       	brne	.-76     	; 0x3000 <main+0x1802>
    304c:	27 c0       	rjmp	.+78     	; 0x309c <main+0x189e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    304e:	8e 01       	movw	r16, r28
    3050:	0d 50       	subi	r16, 0x0D	; 13
    3052:	1f 4f       	sbci	r17, 0xFF	; 255
    3054:	fe 01       	movw	r30, r28
    3056:	eb 50       	subi	r30, 0x0B	; 11
    3058:	ff 4f       	sbci	r31, 0xFF	; 255
    305a:	60 81       	ld	r22, Z
    305c:	71 81       	ldd	r23, Z+1	; 0x01
    305e:	82 81       	ldd	r24, Z+2	; 0x02
    3060:	93 81       	ldd	r25, Z+3	; 0x03
    3062:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	f8 01       	movw	r30, r16
    306c:	91 83       	std	Z+1, r25	; 0x01
    306e:	80 83       	st	Z, r24
    3070:	de 01       	movw	r26, r28
    3072:	a1 51       	subi	r26, 0x11	; 17
    3074:	bf 4f       	sbci	r27, 0xFF	; 255
    3076:	fe 01       	movw	r30, r28
    3078:	ed 50       	subi	r30, 0x0D	; 13
    307a:	ff 4f       	sbci	r31, 0xFF	; 255
    307c:	80 81       	ld	r24, Z
    307e:	91 81       	ldd	r25, Z+1	; 0x01
    3080:	8d 93       	st	X+, r24
    3082:	9c 93       	st	X, r25
    3084:	fe 01       	movw	r30, r28
    3086:	e1 51       	subi	r30, 0x11	; 17
    3088:	ff 4f       	sbci	r31, 0xFF	; 255
    308a:	80 81       	ld	r24, Z
    308c:	91 81       	ldd	r25, Z+1	; 0x01
    308e:	01 97       	sbiw	r24, 0x01	; 1
    3090:	f1 f7       	brne	.-4      	; 0x308e <main+0x1890>
    3092:	fe 01       	movw	r30, r28
    3094:	e1 51       	subi	r30, 0x11	; 17
    3096:	ff 4f       	sbci	r31, 0xFF	; 255
    3098:	91 83       	std	Z+1, r25	; 0x01
    309a:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    309c:	81 e0       	ldi	r24, 0x01	; 1
    309e:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,3);
    30a2:	ce 01       	movw	r24, r28
    30a4:	8f 51       	subi	r24, 0x1F	; 31
    30a6:	9e 4f       	sbci	r25, 0xFE	; 254
    30a8:	60 e0       	ldi	r22, 0x00	; 0
    30aa:	41 e0       	ldi	r20, 0x01	; 1
    30ac:	23 e0       	ldi	r18, 0x03	; 3
    30ae:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,12);
    30b2:	ce 01       	movw	r24, r28
    30b4:	8f 5e       	subi	r24, 0xEF	; 239
    30b6:	9d 4f       	sbci	r25, 0xFD	; 253
    30b8:	61 e0       	ldi	r22, 0x01	; 1
    30ba:	41 e0       	ldi	r20, 0x01	; 1
    30bc:	2c e0       	ldi	r18, 0x0C	; 12
    30be:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    30c2:	fe 01       	movw	r30, r28
    30c4:	e5 51       	subi	r30, 0x15	; 21
    30c6:	ff 4f       	sbci	r31, 0xFF	; 255
    30c8:	80 e0       	ldi	r24, 0x00	; 0
    30ca:	90 e0       	ldi	r25, 0x00	; 0
    30cc:	a0 e2       	ldi	r26, 0x20	; 32
    30ce:	b1 e4       	ldi	r27, 0x41	; 65
    30d0:	80 83       	st	Z, r24
    30d2:	91 83       	std	Z+1, r25	; 0x01
    30d4:	a2 83       	std	Z+2, r26	; 0x02
    30d6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30d8:	8e 01       	movw	r16, r28
    30da:	09 51       	subi	r16, 0x19	; 25
    30dc:	1f 4f       	sbci	r17, 0xFF	; 255
    30de:	fe 01       	movw	r30, r28
    30e0:	e5 51       	subi	r30, 0x15	; 21
    30e2:	ff 4f       	sbci	r31, 0xFF	; 255
    30e4:	60 81       	ld	r22, Z
    30e6:	71 81       	ldd	r23, Z+1	; 0x01
    30e8:	82 81       	ldd	r24, Z+2	; 0x02
    30ea:	93 81       	ldd	r25, Z+3	; 0x03
    30ec:	20 e0       	ldi	r18, 0x00	; 0
    30ee:	30 e0       	ldi	r19, 0x00	; 0
    30f0:	4a ef       	ldi	r20, 0xFA	; 250
    30f2:	54 e4       	ldi	r21, 0x44	; 68
    30f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30f8:	dc 01       	movw	r26, r24
    30fa:	cb 01       	movw	r24, r22
    30fc:	f8 01       	movw	r30, r16
    30fe:	80 83       	st	Z, r24
    3100:	91 83       	std	Z+1, r25	; 0x01
    3102:	a2 83       	std	Z+2, r26	; 0x02
    3104:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3106:	fe 01       	movw	r30, r28
    3108:	e9 51       	subi	r30, 0x19	; 25
    310a:	ff 4f       	sbci	r31, 0xFF	; 255
    310c:	60 81       	ld	r22, Z
    310e:	71 81       	ldd	r23, Z+1	; 0x01
    3110:	82 81       	ldd	r24, Z+2	; 0x02
    3112:	93 81       	ldd	r25, Z+3	; 0x03
    3114:	20 e0       	ldi	r18, 0x00	; 0
    3116:	30 e0       	ldi	r19, 0x00	; 0
    3118:	40 e8       	ldi	r20, 0x80	; 128
    311a:	5f e3       	ldi	r21, 0x3F	; 63
    311c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3120:	88 23       	and	r24, r24
    3122:	44 f4       	brge	.+16     	; 0x3134 <main+0x1936>
		__ticks = 1;
    3124:	fe 01       	movw	r30, r28
    3126:	eb 51       	subi	r30, 0x1B	; 27
    3128:	ff 4f       	sbci	r31, 0xFF	; 255
    312a:	81 e0       	ldi	r24, 0x01	; 1
    312c:	90 e0       	ldi	r25, 0x00	; 0
    312e:	91 83       	std	Z+1, r25	; 0x01
    3130:	80 83       	st	Z, r24
    3132:	64 c0       	rjmp	.+200    	; 0x31fc <main+0x19fe>
	else if (__tmp > 65535)
    3134:	fe 01       	movw	r30, r28
    3136:	e9 51       	subi	r30, 0x19	; 25
    3138:	ff 4f       	sbci	r31, 0xFF	; 255
    313a:	60 81       	ld	r22, Z
    313c:	71 81       	ldd	r23, Z+1	; 0x01
    313e:	82 81       	ldd	r24, Z+2	; 0x02
    3140:	93 81       	ldd	r25, Z+3	; 0x03
    3142:	20 e0       	ldi	r18, 0x00	; 0
    3144:	3f ef       	ldi	r19, 0xFF	; 255
    3146:	4f e7       	ldi	r20, 0x7F	; 127
    3148:	57 e4       	ldi	r21, 0x47	; 71
    314a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    314e:	18 16       	cp	r1, r24
    3150:	0c f0       	brlt	.+2      	; 0x3154 <main+0x1956>
    3152:	43 c0       	rjmp	.+134    	; 0x31da <main+0x19dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3154:	fe 01       	movw	r30, r28
    3156:	e5 51       	subi	r30, 0x15	; 21
    3158:	ff 4f       	sbci	r31, 0xFF	; 255
    315a:	60 81       	ld	r22, Z
    315c:	71 81       	ldd	r23, Z+1	; 0x01
    315e:	82 81       	ldd	r24, Z+2	; 0x02
    3160:	93 81       	ldd	r25, Z+3	; 0x03
    3162:	20 e0       	ldi	r18, 0x00	; 0
    3164:	30 e0       	ldi	r19, 0x00	; 0
    3166:	40 e2       	ldi	r20, 0x20	; 32
    3168:	51 e4       	ldi	r21, 0x41	; 65
    316a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    316e:	dc 01       	movw	r26, r24
    3170:	cb 01       	movw	r24, r22
    3172:	8e 01       	movw	r16, r28
    3174:	0b 51       	subi	r16, 0x1B	; 27
    3176:	1f 4f       	sbci	r17, 0xFF	; 255
    3178:	bc 01       	movw	r22, r24
    317a:	cd 01       	movw	r24, r26
    317c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3180:	dc 01       	movw	r26, r24
    3182:	cb 01       	movw	r24, r22
    3184:	f8 01       	movw	r30, r16
    3186:	91 83       	std	Z+1, r25	; 0x01
    3188:	80 83       	st	Z, r24
    318a:	1f c0       	rjmp	.+62     	; 0x31ca <main+0x19cc>
    318c:	fe 01       	movw	r30, r28
    318e:	ed 51       	subi	r30, 0x1D	; 29
    3190:	ff 4f       	sbci	r31, 0xFF	; 255
    3192:	88 ec       	ldi	r24, 0xC8	; 200
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	91 83       	std	Z+1, r25	; 0x01
    3198:	80 83       	st	Z, r24
    319a:	fe 01       	movw	r30, r28
    319c:	ed 51       	subi	r30, 0x1D	; 29
    319e:	ff 4f       	sbci	r31, 0xFF	; 255
    31a0:	80 81       	ld	r24, Z
    31a2:	91 81       	ldd	r25, Z+1	; 0x01
    31a4:	01 97       	sbiw	r24, 0x01	; 1
    31a6:	f1 f7       	brne	.-4      	; 0x31a4 <main+0x19a6>
    31a8:	fe 01       	movw	r30, r28
    31aa:	ed 51       	subi	r30, 0x1D	; 29
    31ac:	ff 4f       	sbci	r31, 0xFF	; 255
    31ae:	91 83       	std	Z+1, r25	; 0x01
    31b0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31b2:	de 01       	movw	r26, r28
    31b4:	ab 51       	subi	r26, 0x1B	; 27
    31b6:	bf 4f       	sbci	r27, 0xFF	; 255
    31b8:	fe 01       	movw	r30, r28
    31ba:	eb 51       	subi	r30, 0x1B	; 27
    31bc:	ff 4f       	sbci	r31, 0xFF	; 255
    31be:	80 81       	ld	r24, Z
    31c0:	91 81       	ldd	r25, Z+1	; 0x01
    31c2:	01 97       	sbiw	r24, 0x01	; 1
    31c4:	11 96       	adiw	r26, 0x01	; 1
    31c6:	9c 93       	st	X, r25
    31c8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31ca:	fe 01       	movw	r30, r28
    31cc:	eb 51       	subi	r30, 0x1B	; 27
    31ce:	ff 4f       	sbci	r31, 0xFF	; 255
    31d0:	80 81       	ld	r24, Z
    31d2:	91 81       	ldd	r25, Z+1	; 0x01
    31d4:	00 97       	sbiw	r24, 0x00	; 0
    31d6:	d1 f6       	brne	.-76     	; 0x318c <main+0x198e>
    31d8:	27 c0       	rjmp	.+78     	; 0x3228 <main+0x1a2a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31da:	8e 01       	movw	r16, r28
    31dc:	0b 51       	subi	r16, 0x1B	; 27
    31de:	1f 4f       	sbci	r17, 0xFF	; 255
    31e0:	fe 01       	movw	r30, r28
    31e2:	e9 51       	subi	r30, 0x19	; 25
    31e4:	ff 4f       	sbci	r31, 0xFF	; 255
    31e6:	60 81       	ld	r22, Z
    31e8:	71 81       	ldd	r23, Z+1	; 0x01
    31ea:	82 81       	ldd	r24, Z+2	; 0x02
    31ec:	93 81       	ldd	r25, Z+3	; 0x03
    31ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31f2:	dc 01       	movw	r26, r24
    31f4:	cb 01       	movw	r24, r22
    31f6:	f8 01       	movw	r30, r16
    31f8:	91 83       	std	Z+1, r25	; 0x01
    31fa:	80 83       	st	Z, r24
    31fc:	de 01       	movw	r26, r28
    31fe:	af 51       	subi	r26, 0x1F	; 31
    3200:	bf 4f       	sbci	r27, 0xFF	; 255
    3202:	fe 01       	movw	r30, r28
    3204:	eb 51       	subi	r30, 0x1B	; 27
    3206:	ff 4f       	sbci	r31, 0xFF	; 255
    3208:	80 81       	ld	r24, Z
    320a:	91 81       	ldd	r25, Z+1	; 0x01
    320c:	8d 93       	st	X+, r24
    320e:	9c 93       	st	X, r25
    3210:	fe 01       	movw	r30, r28
    3212:	ef 51       	subi	r30, 0x1F	; 31
    3214:	ff 4f       	sbci	r31, 0xFF	; 255
    3216:	80 81       	ld	r24, Z
    3218:	91 81       	ldd	r25, Z+1	; 0x01
    321a:	01 97       	sbiw	r24, 0x01	; 1
    321c:	f1 f7       	brne	.-4      	; 0x321a <main+0x1a1c>
    321e:	fe 01       	movw	r30, r28
    3220:	ef 51       	subi	r30, 0x1F	; 31
    3222:	ff 4f       	sbci	r31, 0xFF	; 255
    3224:	91 83       	std	Z+1, r25	; 0x01
    3226:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    3228:	81 e0       	ldi	r24, 0x01	; 1
    322a:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,4);
    322e:	ce 01       	movw	r24, r28
    3230:	87 5f       	subi	r24, 0xF7	; 247
    3232:	9d 4f       	sbci	r25, 0xFD	; 253
    3234:	60 e0       	ldi	r22, 0x00	; 0
    3236:	41 e0       	ldi	r20, 0x01	; 1
    3238:	24 e0       	ldi	r18, 0x04	; 4
    323a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,11);
    323e:	ce 01       	movw	r24, r28
    3240:	8f 5e       	subi	r24, 0xEF	; 239
    3242:	9d 4f       	sbci	r25, 0xFD	; 253
    3244:	61 e0       	ldi	r22, 0x01	; 1
    3246:	41 e0       	ldi	r20, 0x01	; 1
    3248:	2b e0       	ldi	r18, 0x0B	; 11
    324a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    324e:	fe 01       	movw	r30, r28
    3250:	e3 52       	subi	r30, 0x23	; 35
    3252:	ff 4f       	sbci	r31, 0xFF	; 255
    3254:	80 e0       	ldi	r24, 0x00	; 0
    3256:	90 e0       	ldi	r25, 0x00	; 0
    3258:	a0 e2       	ldi	r26, 0x20	; 32
    325a:	b1 e4       	ldi	r27, 0x41	; 65
    325c:	80 83       	st	Z, r24
    325e:	91 83       	std	Z+1, r25	; 0x01
    3260:	a2 83       	std	Z+2, r26	; 0x02
    3262:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3264:	8e 01       	movw	r16, r28
    3266:	07 52       	subi	r16, 0x27	; 39
    3268:	1f 4f       	sbci	r17, 0xFF	; 255
    326a:	fe 01       	movw	r30, r28
    326c:	e3 52       	subi	r30, 0x23	; 35
    326e:	ff 4f       	sbci	r31, 0xFF	; 255
    3270:	60 81       	ld	r22, Z
    3272:	71 81       	ldd	r23, Z+1	; 0x01
    3274:	82 81       	ldd	r24, Z+2	; 0x02
    3276:	93 81       	ldd	r25, Z+3	; 0x03
    3278:	20 e0       	ldi	r18, 0x00	; 0
    327a:	30 e0       	ldi	r19, 0x00	; 0
    327c:	4a ef       	ldi	r20, 0xFA	; 250
    327e:	54 e4       	ldi	r21, 0x44	; 68
    3280:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3284:	dc 01       	movw	r26, r24
    3286:	cb 01       	movw	r24, r22
    3288:	f8 01       	movw	r30, r16
    328a:	80 83       	st	Z, r24
    328c:	91 83       	std	Z+1, r25	; 0x01
    328e:	a2 83       	std	Z+2, r26	; 0x02
    3290:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3292:	fe 01       	movw	r30, r28
    3294:	e7 52       	subi	r30, 0x27	; 39
    3296:	ff 4f       	sbci	r31, 0xFF	; 255
    3298:	60 81       	ld	r22, Z
    329a:	71 81       	ldd	r23, Z+1	; 0x01
    329c:	82 81       	ldd	r24, Z+2	; 0x02
    329e:	93 81       	ldd	r25, Z+3	; 0x03
    32a0:	20 e0       	ldi	r18, 0x00	; 0
    32a2:	30 e0       	ldi	r19, 0x00	; 0
    32a4:	40 e8       	ldi	r20, 0x80	; 128
    32a6:	5f e3       	ldi	r21, 0x3F	; 63
    32a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32ac:	88 23       	and	r24, r24
    32ae:	44 f4       	brge	.+16     	; 0x32c0 <main+0x1ac2>
		__ticks = 1;
    32b0:	fe 01       	movw	r30, r28
    32b2:	e9 52       	subi	r30, 0x29	; 41
    32b4:	ff 4f       	sbci	r31, 0xFF	; 255
    32b6:	81 e0       	ldi	r24, 0x01	; 1
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	91 83       	std	Z+1, r25	; 0x01
    32bc:	80 83       	st	Z, r24
    32be:	64 c0       	rjmp	.+200    	; 0x3388 <main+0x1b8a>
	else if (__tmp > 65535)
    32c0:	fe 01       	movw	r30, r28
    32c2:	e7 52       	subi	r30, 0x27	; 39
    32c4:	ff 4f       	sbci	r31, 0xFF	; 255
    32c6:	60 81       	ld	r22, Z
    32c8:	71 81       	ldd	r23, Z+1	; 0x01
    32ca:	82 81       	ldd	r24, Z+2	; 0x02
    32cc:	93 81       	ldd	r25, Z+3	; 0x03
    32ce:	20 e0       	ldi	r18, 0x00	; 0
    32d0:	3f ef       	ldi	r19, 0xFF	; 255
    32d2:	4f e7       	ldi	r20, 0x7F	; 127
    32d4:	57 e4       	ldi	r21, 0x47	; 71
    32d6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32da:	18 16       	cp	r1, r24
    32dc:	0c f0       	brlt	.+2      	; 0x32e0 <main+0x1ae2>
    32de:	43 c0       	rjmp	.+134    	; 0x3366 <main+0x1b68>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32e0:	fe 01       	movw	r30, r28
    32e2:	e3 52       	subi	r30, 0x23	; 35
    32e4:	ff 4f       	sbci	r31, 0xFF	; 255
    32e6:	60 81       	ld	r22, Z
    32e8:	71 81       	ldd	r23, Z+1	; 0x01
    32ea:	82 81       	ldd	r24, Z+2	; 0x02
    32ec:	93 81       	ldd	r25, Z+3	; 0x03
    32ee:	20 e0       	ldi	r18, 0x00	; 0
    32f0:	30 e0       	ldi	r19, 0x00	; 0
    32f2:	40 e2       	ldi	r20, 0x20	; 32
    32f4:	51 e4       	ldi	r21, 0x41	; 65
    32f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32fa:	dc 01       	movw	r26, r24
    32fc:	cb 01       	movw	r24, r22
    32fe:	8e 01       	movw	r16, r28
    3300:	09 52       	subi	r16, 0x29	; 41
    3302:	1f 4f       	sbci	r17, 0xFF	; 255
    3304:	bc 01       	movw	r22, r24
    3306:	cd 01       	movw	r24, r26
    3308:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    330c:	dc 01       	movw	r26, r24
    330e:	cb 01       	movw	r24, r22
    3310:	f8 01       	movw	r30, r16
    3312:	91 83       	std	Z+1, r25	; 0x01
    3314:	80 83       	st	Z, r24
    3316:	1f c0       	rjmp	.+62     	; 0x3356 <main+0x1b58>
    3318:	fe 01       	movw	r30, r28
    331a:	eb 52       	subi	r30, 0x2B	; 43
    331c:	ff 4f       	sbci	r31, 0xFF	; 255
    331e:	88 ec       	ldi	r24, 0xC8	; 200
    3320:	90 e0       	ldi	r25, 0x00	; 0
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	fe 01       	movw	r30, r28
    3328:	eb 52       	subi	r30, 0x2B	; 43
    332a:	ff 4f       	sbci	r31, 0xFF	; 255
    332c:	80 81       	ld	r24, Z
    332e:	91 81       	ldd	r25, Z+1	; 0x01
    3330:	01 97       	sbiw	r24, 0x01	; 1
    3332:	f1 f7       	brne	.-4      	; 0x3330 <main+0x1b32>
    3334:	fe 01       	movw	r30, r28
    3336:	eb 52       	subi	r30, 0x2B	; 43
    3338:	ff 4f       	sbci	r31, 0xFF	; 255
    333a:	91 83       	std	Z+1, r25	; 0x01
    333c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    333e:	de 01       	movw	r26, r28
    3340:	a9 52       	subi	r26, 0x29	; 41
    3342:	bf 4f       	sbci	r27, 0xFF	; 255
    3344:	fe 01       	movw	r30, r28
    3346:	e9 52       	subi	r30, 0x29	; 41
    3348:	ff 4f       	sbci	r31, 0xFF	; 255
    334a:	80 81       	ld	r24, Z
    334c:	91 81       	ldd	r25, Z+1	; 0x01
    334e:	01 97       	sbiw	r24, 0x01	; 1
    3350:	11 96       	adiw	r26, 0x01	; 1
    3352:	9c 93       	st	X, r25
    3354:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3356:	fe 01       	movw	r30, r28
    3358:	e9 52       	subi	r30, 0x29	; 41
    335a:	ff 4f       	sbci	r31, 0xFF	; 255
    335c:	80 81       	ld	r24, Z
    335e:	91 81       	ldd	r25, Z+1	; 0x01
    3360:	00 97       	sbiw	r24, 0x00	; 0
    3362:	d1 f6       	brne	.-76     	; 0x3318 <main+0x1b1a>
    3364:	27 c0       	rjmp	.+78     	; 0x33b4 <main+0x1bb6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3366:	8e 01       	movw	r16, r28
    3368:	09 52       	subi	r16, 0x29	; 41
    336a:	1f 4f       	sbci	r17, 0xFF	; 255
    336c:	fe 01       	movw	r30, r28
    336e:	e7 52       	subi	r30, 0x27	; 39
    3370:	ff 4f       	sbci	r31, 0xFF	; 255
    3372:	60 81       	ld	r22, Z
    3374:	71 81       	ldd	r23, Z+1	; 0x01
    3376:	82 81       	ldd	r24, Z+2	; 0x02
    3378:	93 81       	ldd	r25, Z+3	; 0x03
    337a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    337e:	dc 01       	movw	r26, r24
    3380:	cb 01       	movw	r24, r22
    3382:	f8 01       	movw	r30, r16
    3384:	91 83       	std	Z+1, r25	; 0x01
    3386:	80 83       	st	Z, r24
    3388:	de 01       	movw	r26, r28
    338a:	ad 52       	subi	r26, 0x2D	; 45
    338c:	bf 4f       	sbci	r27, 0xFF	; 255
    338e:	fe 01       	movw	r30, r28
    3390:	e9 52       	subi	r30, 0x29	; 41
    3392:	ff 4f       	sbci	r31, 0xFF	; 255
    3394:	80 81       	ld	r24, Z
    3396:	91 81       	ldd	r25, Z+1	; 0x01
    3398:	8d 93       	st	X+, r24
    339a:	9c 93       	st	X, r25
    339c:	fe 01       	movw	r30, r28
    339e:	ed 52       	subi	r30, 0x2D	; 45
    33a0:	ff 4f       	sbci	r31, 0xFF	; 255
    33a2:	80 81       	ld	r24, Z
    33a4:	91 81       	ldd	r25, Z+1	; 0x01
    33a6:	01 97       	sbiw	r24, 0x01	; 1
    33a8:	f1 f7       	brne	.-4      	; 0x33a6 <main+0x1ba8>
    33aa:	fe 01       	movw	r30, r28
    33ac:	ed 52       	subi	r30, 0x2D	; 45
    33ae:	ff 4f       	sbci	r31, 0xFF	; 255
    33b0:	91 83       	std	Z+1, r25	; 0x01
    33b2:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,5);
    33ba:	ce 01       	movw	r24, r28
    33bc:	8f 51       	subi	r24, 0x1F	; 31
    33be:	9e 4f       	sbci	r25, 0xFE	; 254
    33c0:	60 e0       	ldi	r22, 0x00	; 0
    33c2:	41 e0       	ldi	r20, 0x01	; 1
    33c4:	25 e0       	ldi	r18, 0x05	; 5
    33c6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,10);
    33ca:	ce 01       	movw	r24, r28
    33cc:	8f 5e       	subi	r24, 0xEF	; 239
    33ce:	9d 4f       	sbci	r25, 0xFD	; 253
    33d0:	61 e0       	ldi	r22, 0x01	; 1
    33d2:	41 e0       	ldi	r20, 0x01	; 1
    33d4:	2a e0       	ldi	r18, 0x0A	; 10
    33d6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    33da:	fe 01       	movw	r30, r28
    33dc:	e1 53       	subi	r30, 0x31	; 49
    33de:	ff 4f       	sbci	r31, 0xFF	; 255
    33e0:	80 e0       	ldi	r24, 0x00	; 0
    33e2:	90 e0       	ldi	r25, 0x00	; 0
    33e4:	a0 e2       	ldi	r26, 0x20	; 32
    33e6:	b1 e4       	ldi	r27, 0x41	; 65
    33e8:	80 83       	st	Z, r24
    33ea:	91 83       	std	Z+1, r25	; 0x01
    33ec:	a2 83       	std	Z+2, r26	; 0x02
    33ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33f0:	8e 01       	movw	r16, r28
    33f2:	05 53       	subi	r16, 0x35	; 53
    33f4:	1f 4f       	sbci	r17, 0xFF	; 255
    33f6:	fe 01       	movw	r30, r28
    33f8:	e1 53       	subi	r30, 0x31	; 49
    33fa:	ff 4f       	sbci	r31, 0xFF	; 255
    33fc:	60 81       	ld	r22, Z
    33fe:	71 81       	ldd	r23, Z+1	; 0x01
    3400:	82 81       	ldd	r24, Z+2	; 0x02
    3402:	93 81       	ldd	r25, Z+3	; 0x03
    3404:	20 e0       	ldi	r18, 0x00	; 0
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	4a ef       	ldi	r20, 0xFA	; 250
    340a:	54 e4       	ldi	r21, 0x44	; 68
    340c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3410:	dc 01       	movw	r26, r24
    3412:	cb 01       	movw	r24, r22
    3414:	f8 01       	movw	r30, r16
    3416:	80 83       	st	Z, r24
    3418:	91 83       	std	Z+1, r25	; 0x01
    341a:	a2 83       	std	Z+2, r26	; 0x02
    341c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    341e:	fe 01       	movw	r30, r28
    3420:	e5 53       	subi	r30, 0x35	; 53
    3422:	ff 4f       	sbci	r31, 0xFF	; 255
    3424:	60 81       	ld	r22, Z
    3426:	71 81       	ldd	r23, Z+1	; 0x01
    3428:	82 81       	ldd	r24, Z+2	; 0x02
    342a:	93 81       	ldd	r25, Z+3	; 0x03
    342c:	20 e0       	ldi	r18, 0x00	; 0
    342e:	30 e0       	ldi	r19, 0x00	; 0
    3430:	40 e8       	ldi	r20, 0x80	; 128
    3432:	5f e3       	ldi	r21, 0x3F	; 63
    3434:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3438:	88 23       	and	r24, r24
    343a:	44 f4       	brge	.+16     	; 0x344c <main+0x1c4e>
		__ticks = 1;
    343c:	fe 01       	movw	r30, r28
    343e:	e7 53       	subi	r30, 0x37	; 55
    3440:	ff 4f       	sbci	r31, 0xFF	; 255
    3442:	81 e0       	ldi	r24, 0x01	; 1
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	91 83       	std	Z+1, r25	; 0x01
    3448:	80 83       	st	Z, r24
    344a:	64 c0       	rjmp	.+200    	; 0x3514 <main+0x1d16>
	else if (__tmp > 65535)
    344c:	fe 01       	movw	r30, r28
    344e:	e5 53       	subi	r30, 0x35	; 53
    3450:	ff 4f       	sbci	r31, 0xFF	; 255
    3452:	60 81       	ld	r22, Z
    3454:	71 81       	ldd	r23, Z+1	; 0x01
    3456:	82 81       	ldd	r24, Z+2	; 0x02
    3458:	93 81       	ldd	r25, Z+3	; 0x03
    345a:	20 e0       	ldi	r18, 0x00	; 0
    345c:	3f ef       	ldi	r19, 0xFF	; 255
    345e:	4f e7       	ldi	r20, 0x7F	; 127
    3460:	57 e4       	ldi	r21, 0x47	; 71
    3462:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3466:	18 16       	cp	r1, r24
    3468:	0c f0       	brlt	.+2      	; 0x346c <main+0x1c6e>
    346a:	43 c0       	rjmp	.+134    	; 0x34f2 <main+0x1cf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    346c:	fe 01       	movw	r30, r28
    346e:	e1 53       	subi	r30, 0x31	; 49
    3470:	ff 4f       	sbci	r31, 0xFF	; 255
    3472:	60 81       	ld	r22, Z
    3474:	71 81       	ldd	r23, Z+1	; 0x01
    3476:	82 81       	ldd	r24, Z+2	; 0x02
    3478:	93 81       	ldd	r25, Z+3	; 0x03
    347a:	20 e0       	ldi	r18, 0x00	; 0
    347c:	30 e0       	ldi	r19, 0x00	; 0
    347e:	40 e2       	ldi	r20, 0x20	; 32
    3480:	51 e4       	ldi	r21, 0x41	; 65
    3482:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3486:	dc 01       	movw	r26, r24
    3488:	cb 01       	movw	r24, r22
    348a:	8e 01       	movw	r16, r28
    348c:	07 53       	subi	r16, 0x37	; 55
    348e:	1f 4f       	sbci	r17, 0xFF	; 255
    3490:	bc 01       	movw	r22, r24
    3492:	cd 01       	movw	r24, r26
    3494:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3498:	dc 01       	movw	r26, r24
    349a:	cb 01       	movw	r24, r22
    349c:	f8 01       	movw	r30, r16
    349e:	91 83       	std	Z+1, r25	; 0x01
    34a0:	80 83       	st	Z, r24
    34a2:	1f c0       	rjmp	.+62     	; 0x34e2 <main+0x1ce4>
    34a4:	fe 01       	movw	r30, r28
    34a6:	e9 53       	subi	r30, 0x39	; 57
    34a8:	ff 4f       	sbci	r31, 0xFF	; 255
    34aa:	88 ec       	ldi	r24, 0xC8	; 200
    34ac:	90 e0       	ldi	r25, 0x00	; 0
    34ae:	91 83       	std	Z+1, r25	; 0x01
    34b0:	80 83       	st	Z, r24
    34b2:	fe 01       	movw	r30, r28
    34b4:	e9 53       	subi	r30, 0x39	; 57
    34b6:	ff 4f       	sbci	r31, 0xFF	; 255
    34b8:	80 81       	ld	r24, Z
    34ba:	91 81       	ldd	r25, Z+1	; 0x01
    34bc:	01 97       	sbiw	r24, 0x01	; 1
    34be:	f1 f7       	brne	.-4      	; 0x34bc <main+0x1cbe>
    34c0:	fe 01       	movw	r30, r28
    34c2:	e9 53       	subi	r30, 0x39	; 57
    34c4:	ff 4f       	sbci	r31, 0xFF	; 255
    34c6:	91 83       	std	Z+1, r25	; 0x01
    34c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34ca:	de 01       	movw	r26, r28
    34cc:	a7 53       	subi	r26, 0x37	; 55
    34ce:	bf 4f       	sbci	r27, 0xFF	; 255
    34d0:	fe 01       	movw	r30, r28
    34d2:	e7 53       	subi	r30, 0x37	; 55
    34d4:	ff 4f       	sbci	r31, 0xFF	; 255
    34d6:	80 81       	ld	r24, Z
    34d8:	91 81       	ldd	r25, Z+1	; 0x01
    34da:	01 97       	sbiw	r24, 0x01	; 1
    34dc:	11 96       	adiw	r26, 0x01	; 1
    34de:	9c 93       	st	X, r25
    34e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34e2:	fe 01       	movw	r30, r28
    34e4:	e7 53       	subi	r30, 0x37	; 55
    34e6:	ff 4f       	sbci	r31, 0xFF	; 255
    34e8:	80 81       	ld	r24, Z
    34ea:	91 81       	ldd	r25, Z+1	; 0x01
    34ec:	00 97       	sbiw	r24, 0x00	; 0
    34ee:	d1 f6       	brne	.-76     	; 0x34a4 <main+0x1ca6>
    34f0:	27 c0       	rjmp	.+78     	; 0x3540 <main+0x1d42>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34f2:	8e 01       	movw	r16, r28
    34f4:	07 53       	subi	r16, 0x37	; 55
    34f6:	1f 4f       	sbci	r17, 0xFF	; 255
    34f8:	fe 01       	movw	r30, r28
    34fa:	e5 53       	subi	r30, 0x35	; 53
    34fc:	ff 4f       	sbci	r31, 0xFF	; 255
    34fe:	60 81       	ld	r22, Z
    3500:	71 81       	ldd	r23, Z+1	; 0x01
    3502:	82 81       	ldd	r24, Z+2	; 0x02
    3504:	93 81       	ldd	r25, Z+3	; 0x03
    3506:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    350a:	dc 01       	movw	r26, r24
    350c:	cb 01       	movw	r24, r22
    350e:	f8 01       	movw	r30, r16
    3510:	91 83       	std	Z+1, r25	; 0x01
    3512:	80 83       	st	Z, r24
    3514:	de 01       	movw	r26, r28
    3516:	ab 53       	subi	r26, 0x3B	; 59
    3518:	bf 4f       	sbci	r27, 0xFF	; 255
    351a:	fe 01       	movw	r30, r28
    351c:	e7 53       	subi	r30, 0x37	; 55
    351e:	ff 4f       	sbci	r31, 0xFF	; 255
    3520:	80 81       	ld	r24, Z
    3522:	91 81       	ldd	r25, Z+1	; 0x01
    3524:	8d 93       	st	X+, r24
    3526:	9c 93       	st	X, r25
    3528:	fe 01       	movw	r30, r28
    352a:	eb 53       	subi	r30, 0x3B	; 59
    352c:	ff 4f       	sbci	r31, 0xFF	; 255
    352e:	80 81       	ld	r24, Z
    3530:	91 81       	ldd	r25, Z+1	; 0x01
    3532:	01 97       	sbiw	r24, 0x01	; 1
    3534:	f1 f7       	brne	.-4      	; 0x3532 <main+0x1d34>
    3536:	fe 01       	movw	r30, r28
    3538:	eb 53       	subi	r30, 0x3B	; 59
    353a:	ff 4f       	sbci	r31, 0xFF	; 255
    353c:	91 83       	std	Z+1, r25	; 0x01
    353e:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    3540:	81 e0       	ldi	r24, 0x01	; 1
    3542:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,6);
    3546:	ce 01       	movw	r24, r28
    3548:	87 5f       	subi	r24, 0xF7	; 247
    354a:	9d 4f       	sbci	r25, 0xFD	; 253
    354c:	60 e0       	ldi	r22, 0x00	; 0
    354e:	41 e0       	ldi	r20, 0x01	; 1
    3550:	26 e0       	ldi	r18, 0x06	; 6
    3552:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,9);
    3556:	ce 01       	movw	r24, r28
    3558:	8f 5e       	subi	r24, 0xEF	; 239
    355a:	9d 4f       	sbci	r25, 0xFD	; 253
    355c:	61 e0       	ldi	r22, 0x01	; 1
    355e:	41 e0       	ldi	r20, 0x01	; 1
    3560:	29 e0       	ldi	r18, 0x09	; 9
    3562:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3566:	fe 01       	movw	r30, r28
    3568:	ef 53       	subi	r30, 0x3F	; 63
    356a:	ff 4f       	sbci	r31, 0xFF	; 255
    356c:	80 e0       	ldi	r24, 0x00	; 0
    356e:	90 e0       	ldi	r25, 0x00	; 0
    3570:	a0 e2       	ldi	r26, 0x20	; 32
    3572:	b1 e4       	ldi	r27, 0x41	; 65
    3574:	80 83       	st	Z, r24
    3576:	91 83       	std	Z+1, r25	; 0x01
    3578:	a2 83       	std	Z+2, r26	; 0x02
    357a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    357c:	8e 01       	movw	r16, r28
    357e:	03 54       	subi	r16, 0x43	; 67
    3580:	1f 4f       	sbci	r17, 0xFF	; 255
    3582:	fe 01       	movw	r30, r28
    3584:	ef 53       	subi	r30, 0x3F	; 63
    3586:	ff 4f       	sbci	r31, 0xFF	; 255
    3588:	60 81       	ld	r22, Z
    358a:	71 81       	ldd	r23, Z+1	; 0x01
    358c:	82 81       	ldd	r24, Z+2	; 0x02
    358e:	93 81       	ldd	r25, Z+3	; 0x03
    3590:	20 e0       	ldi	r18, 0x00	; 0
    3592:	30 e0       	ldi	r19, 0x00	; 0
    3594:	4a ef       	ldi	r20, 0xFA	; 250
    3596:	54 e4       	ldi	r21, 0x44	; 68
    3598:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    359c:	dc 01       	movw	r26, r24
    359e:	cb 01       	movw	r24, r22
    35a0:	f8 01       	movw	r30, r16
    35a2:	80 83       	st	Z, r24
    35a4:	91 83       	std	Z+1, r25	; 0x01
    35a6:	a2 83       	std	Z+2, r26	; 0x02
    35a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35aa:	fe 01       	movw	r30, r28
    35ac:	e3 54       	subi	r30, 0x43	; 67
    35ae:	ff 4f       	sbci	r31, 0xFF	; 255
    35b0:	60 81       	ld	r22, Z
    35b2:	71 81       	ldd	r23, Z+1	; 0x01
    35b4:	82 81       	ldd	r24, Z+2	; 0x02
    35b6:	93 81       	ldd	r25, Z+3	; 0x03
    35b8:	20 e0       	ldi	r18, 0x00	; 0
    35ba:	30 e0       	ldi	r19, 0x00	; 0
    35bc:	40 e8       	ldi	r20, 0x80	; 128
    35be:	5f e3       	ldi	r21, 0x3F	; 63
    35c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35c4:	88 23       	and	r24, r24
    35c6:	44 f4       	brge	.+16     	; 0x35d8 <main+0x1dda>
		__ticks = 1;
    35c8:	fe 01       	movw	r30, r28
    35ca:	e5 54       	subi	r30, 0x45	; 69
    35cc:	ff 4f       	sbci	r31, 0xFF	; 255
    35ce:	81 e0       	ldi	r24, 0x01	; 1
    35d0:	90 e0       	ldi	r25, 0x00	; 0
    35d2:	91 83       	std	Z+1, r25	; 0x01
    35d4:	80 83       	st	Z, r24
    35d6:	64 c0       	rjmp	.+200    	; 0x36a0 <main+0x1ea2>
	else if (__tmp > 65535)
    35d8:	fe 01       	movw	r30, r28
    35da:	e3 54       	subi	r30, 0x43	; 67
    35dc:	ff 4f       	sbci	r31, 0xFF	; 255
    35de:	60 81       	ld	r22, Z
    35e0:	71 81       	ldd	r23, Z+1	; 0x01
    35e2:	82 81       	ldd	r24, Z+2	; 0x02
    35e4:	93 81       	ldd	r25, Z+3	; 0x03
    35e6:	20 e0       	ldi	r18, 0x00	; 0
    35e8:	3f ef       	ldi	r19, 0xFF	; 255
    35ea:	4f e7       	ldi	r20, 0x7F	; 127
    35ec:	57 e4       	ldi	r21, 0x47	; 71
    35ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35f2:	18 16       	cp	r1, r24
    35f4:	0c f0       	brlt	.+2      	; 0x35f8 <main+0x1dfa>
    35f6:	43 c0       	rjmp	.+134    	; 0x367e <main+0x1e80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35f8:	fe 01       	movw	r30, r28
    35fa:	ef 53       	subi	r30, 0x3F	; 63
    35fc:	ff 4f       	sbci	r31, 0xFF	; 255
    35fe:	60 81       	ld	r22, Z
    3600:	71 81       	ldd	r23, Z+1	; 0x01
    3602:	82 81       	ldd	r24, Z+2	; 0x02
    3604:	93 81       	ldd	r25, Z+3	; 0x03
    3606:	20 e0       	ldi	r18, 0x00	; 0
    3608:	30 e0       	ldi	r19, 0x00	; 0
    360a:	40 e2       	ldi	r20, 0x20	; 32
    360c:	51 e4       	ldi	r21, 0x41	; 65
    360e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3612:	dc 01       	movw	r26, r24
    3614:	cb 01       	movw	r24, r22
    3616:	8e 01       	movw	r16, r28
    3618:	05 54       	subi	r16, 0x45	; 69
    361a:	1f 4f       	sbci	r17, 0xFF	; 255
    361c:	bc 01       	movw	r22, r24
    361e:	cd 01       	movw	r24, r26
    3620:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3624:	dc 01       	movw	r26, r24
    3626:	cb 01       	movw	r24, r22
    3628:	f8 01       	movw	r30, r16
    362a:	91 83       	std	Z+1, r25	; 0x01
    362c:	80 83       	st	Z, r24
    362e:	1f c0       	rjmp	.+62     	; 0x366e <main+0x1e70>
    3630:	fe 01       	movw	r30, r28
    3632:	e7 54       	subi	r30, 0x47	; 71
    3634:	ff 4f       	sbci	r31, 0xFF	; 255
    3636:	88 ec       	ldi	r24, 0xC8	; 200
    3638:	90 e0       	ldi	r25, 0x00	; 0
    363a:	91 83       	std	Z+1, r25	; 0x01
    363c:	80 83       	st	Z, r24
    363e:	fe 01       	movw	r30, r28
    3640:	e7 54       	subi	r30, 0x47	; 71
    3642:	ff 4f       	sbci	r31, 0xFF	; 255
    3644:	80 81       	ld	r24, Z
    3646:	91 81       	ldd	r25, Z+1	; 0x01
    3648:	01 97       	sbiw	r24, 0x01	; 1
    364a:	f1 f7       	brne	.-4      	; 0x3648 <main+0x1e4a>
    364c:	fe 01       	movw	r30, r28
    364e:	e7 54       	subi	r30, 0x47	; 71
    3650:	ff 4f       	sbci	r31, 0xFF	; 255
    3652:	91 83       	std	Z+1, r25	; 0x01
    3654:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3656:	de 01       	movw	r26, r28
    3658:	a5 54       	subi	r26, 0x45	; 69
    365a:	bf 4f       	sbci	r27, 0xFF	; 255
    365c:	fe 01       	movw	r30, r28
    365e:	e5 54       	subi	r30, 0x45	; 69
    3660:	ff 4f       	sbci	r31, 0xFF	; 255
    3662:	80 81       	ld	r24, Z
    3664:	91 81       	ldd	r25, Z+1	; 0x01
    3666:	01 97       	sbiw	r24, 0x01	; 1
    3668:	11 96       	adiw	r26, 0x01	; 1
    366a:	9c 93       	st	X, r25
    366c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    366e:	fe 01       	movw	r30, r28
    3670:	e5 54       	subi	r30, 0x45	; 69
    3672:	ff 4f       	sbci	r31, 0xFF	; 255
    3674:	80 81       	ld	r24, Z
    3676:	91 81       	ldd	r25, Z+1	; 0x01
    3678:	00 97       	sbiw	r24, 0x00	; 0
    367a:	d1 f6       	brne	.-76     	; 0x3630 <main+0x1e32>
    367c:	27 c0       	rjmp	.+78     	; 0x36cc <main+0x1ece>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    367e:	8e 01       	movw	r16, r28
    3680:	05 54       	subi	r16, 0x45	; 69
    3682:	1f 4f       	sbci	r17, 0xFF	; 255
    3684:	fe 01       	movw	r30, r28
    3686:	e3 54       	subi	r30, 0x43	; 67
    3688:	ff 4f       	sbci	r31, 0xFF	; 255
    368a:	60 81       	ld	r22, Z
    368c:	71 81       	ldd	r23, Z+1	; 0x01
    368e:	82 81       	ldd	r24, Z+2	; 0x02
    3690:	93 81       	ldd	r25, Z+3	; 0x03
    3692:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3696:	dc 01       	movw	r26, r24
    3698:	cb 01       	movw	r24, r22
    369a:	f8 01       	movw	r30, r16
    369c:	91 83       	std	Z+1, r25	; 0x01
    369e:	80 83       	st	Z, r24
    36a0:	de 01       	movw	r26, r28
    36a2:	a9 54       	subi	r26, 0x49	; 73
    36a4:	bf 4f       	sbci	r27, 0xFF	; 255
    36a6:	fe 01       	movw	r30, r28
    36a8:	e5 54       	subi	r30, 0x45	; 69
    36aa:	ff 4f       	sbci	r31, 0xFF	; 255
    36ac:	80 81       	ld	r24, Z
    36ae:	91 81       	ldd	r25, Z+1	; 0x01
    36b0:	8d 93       	st	X+, r24
    36b2:	9c 93       	st	X, r25
    36b4:	fe 01       	movw	r30, r28
    36b6:	e9 54       	subi	r30, 0x49	; 73
    36b8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ba:	80 81       	ld	r24, Z
    36bc:	91 81       	ldd	r25, Z+1	; 0x01
    36be:	01 97       	sbiw	r24, 0x01	; 1
    36c0:	f1 f7       	brne	.-4      	; 0x36be <main+0x1ec0>
    36c2:	fe 01       	movw	r30, r28
    36c4:	e9 54       	subi	r30, 0x49	; 73
    36c6:	ff 4f       	sbci	r31, 0xFF	; 255
    36c8:	91 83       	std	Z+1, r25	; 0x01
    36ca:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    36cc:	81 e0       	ldi	r24, 0x01	; 1
    36ce:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,7);
    36d2:	ce 01       	movw	r24, r28
    36d4:	8f 51       	subi	r24, 0x1F	; 31
    36d6:	9e 4f       	sbci	r25, 0xFE	; 254
    36d8:	60 e0       	ldi	r22, 0x00	; 0
    36da:	41 e0       	ldi	r20, 0x01	; 1
    36dc:	27 e0       	ldi	r18, 0x07	; 7
    36de:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,8);
    36e2:	ce 01       	movw	r24, r28
    36e4:	8f 5e       	subi	r24, 0xEF	; 239
    36e6:	9d 4f       	sbci	r25, 0xFD	; 253
    36e8:	61 e0       	ldi	r22, 0x01	; 1
    36ea:	41 e0       	ldi	r20, 0x01	; 1
    36ec:	28 e0       	ldi	r18, 0x08	; 8
    36ee:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    36f2:	fe 01       	movw	r30, r28
    36f4:	ed 54       	subi	r30, 0x4D	; 77
    36f6:	ff 4f       	sbci	r31, 0xFF	; 255
    36f8:	80 e0       	ldi	r24, 0x00	; 0
    36fa:	90 e0       	ldi	r25, 0x00	; 0
    36fc:	a0 e2       	ldi	r26, 0x20	; 32
    36fe:	b1 e4       	ldi	r27, 0x41	; 65
    3700:	80 83       	st	Z, r24
    3702:	91 83       	std	Z+1, r25	; 0x01
    3704:	a2 83       	std	Z+2, r26	; 0x02
    3706:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3708:	8e 01       	movw	r16, r28
    370a:	01 55       	subi	r16, 0x51	; 81
    370c:	1f 4f       	sbci	r17, 0xFF	; 255
    370e:	fe 01       	movw	r30, r28
    3710:	ed 54       	subi	r30, 0x4D	; 77
    3712:	ff 4f       	sbci	r31, 0xFF	; 255
    3714:	60 81       	ld	r22, Z
    3716:	71 81       	ldd	r23, Z+1	; 0x01
    3718:	82 81       	ldd	r24, Z+2	; 0x02
    371a:	93 81       	ldd	r25, Z+3	; 0x03
    371c:	20 e0       	ldi	r18, 0x00	; 0
    371e:	30 e0       	ldi	r19, 0x00	; 0
    3720:	4a ef       	ldi	r20, 0xFA	; 250
    3722:	54 e4       	ldi	r21, 0x44	; 68
    3724:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3728:	dc 01       	movw	r26, r24
    372a:	cb 01       	movw	r24, r22
    372c:	f8 01       	movw	r30, r16
    372e:	80 83       	st	Z, r24
    3730:	91 83       	std	Z+1, r25	; 0x01
    3732:	a2 83       	std	Z+2, r26	; 0x02
    3734:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3736:	fe 01       	movw	r30, r28
    3738:	e1 55       	subi	r30, 0x51	; 81
    373a:	ff 4f       	sbci	r31, 0xFF	; 255
    373c:	60 81       	ld	r22, Z
    373e:	71 81       	ldd	r23, Z+1	; 0x01
    3740:	82 81       	ldd	r24, Z+2	; 0x02
    3742:	93 81       	ldd	r25, Z+3	; 0x03
    3744:	20 e0       	ldi	r18, 0x00	; 0
    3746:	30 e0       	ldi	r19, 0x00	; 0
    3748:	40 e8       	ldi	r20, 0x80	; 128
    374a:	5f e3       	ldi	r21, 0x3F	; 63
    374c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3750:	88 23       	and	r24, r24
    3752:	44 f4       	brge	.+16     	; 0x3764 <main+0x1f66>
		__ticks = 1;
    3754:	fe 01       	movw	r30, r28
    3756:	e3 55       	subi	r30, 0x53	; 83
    3758:	ff 4f       	sbci	r31, 0xFF	; 255
    375a:	81 e0       	ldi	r24, 0x01	; 1
    375c:	90 e0       	ldi	r25, 0x00	; 0
    375e:	91 83       	std	Z+1, r25	; 0x01
    3760:	80 83       	st	Z, r24
    3762:	64 c0       	rjmp	.+200    	; 0x382c <main+0x202e>
	else if (__tmp > 65535)
    3764:	fe 01       	movw	r30, r28
    3766:	e1 55       	subi	r30, 0x51	; 81
    3768:	ff 4f       	sbci	r31, 0xFF	; 255
    376a:	60 81       	ld	r22, Z
    376c:	71 81       	ldd	r23, Z+1	; 0x01
    376e:	82 81       	ldd	r24, Z+2	; 0x02
    3770:	93 81       	ldd	r25, Z+3	; 0x03
    3772:	20 e0       	ldi	r18, 0x00	; 0
    3774:	3f ef       	ldi	r19, 0xFF	; 255
    3776:	4f e7       	ldi	r20, 0x7F	; 127
    3778:	57 e4       	ldi	r21, 0x47	; 71
    377a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    377e:	18 16       	cp	r1, r24
    3780:	0c f0       	brlt	.+2      	; 0x3784 <main+0x1f86>
    3782:	43 c0       	rjmp	.+134    	; 0x380a <main+0x200c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3784:	fe 01       	movw	r30, r28
    3786:	ed 54       	subi	r30, 0x4D	; 77
    3788:	ff 4f       	sbci	r31, 0xFF	; 255
    378a:	60 81       	ld	r22, Z
    378c:	71 81       	ldd	r23, Z+1	; 0x01
    378e:	82 81       	ldd	r24, Z+2	; 0x02
    3790:	93 81       	ldd	r25, Z+3	; 0x03
    3792:	20 e0       	ldi	r18, 0x00	; 0
    3794:	30 e0       	ldi	r19, 0x00	; 0
    3796:	40 e2       	ldi	r20, 0x20	; 32
    3798:	51 e4       	ldi	r21, 0x41	; 65
    379a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    379e:	dc 01       	movw	r26, r24
    37a0:	cb 01       	movw	r24, r22
    37a2:	8e 01       	movw	r16, r28
    37a4:	03 55       	subi	r16, 0x53	; 83
    37a6:	1f 4f       	sbci	r17, 0xFF	; 255
    37a8:	bc 01       	movw	r22, r24
    37aa:	cd 01       	movw	r24, r26
    37ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37b0:	dc 01       	movw	r26, r24
    37b2:	cb 01       	movw	r24, r22
    37b4:	f8 01       	movw	r30, r16
    37b6:	91 83       	std	Z+1, r25	; 0x01
    37b8:	80 83       	st	Z, r24
    37ba:	1f c0       	rjmp	.+62     	; 0x37fa <main+0x1ffc>
    37bc:	fe 01       	movw	r30, r28
    37be:	e5 55       	subi	r30, 0x55	; 85
    37c0:	ff 4f       	sbci	r31, 0xFF	; 255
    37c2:	88 ec       	ldi	r24, 0xC8	; 200
    37c4:	90 e0       	ldi	r25, 0x00	; 0
    37c6:	91 83       	std	Z+1, r25	; 0x01
    37c8:	80 83       	st	Z, r24
    37ca:	fe 01       	movw	r30, r28
    37cc:	e5 55       	subi	r30, 0x55	; 85
    37ce:	ff 4f       	sbci	r31, 0xFF	; 255
    37d0:	80 81       	ld	r24, Z
    37d2:	91 81       	ldd	r25, Z+1	; 0x01
    37d4:	01 97       	sbiw	r24, 0x01	; 1
    37d6:	f1 f7       	brne	.-4      	; 0x37d4 <main+0x1fd6>
    37d8:	fe 01       	movw	r30, r28
    37da:	e5 55       	subi	r30, 0x55	; 85
    37dc:	ff 4f       	sbci	r31, 0xFF	; 255
    37de:	91 83       	std	Z+1, r25	; 0x01
    37e0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37e2:	de 01       	movw	r26, r28
    37e4:	a3 55       	subi	r26, 0x53	; 83
    37e6:	bf 4f       	sbci	r27, 0xFF	; 255
    37e8:	fe 01       	movw	r30, r28
    37ea:	e3 55       	subi	r30, 0x53	; 83
    37ec:	ff 4f       	sbci	r31, 0xFF	; 255
    37ee:	80 81       	ld	r24, Z
    37f0:	91 81       	ldd	r25, Z+1	; 0x01
    37f2:	01 97       	sbiw	r24, 0x01	; 1
    37f4:	11 96       	adiw	r26, 0x01	; 1
    37f6:	9c 93       	st	X, r25
    37f8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37fa:	fe 01       	movw	r30, r28
    37fc:	e3 55       	subi	r30, 0x53	; 83
    37fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3800:	80 81       	ld	r24, Z
    3802:	91 81       	ldd	r25, Z+1	; 0x01
    3804:	00 97       	sbiw	r24, 0x00	; 0
    3806:	d1 f6       	brne	.-76     	; 0x37bc <main+0x1fbe>
    3808:	27 c0       	rjmp	.+78     	; 0x3858 <main+0x205a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    380a:	8e 01       	movw	r16, r28
    380c:	03 55       	subi	r16, 0x53	; 83
    380e:	1f 4f       	sbci	r17, 0xFF	; 255
    3810:	fe 01       	movw	r30, r28
    3812:	e1 55       	subi	r30, 0x51	; 81
    3814:	ff 4f       	sbci	r31, 0xFF	; 255
    3816:	60 81       	ld	r22, Z
    3818:	71 81       	ldd	r23, Z+1	; 0x01
    381a:	82 81       	ldd	r24, Z+2	; 0x02
    381c:	93 81       	ldd	r25, Z+3	; 0x03
    381e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3822:	dc 01       	movw	r26, r24
    3824:	cb 01       	movw	r24, r22
    3826:	f8 01       	movw	r30, r16
    3828:	91 83       	std	Z+1, r25	; 0x01
    382a:	80 83       	st	Z, r24
    382c:	de 01       	movw	r26, r28
    382e:	a7 55       	subi	r26, 0x57	; 87
    3830:	bf 4f       	sbci	r27, 0xFF	; 255
    3832:	fe 01       	movw	r30, r28
    3834:	e3 55       	subi	r30, 0x53	; 83
    3836:	ff 4f       	sbci	r31, 0xFF	; 255
    3838:	80 81       	ld	r24, Z
    383a:	91 81       	ldd	r25, Z+1	; 0x01
    383c:	8d 93       	st	X+, r24
    383e:	9c 93       	st	X, r25
    3840:	fe 01       	movw	r30, r28
    3842:	e7 55       	subi	r30, 0x57	; 87
    3844:	ff 4f       	sbci	r31, 0xFF	; 255
    3846:	80 81       	ld	r24, Z
    3848:	91 81       	ldd	r25, Z+1	; 0x01
    384a:	01 97       	sbiw	r24, 0x01	; 1
    384c:	f1 f7       	brne	.-4      	; 0x384a <main+0x204c>
    384e:	fe 01       	movw	r30, r28
    3850:	e7 55       	subi	r30, 0x57	; 87
    3852:	ff 4f       	sbci	r31, 0xFF	; 255
    3854:	91 83       	std	Z+1, r25	; 0x01
    3856:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    3858:	81 e0       	ldi	r24, 0x01	; 1
    385a:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,0,8);
    385e:	ce 01       	movw	r24, r28
    3860:	87 5f       	subi	r24, 0xF7	; 247
    3862:	9d 4f       	sbci	r25, 0xFD	; 253
    3864:	60 e0       	ldi	r22, 0x00	; 0
    3866:	40 e0       	ldi	r20, 0x00	; 0
    3868:	28 e0       	ldi	r18, 0x08	; 8
    386a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,8);
    386e:	ce 01       	movw	r24, r28
    3870:	8f 5e       	subi	r24, 0xEF	; 239
    3872:	9d 4f       	sbci	r25, 0xFD	; 253
    3874:	61 e0       	ldi	r22, 0x01	; 1
    3876:	41 e0       	ldi	r20, 0x01	; 1
    3878:	28 e0       	ldi	r18, 0x08	; 8
    387a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    387e:	fe 01       	movw	r30, r28
    3880:	eb 55       	subi	r30, 0x5B	; 91
    3882:	ff 4f       	sbci	r31, 0xFF	; 255
    3884:	80 e0       	ldi	r24, 0x00	; 0
    3886:	90 e0       	ldi	r25, 0x00	; 0
    3888:	a0 e2       	ldi	r26, 0x20	; 32
    388a:	b1 e4       	ldi	r27, 0x41	; 65
    388c:	80 83       	st	Z, r24
    388e:	91 83       	std	Z+1, r25	; 0x01
    3890:	a2 83       	std	Z+2, r26	; 0x02
    3892:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3894:	8e 01       	movw	r16, r28
    3896:	0f 55       	subi	r16, 0x5F	; 95
    3898:	1f 4f       	sbci	r17, 0xFF	; 255
    389a:	fe 01       	movw	r30, r28
    389c:	eb 55       	subi	r30, 0x5B	; 91
    389e:	ff 4f       	sbci	r31, 0xFF	; 255
    38a0:	60 81       	ld	r22, Z
    38a2:	71 81       	ldd	r23, Z+1	; 0x01
    38a4:	82 81       	ldd	r24, Z+2	; 0x02
    38a6:	93 81       	ldd	r25, Z+3	; 0x03
    38a8:	20 e0       	ldi	r18, 0x00	; 0
    38aa:	30 e0       	ldi	r19, 0x00	; 0
    38ac:	4a ef       	ldi	r20, 0xFA	; 250
    38ae:	54 e4       	ldi	r21, 0x44	; 68
    38b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38b4:	dc 01       	movw	r26, r24
    38b6:	cb 01       	movw	r24, r22
    38b8:	f8 01       	movw	r30, r16
    38ba:	80 83       	st	Z, r24
    38bc:	91 83       	std	Z+1, r25	; 0x01
    38be:	a2 83       	std	Z+2, r26	; 0x02
    38c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38c2:	fe 01       	movw	r30, r28
    38c4:	ef 55       	subi	r30, 0x5F	; 95
    38c6:	ff 4f       	sbci	r31, 0xFF	; 255
    38c8:	60 81       	ld	r22, Z
    38ca:	71 81       	ldd	r23, Z+1	; 0x01
    38cc:	82 81       	ldd	r24, Z+2	; 0x02
    38ce:	93 81       	ldd	r25, Z+3	; 0x03
    38d0:	20 e0       	ldi	r18, 0x00	; 0
    38d2:	30 e0       	ldi	r19, 0x00	; 0
    38d4:	40 e8       	ldi	r20, 0x80	; 128
    38d6:	5f e3       	ldi	r21, 0x3F	; 63
    38d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    38dc:	88 23       	and	r24, r24
    38de:	44 f4       	brge	.+16     	; 0x38f0 <main+0x20f2>
		__ticks = 1;
    38e0:	fe 01       	movw	r30, r28
    38e2:	e1 56       	subi	r30, 0x61	; 97
    38e4:	ff 4f       	sbci	r31, 0xFF	; 255
    38e6:	81 e0       	ldi	r24, 0x01	; 1
    38e8:	90 e0       	ldi	r25, 0x00	; 0
    38ea:	91 83       	std	Z+1, r25	; 0x01
    38ec:	80 83       	st	Z, r24
    38ee:	64 c0       	rjmp	.+200    	; 0x39b8 <main+0x21ba>
	else if (__tmp > 65535)
    38f0:	fe 01       	movw	r30, r28
    38f2:	ef 55       	subi	r30, 0x5F	; 95
    38f4:	ff 4f       	sbci	r31, 0xFF	; 255
    38f6:	60 81       	ld	r22, Z
    38f8:	71 81       	ldd	r23, Z+1	; 0x01
    38fa:	82 81       	ldd	r24, Z+2	; 0x02
    38fc:	93 81       	ldd	r25, Z+3	; 0x03
    38fe:	20 e0       	ldi	r18, 0x00	; 0
    3900:	3f ef       	ldi	r19, 0xFF	; 255
    3902:	4f e7       	ldi	r20, 0x7F	; 127
    3904:	57 e4       	ldi	r21, 0x47	; 71
    3906:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    390a:	18 16       	cp	r1, r24
    390c:	0c f0       	brlt	.+2      	; 0x3910 <main+0x2112>
    390e:	43 c0       	rjmp	.+134    	; 0x3996 <main+0x2198>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3910:	fe 01       	movw	r30, r28
    3912:	eb 55       	subi	r30, 0x5B	; 91
    3914:	ff 4f       	sbci	r31, 0xFF	; 255
    3916:	60 81       	ld	r22, Z
    3918:	71 81       	ldd	r23, Z+1	; 0x01
    391a:	82 81       	ldd	r24, Z+2	; 0x02
    391c:	93 81       	ldd	r25, Z+3	; 0x03
    391e:	20 e0       	ldi	r18, 0x00	; 0
    3920:	30 e0       	ldi	r19, 0x00	; 0
    3922:	40 e2       	ldi	r20, 0x20	; 32
    3924:	51 e4       	ldi	r21, 0x41	; 65
    3926:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    392a:	dc 01       	movw	r26, r24
    392c:	cb 01       	movw	r24, r22
    392e:	8e 01       	movw	r16, r28
    3930:	01 56       	subi	r16, 0x61	; 97
    3932:	1f 4f       	sbci	r17, 0xFF	; 255
    3934:	bc 01       	movw	r22, r24
    3936:	cd 01       	movw	r24, r26
    3938:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    393c:	dc 01       	movw	r26, r24
    393e:	cb 01       	movw	r24, r22
    3940:	f8 01       	movw	r30, r16
    3942:	91 83       	std	Z+1, r25	; 0x01
    3944:	80 83       	st	Z, r24
    3946:	1f c0       	rjmp	.+62     	; 0x3986 <main+0x2188>
    3948:	fe 01       	movw	r30, r28
    394a:	e3 56       	subi	r30, 0x63	; 99
    394c:	ff 4f       	sbci	r31, 0xFF	; 255
    394e:	88 ec       	ldi	r24, 0xC8	; 200
    3950:	90 e0       	ldi	r25, 0x00	; 0
    3952:	91 83       	std	Z+1, r25	; 0x01
    3954:	80 83       	st	Z, r24
    3956:	fe 01       	movw	r30, r28
    3958:	e3 56       	subi	r30, 0x63	; 99
    395a:	ff 4f       	sbci	r31, 0xFF	; 255
    395c:	80 81       	ld	r24, Z
    395e:	91 81       	ldd	r25, Z+1	; 0x01
    3960:	01 97       	sbiw	r24, 0x01	; 1
    3962:	f1 f7       	brne	.-4      	; 0x3960 <main+0x2162>
    3964:	fe 01       	movw	r30, r28
    3966:	e3 56       	subi	r30, 0x63	; 99
    3968:	ff 4f       	sbci	r31, 0xFF	; 255
    396a:	91 83       	std	Z+1, r25	; 0x01
    396c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    396e:	de 01       	movw	r26, r28
    3970:	a1 56       	subi	r26, 0x61	; 97
    3972:	bf 4f       	sbci	r27, 0xFF	; 255
    3974:	fe 01       	movw	r30, r28
    3976:	e1 56       	subi	r30, 0x61	; 97
    3978:	ff 4f       	sbci	r31, 0xFF	; 255
    397a:	80 81       	ld	r24, Z
    397c:	91 81       	ldd	r25, Z+1	; 0x01
    397e:	01 97       	sbiw	r24, 0x01	; 1
    3980:	11 96       	adiw	r26, 0x01	; 1
    3982:	9c 93       	st	X, r25
    3984:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3986:	fe 01       	movw	r30, r28
    3988:	e1 56       	subi	r30, 0x61	; 97
    398a:	ff 4f       	sbci	r31, 0xFF	; 255
    398c:	80 81       	ld	r24, Z
    398e:	91 81       	ldd	r25, Z+1	; 0x01
    3990:	00 97       	sbiw	r24, 0x00	; 0
    3992:	d1 f6       	brne	.-76     	; 0x3948 <main+0x214a>
    3994:	27 c0       	rjmp	.+78     	; 0x39e4 <main+0x21e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3996:	8e 01       	movw	r16, r28
    3998:	01 56       	subi	r16, 0x61	; 97
    399a:	1f 4f       	sbci	r17, 0xFF	; 255
    399c:	fe 01       	movw	r30, r28
    399e:	ef 55       	subi	r30, 0x5F	; 95
    39a0:	ff 4f       	sbci	r31, 0xFF	; 255
    39a2:	60 81       	ld	r22, Z
    39a4:	71 81       	ldd	r23, Z+1	; 0x01
    39a6:	82 81       	ldd	r24, Z+2	; 0x02
    39a8:	93 81       	ldd	r25, Z+3	; 0x03
    39aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39ae:	dc 01       	movw	r26, r24
    39b0:	cb 01       	movw	r24, r22
    39b2:	f8 01       	movw	r30, r16
    39b4:	91 83       	std	Z+1, r25	; 0x01
    39b6:	80 83       	st	Z, r24
    39b8:	de 01       	movw	r26, r28
    39ba:	a5 56       	subi	r26, 0x65	; 101
    39bc:	bf 4f       	sbci	r27, 0xFF	; 255
    39be:	fe 01       	movw	r30, r28
    39c0:	e1 56       	subi	r30, 0x61	; 97
    39c2:	ff 4f       	sbci	r31, 0xFF	; 255
    39c4:	80 81       	ld	r24, Z
    39c6:	91 81       	ldd	r25, Z+1	; 0x01
    39c8:	8d 93       	st	X+, r24
    39ca:	9c 93       	st	X, r25
    39cc:	fe 01       	movw	r30, r28
    39ce:	e5 56       	subi	r30, 0x65	; 101
    39d0:	ff 4f       	sbci	r31, 0xFF	; 255
    39d2:	80 81       	ld	r24, Z
    39d4:	91 81       	ldd	r25, Z+1	; 0x01
    39d6:	01 97       	sbiw	r24, 0x01	; 1
    39d8:	f1 f7       	brne	.-4      	; 0x39d6 <main+0x21d8>
    39da:	fe 01       	movw	r30, r28
    39dc:	e5 56       	subi	r30, 0x65	; 101
    39de:	ff 4f       	sbci	r31, 0xFF	; 255
    39e0:	91 83       	std	Z+1, r25	; 0x01
    39e2:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    39e4:	81 e0       	ldi	r24, 0x01	; 1
    39e6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,9);
    39ea:	ce 01       	movw	r24, r28
    39ec:	8f 51       	subi	r24, 0x1F	; 31
    39ee:	9e 4f       	sbci	r25, 0xFE	; 254
    39f0:	60 e0       	ldi	r22, 0x00	; 0
    39f2:	41 e0       	ldi	r20, 0x01	; 1
    39f4:	29 e0       	ldi	r18, 0x09	; 9
    39f6:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,7);
    39fa:	ce 01       	movw	r24, r28
    39fc:	8f 5e       	subi	r24, 0xEF	; 239
    39fe:	9d 4f       	sbci	r25, 0xFD	; 253
    3a00:	61 e0       	ldi	r22, 0x01	; 1
    3a02:	41 e0       	ldi	r20, 0x01	; 1
    3a04:	27 e0       	ldi	r18, 0x07	; 7
    3a06:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3a0a:	fe 01       	movw	r30, r28
    3a0c:	e9 56       	subi	r30, 0x69	; 105
    3a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3a10:	80 e0       	ldi	r24, 0x00	; 0
    3a12:	90 e0       	ldi	r25, 0x00	; 0
    3a14:	a0 e2       	ldi	r26, 0x20	; 32
    3a16:	b1 e4       	ldi	r27, 0x41	; 65
    3a18:	80 83       	st	Z, r24
    3a1a:	91 83       	std	Z+1, r25	; 0x01
    3a1c:	a2 83       	std	Z+2, r26	; 0x02
    3a1e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a20:	8e 01       	movw	r16, r28
    3a22:	0d 56       	subi	r16, 0x6D	; 109
    3a24:	1f 4f       	sbci	r17, 0xFF	; 255
    3a26:	fe 01       	movw	r30, r28
    3a28:	e9 56       	subi	r30, 0x69	; 105
    3a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2c:	60 81       	ld	r22, Z
    3a2e:	71 81       	ldd	r23, Z+1	; 0x01
    3a30:	82 81       	ldd	r24, Z+2	; 0x02
    3a32:	93 81       	ldd	r25, Z+3	; 0x03
    3a34:	20 e0       	ldi	r18, 0x00	; 0
    3a36:	30 e0       	ldi	r19, 0x00	; 0
    3a38:	4a ef       	ldi	r20, 0xFA	; 250
    3a3a:	54 e4       	ldi	r21, 0x44	; 68
    3a3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a40:	dc 01       	movw	r26, r24
    3a42:	cb 01       	movw	r24, r22
    3a44:	f8 01       	movw	r30, r16
    3a46:	80 83       	st	Z, r24
    3a48:	91 83       	std	Z+1, r25	; 0x01
    3a4a:	a2 83       	std	Z+2, r26	; 0x02
    3a4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a4e:	fe 01       	movw	r30, r28
    3a50:	ed 56       	subi	r30, 0x6D	; 109
    3a52:	ff 4f       	sbci	r31, 0xFF	; 255
    3a54:	60 81       	ld	r22, Z
    3a56:	71 81       	ldd	r23, Z+1	; 0x01
    3a58:	82 81       	ldd	r24, Z+2	; 0x02
    3a5a:	93 81       	ldd	r25, Z+3	; 0x03
    3a5c:	20 e0       	ldi	r18, 0x00	; 0
    3a5e:	30 e0       	ldi	r19, 0x00	; 0
    3a60:	40 e8       	ldi	r20, 0x80	; 128
    3a62:	5f e3       	ldi	r21, 0x3F	; 63
    3a64:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a68:	88 23       	and	r24, r24
    3a6a:	44 f4       	brge	.+16     	; 0x3a7c <main+0x227e>
		__ticks = 1;
    3a6c:	fe 01       	movw	r30, r28
    3a6e:	ef 56       	subi	r30, 0x6F	; 111
    3a70:	ff 4f       	sbci	r31, 0xFF	; 255
    3a72:	81 e0       	ldi	r24, 0x01	; 1
    3a74:	90 e0       	ldi	r25, 0x00	; 0
    3a76:	91 83       	std	Z+1, r25	; 0x01
    3a78:	80 83       	st	Z, r24
    3a7a:	64 c0       	rjmp	.+200    	; 0x3b44 <main+0x2346>
	else if (__tmp > 65535)
    3a7c:	fe 01       	movw	r30, r28
    3a7e:	ed 56       	subi	r30, 0x6D	; 109
    3a80:	ff 4f       	sbci	r31, 0xFF	; 255
    3a82:	60 81       	ld	r22, Z
    3a84:	71 81       	ldd	r23, Z+1	; 0x01
    3a86:	82 81       	ldd	r24, Z+2	; 0x02
    3a88:	93 81       	ldd	r25, Z+3	; 0x03
    3a8a:	20 e0       	ldi	r18, 0x00	; 0
    3a8c:	3f ef       	ldi	r19, 0xFF	; 255
    3a8e:	4f e7       	ldi	r20, 0x7F	; 127
    3a90:	57 e4       	ldi	r21, 0x47	; 71
    3a92:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a96:	18 16       	cp	r1, r24
    3a98:	0c f0       	brlt	.+2      	; 0x3a9c <main+0x229e>
    3a9a:	43 c0       	rjmp	.+134    	; 0x3b22 <main+0x2324>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a9c:	fe 01       	movw	r30, r28
    3a9e:	e9 56       	subi	r30, 0x69	; 105
    3aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    3aa2:	60 81       	ld	r22, Z
    3aa4:	71 81       	ldd	r23, Z+1	; 0x01
    3aa6:	82 81       	ldd	r24, Z+2	; 0x02
    3aa8:	93 81       	ldd	r25, Z+3	; 0x03
    3aaa:	20 e0       	ldi	r18, 0x00	; 0
    3aac:	30 e0       	ldi	r19, 0x00	; 0
    3aae:	40 e2       	ldi	r20, 0x20	; 32
    3ab0:	51 e4       	ldi	r21, 0x41	; 65
    3ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ab6:	dc 01       	movw	r26, r24
    3ab8:	cb 01       	movw	r24, r22
    3aba:	8e 01       	movw	r16, r28
    3abc:	0f 56       	subi	r16, 0x6F	; 111
    3abe:	1f 4f       	sbci	r17, 0xFF	; 255
    3ac0:	bc 01       	movw	r22, r24
    3ac2:	cd 01       	movw	r24, r26
    3ac4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ac8:	dc 01       	movw	r26, r24
    3aca:	cb 01       	movw	r24, r22
    3acc:	f8 01       	movw	r30, r16
    3ace:	91 83       	std	Z+1, r25	; 0x01
    3ad0:	80 83       	st	Z, r24
    3ad2:	1f c0       	rjmp	.+62     	; 0x3b12 <main+0x2314>
    3ad4:	fe 01       	movw	r30, r28
    3ad6:	e1 57       	subi	r30, 0x71	; 113
    3ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    3ada:	88 ec       	ldi	r24, 0xC8	; 200
    3adc:	90 e0       	ldi	r25, 0x00	; 0
    3ade:	91 83       	std	Z+1, r25	; 0x01
    3ae0:	80 83       	st	Z, r24
    3ae2:	fe 01       	movw	r30, r28
    3ae4:	e1 57       	subi	r30, 0x71	; 113
    3ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae8:	80 81       	ld	r24, Z
    3aea:	91 81       	ldd	r25, Z+1	; 0x01
    3aec:	01 97       	sbiw	r24, 0x01	; 1
    3aee:	f1 f7       	brne	.-4      	; 0x3aec <main+0x22ee>
    3af0:	fe 01       	movw	r30, r28
    3af2:	e1 57       	subi	r30, 0x71	; 113
    3af4:	ff 4f       	sbci	r31, 0xFF	; 255
    3af6:	91 83       	std	Z+1, r25	; 0x01
    3af8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3afa:	de 01       	movw	r26, r28
    3afc:	af 56       	subi	r26, 0x6F	; 111
    3afe:	bf 4f       	sbci	r27, 0xFF	; 255
    3b00:	fe 01       	movw	r30, r28
    3b02:	ef 56       	subi	r30, 0x6F	; 111
    3b04:	ff 4f       	sbci	r31, 0xFF	; 255
    3b06:	80 81       	ld	r24, Z
    3b08:	91 81       	ldd	r25, Z+1	; 0x01
    3b0a:	01 97       	sbiw	r24, 0x01	; 1
    3b0c:	11 96       	adiw	r26, 0x01	; 1
    3b0e:	9c 93       	st	X, r25
    3b10:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b12:	fe 01       	movw	r30, r28
    3b14:	ef 56       	subi	r30, 0x6F	; 111
    3b16:	ff 4f       	sbci	r31, 0xFF	; 255
    3b18:	80 81       	ld	r24, Z
    3b1a:	91 81       	ldd	r25, Z+1	; 0x01
    3b1c:	00 97       	sbiw	r24, 0x00	; 0
    3b1e:	d1 f6       	brne	.-76     	; 0x3ad4 <main+0x22d6>
    3b20:	27 c0       	rjmp	.+78     	; 0x3b70 <main+0x2372>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b22:	8e 01       	movw	r16, r28
    3b24:	0f 56       	subi	r16, 0x6F	; 111
    3b26:	1f 4f       	sbci	r17, 0xFF	; 255
    3b28:	fe 01       	movw	r30, r28
    3b2a:	ed 56       	subi	r30, 0x6D	; 109
    3b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b2e:	60 81       	ld	r22, Z
    3b30:	71 81       	ldd	r23, Z+1	; 0x01
    3b32:	82 81       	ldd	r24, Z+2	; 0x02
    3b34:	93 81       	ldd	r25, Z+3	; 0x03
    3b36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b3a:	dc 01       	movw	r26, r24
    3b3c:	cb 01       	movw	r24, r22
    3b3e:	f8 01       	movw	r30, r16
    3b40:	91 83       	std	Z+1, r25	; 0x01
    3b42:	80 83       	st	Z, r24
    3b44:	de 01       	movw	r26, r28
    3b46:	a3 57       	subi	r26, 0x73	; 115
    3b48:	bf 4f       	sbci	r27, 0xFF	; 255
    3b4a:	fe 01       	movw	r30, r28
    3b4c:	ef 56       	subi	r30, 0x6F	; 111
    3b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b50:	80 81       	ld	r24, Z
    3b52:	91 81       	ldd	r25, Z+1	; 0x01
    3b54:	8d 93       	st	X+, r24
    3b56:	9c 93       	st	X, r25
    3b58:	fe 01       	movw	r30, r28
    3b5a:	e3 57       	subi	r30, 0x73	; 115
    3b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b5e:	80 81       	ld	r24, Z
    3b60:	91 81       	ldd	r25, Z+1	; 0x01
    3b62:	01 97       	sbiw	r24, 0x01	; 1
    3b64:	f1 f7       	brne	.-4      	; 0x3b62 <main+0x2364>
    3b66:	fe 01       	movw	r30, r28
    3b68:	e3 57       	subi	r30, 0x73	; 115
    3b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6c:	91 83       	std	Z+1, r25	; 0x01
    3b6e:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    3b70:	81 e0       	ldi	r24, 0x01	; 1
    3b72:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,10);
    3b76:	ce 01       	movw	r24, r28
    3b78:	87 5f       	subi	r24, 0xF7	; 247
    3b7a:	9d 4f       	sbci	r25, 0xFD	; 253
    3b7c:	60 e0       	ldi	r22, 0x00	; 0
    3b7e:	41 e0       	ldi	r20, 0x01	; 1
    3b80:	2a e0       	ldi	r18, 0x0A	; 10
    3b82:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,6);
    3b86:	ce 01       	movw	r24, r28
    3b88:	8f 5e       	subi	r24, 0xEF	; 239
    3b8a:	9d 4f       	sbci	r25, 0xFD	; 253
    3b8c:	61 e0       	ldi	r22, 0x01	; 1
    3b8e:	41 e0       	ldi	r20, 0x01	; 1
    3b90:	26 e0       	ldi	r18, 0x06	; 6
    3b92:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3b96:	fe 01       	movw	r30, r28
    3b98:	e7 57       	subi	r30, 0x77	; 119
    3b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9c:	80 e0       	ldi	r24, 0x00	; 0
    3b9e:	90 e0       	ldi	r25, 0x00	; 0
    3ba0:	a0 e2       	ldi	r26, 0x20	; 32
    3ba2:	b1 e4       	ldi	r27, 0x41	; 65
    3ba4:	80 83       	st	Z, r24
    3ba6:	91 83       	std	Z+1, r25	; 0x01
    3ba8:	a2 83       	std	Z+2, r26	; 0x02
    3baa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bac:	8e 01       	movw	r16, r28
    3bae:	0b 57       	subi	r16, 0x7B	; 123
    3bb0:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb2:	fe 01       	movw	r30, r28
    3bb4:	e7 57       	subi	r30, 0x77	; 119
    3bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb8:	60 81       	ld	r22, Z
    3bba:	71 81       	ldd	r23, Z+1	; 0x01
    3bbc:	82 81       	ldd	r24, Z+2	; 0x02
    3bbe:	93 81       	ldd	r25, Z+3	; 0x03
    3bc0:	20 e0       	ldi	r18, 0x00	; 0
    3bc2:	30 e0       	ldi	r19, 0x00	; 0
    3bc4:	4a ef       	ldi	r20, 0xFA	; 250
    3bc6:	54 e4       	ldi	r21, 0x44	; 68
    3bc8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bcc:	dc 01       	movw	r26, r24
    3bce:	cb 01       	movw	r24, r22
    3bd0:	f8 01       	movw	r30, r16
    3bd2:	80 83       	st	Z, r24
    3bd4:	91 83       	std	Z+1, r25	; 0x01
    3bd6:	a2 83       	std	Z+2, r26	; 0x02
    3bd8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3bda:	fe 01       	movw	r30, r28
    3bdc:	eb 57       	subi	r30, 0x7B	; 123
    3bde:	ff 4f       	sbci	r31, 0xFF	; 255
    3be0:	60 81       	ld	r22, Z
    3be2:	71 81       	ldd	r23, Z+1	; 0x01
    3be4:	82 81       	ldd	r24, Z+2	; 0x02
    3be6:	93 81       	ldd	r25, Z+3	; 0x03
    3be8:	20 e0       	ldi	r18, 0x00	; 0
    3bea:	30 e0       	ldi	r19, 0x00	; 0
    3bec:	40 e8       	ldi	r20, 0x80	; 128
    3bee:	5f e3       	ldi	r21, 0x3F	; 63
    3bf0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3bf4:	88 23       	and	r24, r24
    3bf6:	44 f4       	brge	.+16     	; 0x3c08 <main+0x240a>
		__ticks = 1;
    3bf8:	fe 01       	movw	r30, r28
    3bfa:	ed 57       	subi	r30, 0x7D	; 125
    3bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfe:	81 e0       	ldi	r24, 0x01	; 1
    3c00:	90 e0       	ldi	r25, 0x00	; 0
    3c02:	91 83       	std	Z+1, r25	; 0x01
    3c04:	80 83       	st	Z, r24
    3c06:	64 c0       	rjmp	.+200    	; 0x3cd0 <main+0x24d2>
	else if (__tmp > 65535)
    3c08:	fe 01       	movw	r30, r28
    3c0a:	eb 57       	subi	r30, 0x7B	; 123
    3c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0e:	60 81       	ld	r22, Z
    3c10:	71 81       	ldd	r23, Z+1	; 0x01
    3c12:	82 81       	ldd	r24, Z+2	; 0x02
    3c14:	93 81       	ldd	r25, Z+3	; 0x03
    3c16:	20 e0       	ldi	r18, 0x00	; 0
    3c18:	3f ef       	ldi	r19, 0xFF	; 255
    3c1a:	4f e7       	ldi	r20, 0x7F	; 127
    3c1c:	57 e4       	ldi	r21, 0x47	; 71
    3c1e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c22:	18 16       	cp	r1, r24
    3c24:	0c f0       	brlt	.+2      	; 0x3c28 <main+0x242a>
    3c26:	43 c0       	rjmp	.+134    	; 0x3cae <main+0x24b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c28:	fe 01       	movw	r30, r28
    3c2a:	e7 57       	subi	r30, 0x77	; 119
    3c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c2e:	60 81       	ld	r22, Z
    3c30:	71 81       	ldd	r23, Z+1	; 0x01
    3c32:	82 81       	ldd	r24, Z+2	; 0x02
    3c34:	93 81       	ldd	r25, Z+3	; 0x03
    3c36:	20 e0       	ldi	r18, 0x00	; 0
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	40 e2       	ldi	r20, 0x20	; 32
    3c3c:	51 e4       	ldi	r21, 0x41	; 65
    3c3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c42:	dc 01       	movw	r26, r24
    3c44:	cb 01       	movw	r24, r22
    3c46:	8e 01       	movw	r16, r28
    3c48:	0d 57       	subi	r16, 0x7D	; 125
    3c4a:	1f 4f       	sbci	r17, 0xFF	; 255
    3c4c:	bc 01       	movw	r22, r24
    3c4e:	cd 01       	movw	r24, r26
    3c50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c54:	dc 01       	movw	r26, r24
    3c56:	cb 01       	movw	r24, r22
    3c58:	f8 01       	movw	r30, r16
    3c5a:	91 83       	std	Z+1, r25	; 0x01
    3c5c:	80 83       	st	Z, r24
    3c5e:	1f c0       	rjmp	.+62     	; 0x3c9e <main+0x24a0>
    3c60:	fe 01       	movw	r30, r28
    3c62:	ef 57       	subi	r30, 0x7F	; 127
    3c64:	ff 4f       	sbci	r31, 0xFF	; 255
    3c66:	88 ec       	ldi	r24, 0xC8	; 200
    3c68:	90 e0       	ldi	r25, 0x00	; 0
    3c6a:	91 83       	std	Z+1, r25	; 0x01
    3c6c:	80 83       	st	Z, r24
    3c6e:	fe 01       	movw	r30, r28
    3c70:	ef 57       	subi	r30, 0x7F	; 127
    3c72:	ff 4f       	sbci	r31, 0xFF	; 255
    3c74:	80 81       	ld	r24, Z
    3c76:	91 81       	ldd	r25, Z+1	; 0x01
    3c78:	01 97       	sbiw	r24, 0x01	; 1
    3c7a:	f1 f7       	brne	.-4      	; 0x3c78 <main+0x247a>
    3c7c:	fe 01       	movw	r30, r28
    3c7e:	ef 57       	subi	r30, 0x7F	; 127
    3c80:	ff 4f       	sbci	r31, 0xFF	; 255
    3c82:	91 83       	std	Z+1, r25	; 0x01
    3c84:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c86:	de 01       	movw	r26, r28
    3c88:	ad 57       	subi	r26, 0x7D	; 125
    3c8a:	bf 4f       	sbci	r27, 0xFF	; 255
    3c8c:	fe 01       	movw	r30, r28
    3c8e:	ed 57       	subi	r30, 0x7D	; 125
    3c90:	ff 4f       	sbci	r31, 0xFF	; 255
    3c92:	80 81       	ld	r24, Z
    3c94:	91 81       	ldd	r25, Z+1	; 0x01
    3c96:	01 97       	sbiw	r24, 0x01	; 1
    3c98:	11 96       	adiw	r26, 0x01	; 1
    3c9a:	9c 93       	st	X, r25
    3c9c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c9e:	fe 01       	movw	r30, r28
    3ca0:	ed 57       	subi	r30, 0x7D	; 125
    3ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca4:	80 81       	ld	r24, Z
    3ca6:	91 81       	ldd	r25, Z+1	; 0x01
    3ca8:	00 97       	sbiw	r24, 0x00	; 0
    3caa:	d1 f6       	brne	.-76     	; 0x3c60 <main+0x2462>
    3cac:	27 c0       	rjmp	.+78     	; 0x3cfc <main+0x24fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cae:	8e 01       	movw	r16, r28
    3cb0:	0d 57       	subi	r16, 0x7D	; 125
    3cb2:	1f 4f       	sbci	r17, 0xFF	; 255
    3cb4:	fe 01       	movw	r30, r28
    3cb6:	eb 57       	subi	r30, 0x7B	; 123
    3cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cba:	60 81       	ld	r22, Z
    3cbc:	71 81       	ldd	r23, Z+1	; 0x01
    3cbe:	82 81       	ldd	r24, Z+2	; 0x02
    3cc0:	93 81       	ldd	r25, Z+3	; 0x03
    3cc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cc6:	dc 01       	movw	r26, r24
    3cc8:	cb 01       	movw	r24, r22
    3cca:	f8 01       	movw	r30, r16
    3ccc:	91 83       	std	Z+1, r25	; 0x01
    3cce:	80 83       	st	Z, r24
    3cd0:	de 01       	movw	r26, r28
    3cd2:	a1 58       	subi	r26, 0x81	; 129
    3cd4:	bf 4f       	sbci	r27, 0xFF	; 255
    3cd6:	fe 01       	movw	r30, r28
    3cd8:	ed 57       	subi	r30, 0x7D	; 125
    3cda:	ff 4f       	sbci	r31, 0xFF	; 255
    3cdc:	80 81       	ld	r24, Z
    3cde:	91 81       	ldd	r25, Z+1	; 0x01
    3ce0:	8d 93       	st	X+, r24
    3ce2:	9c 93       	st	X, r25
    3ce4:	fe 01       	movw	r30, r28
    3ce6:	e1 58       	subi	r30, 0x81	; 129
    3ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cea:	80 81       	ld	r24, Z
    3cec:	91 81       	ldd	r25, Z+1	; 0x01
    3cee:	01 97       	sbiw	r24, 0x01	; 1
    3cf0:	f1 f7       	brne	.-4      	; 0x3cee <main+0x24f0>
    3cf2:	fe 01       	movw	r30, r28
    3cf4:	e1 58       	subi	r30, 0x81	; 129
    3cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf8:	91 83       	std	Z+1, r25	; 0x01
    3cfa:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    3cfc:	81 e0       	ldi	r24, 0x01	; 1
    3cfe:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,11);
    3d02:	ce 01       	movw	r24, r28
    3d04:	8f 51       	subi	r24, 0x1F	; 31
    3d06:	9e 4f       	sbci	r25, 0xFE	; 254
    3d08:	60 e0       	ldi	r22, 0x00	; 0
    3d0a:	41 e0       	ldi	r20, 0x01	; 1
    3d0c:	2b e0       	ldi	r18, 0x0B	; 11
    3d0e:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,5);
    3d12:	ce 01       	movw	r24, r28
    3d14:	8f 5e       	subi	r24, 0xEF	; 239
    3d16:	9d 4f       	sbci	r25, 0xFD	; 253
    3d18:	61 e0       	ldi	r22, 0x01	; 1
    3d1a:	41 e0       	ldi	r20, 0x01	; 1
    3d1c:	25 e0       	ldi	r18, 0x05	; 5
    3d1e:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3d22:	fe 01       	movw	r30, r28
    3d24:	e5 58       	subi	r30, 0x85	; 133
    3d26:	ff 4f       	sbci	r31, 0xFF	; 255
    3d28:	80 e0       	ldi	r24, 0x00	; 0
    3d2a:	90 e0       	ldi	r25, 0x00	; 0
    3d2c:	a0 e2       	ldi	r26, 0x20	; 32
    3d2e:	b1 e4       	ldi	r27, 0x41	; 65
    3d30:	80 83       	st	Z, r24
    3d32:	91 83       	std	Z+1, r25	; 0x01
    3d34:	a2 83       	std	Z+2, r26	; 0x02
    3d36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d38:	8e 01       	movw	r16, r28
    3d3a:	09 58       	subi	r16, 0x89	; 137
    3d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    3d3e:	fe 01       	movw	r30, r28
    3d40:	e5 58       	subi	r30, 0x85	; 133
    3d42:	ff 4f       	sbci	r31, 0xFF	; 255
    3d44:	60 81       	ld	r22, Z
    3d46:	71 81       	ldd	r23, Z+1	; 0x01
    3d48:	82 81       	ldd	r24, Z+2	; 0x02
    3d4a:	93 81       	ldd	r25, Z+3	; 0x03
    3d4c:	20 e0       	ldi	r18, 0x00	; 0
    3d4e:	30 e0       	ldi	r19, 0x00	; 0
    3d50:	4a ef       	ldi	r20, 0xFA	; 250
    3d52:	54 e4       	ldi	r21, 0x44	; 68
    3d54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d58:	dc 01       	movw	r26, r24
    3d5a:	cb 01       	movw	r24, r22
    3d5c:	f8 01       	movw	r30, r16
    3d5e:	80 83       	st	Z, r24
    3d60:	91 83       	std	Z+1, r25	; 0x01
    3d62:	a2 83       	std	Z+2, r26	; 0x02
    3d64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d66:	fe 01       	movw	r30, r28
    3d68:	e9 58       	subi	r30, 0x89	; 137
    3d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6c:	60 81       	ld	r22, Z
    3d6e:	71 81       	ldd	r23, Z+1	; 0x01
    3d70:	82 81       	ldd	r24, Z+2	; 0x02
    3d72:	93 81       	ldd	r25, Z+3	; 0x03
    3d74:	20 e0       	ldi	r18, 0x00	; 0
    3d76:	30 e0       	ldi	r19, 0x00	; 0
    3d78:	40 e8       	ldi	r20, 0x80	; 128
    3d7a:	5f e3       	ldi	r21, 0x3F	; 63
    3d7c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d80:	88 23       	and	r24, r24
    3d82:	44 f4       	brge	.+16     	; 0x3d94 <main+0x2596>
		__ticks = 1;
    3d84:	fe 01       	movw	r30, r28
    3d86:	eb 58       	subi	r30, 0x8B	; 139
    3d88:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8a:	81 e0       	ldi	r24, 0x01	; 1
    3d8c:	90 e0       	ldi	r25, 0x00	; 0
    3d8e:	91 83       	std	Z+1, r25	; 0x01
    3d90:	80 83       	st	Z, r24
    3d92:	64 c0       	rjmp	.+200    	; 0x3e5c <main+0x265e>
	else if (__tmp > 65535)
    3d94:	fe 01       	movw	r30, r28
    3d96:	e9 58       	subi	r30, 0x89	; 137
    3d98:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9a:	60 81       	ld	r22, Z
    3d9c:	71 81       	ldd	r23, Z+1	; 0x01
    3d9e:	82 81       	ldd	r24, Z+2	; 0x02
    3da0:	93 81       	ldd	r25, Z+3	; 0x03
    3da2:	20 e0       	ldi	r18, 0x00	; 0
    3da4:	3f ef       	ldi	r19, 0xFF	; 255
    3da6:	4f e7       	ldi	r20, 0x7F	; 127
    3da8:	57 e4       	ldi	r21, 0x47	; 71
    3daa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3dae:	18 16       	cp	r1, r24
    3db0:	0c f0       	brlt	.+2      	; 0x3db4 <main+0x25b6>
    3db2:	43 c0       	rjmp	.+134    	; 0x3e3a <main+0x263c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3db4:	fe 01       	movw	r30, r28
    3db6:	e5 58       	subi	r30, 0x85	; 133
    3db8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dba:	60 81       	ld	r22, Z
    3dbc:	71 81       	ldd	r23, Z+1	; 0x01
    3dbe:	82 81       	ldd	r24, Z+2	; 0x02
    3dc0:	93 81       	ldd	r25, Z+3	; 0x03
    3dc2:	20 e0       	ldi	r18, 0x00	; 0
    3dc4:	30 e0       	ldi	r19, 0x00	; 0
    3dc6:	40 e2       	ldi	r20, 0x20	; 32
    3dc8:	51 e4       	ldi	r21, 0x41	; 65
    3dca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3dce:	dc 01       	movw	r26, r24
    3dd0:	cb 01       	movw	r24, r22
    3dd2:	8e 01       	movw	r16, r28
    3dd4:	0b 58       	subi	r16, 0x8B	; 139
    3dd6:	1f 4f       	sbci	r17, 0xFF	; 255
    3dd8:	bc 01       	movw	r22, r24
    3dda:	cd 01       	movw	r24, r26
    3ddc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3de0:	dc 01       	movw	r26, r24
    3de2:	cb 01       	movw	r24, r22
    3de4:	f8 01       	movw	r30, r16
    3de6:	91 83       	std	Z+1, r25	; 0x01
    3de8:	80 83       	st	Z, r24
    3dea:	1f c0       	rjmp	.+62     	; 0x3e2a <main+0x262c>
    3dec:	fe 01       	movw	r30, r28
    3dee:	ed 58       	subi	r30, 0x8D	; 141
    3df0:	ff 4f       	sbci	r31, 0xFF	; 255
    3df2:	88 ec       	ldi	r24, 0xC8	; 200
    3df4:	90 e0       	ldi	r25, 0x00	; 0
    3df6:	91 83       	std	Z+1, r25	; 0x01
    3df8:	80 83       	st	Z, r24
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	ed 58       	subi	r30, 0x8D	; 141
    3dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    3e00:	80 81       	ld	r24, Z
    3e02:	91 81       	ldd	r25, Z+1	; 0x01
    3e04:	01 97       	sbiw	r24, 0x01	; 1
    3e06:	f1 f7       	brne	.-4      	; 0x3e04 <main+0x2606>
    3e08:	fe 01       	movw	r30, r28
    3e0a:	ed 58       	subi	r30, 0x8D	; 141
    3e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e0e:	91 83       	std	Z+1, r25	; 0x01
    3e10:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e12:	de 01       	movw	r26, r28
    3e14:	ab 58       	subi	r26, 0x8B	; 139
    3e16:	bf 4f       	sbci	r27, 0xFF	; 255
    3e18:	fe 01       	movw	r30, r28
    3e1a:	eb 58       	subi	r30, 0x8B	; 139
    3e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e1e:	80 81       	ld	r24, Z
    3e20:	91 81       	ldd	r25, Z+1	; 0x01
    3e22:	01 97       	sbiw	r24, 0x01	; 1
    3e24:	11 96       	adiw	r26, 0x01	; 1
    3e26:	9c 93       	st	X, r25
    3e28:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e2a:	fe 01       	movw	r30, r28
    3e2c:	eb 58       	subi	r30, 0x8B	; 139
    3e2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e30:	80 81       	ld	r24, Z
    3e32:	91 81       	ldd	r25, Z+1	; 0x01
    3e34:	00 97       	sbiw	r24, 0x00	; 0
    3e36:	d1 f6       	brne	.-76     	; 0x3dec <main+0x25ee>
    3e38:	27 c0       	rjmp	.+78     	; 0x3e88 <main+0x268a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e3a:	8e 01       	movw	r16, r28
    3e3c:	0b 58       	subi	r16, 0x8B	; 139
    3e3e:	1f 4f       	sbci	r17, 0xFF	; 255
    3e40:	fe 01       	movw	r30, r28
    3e42:	e9 58       	subi	r30, 0x89	; 137
    3e44:	ff 4f       	sbci	r31, 0xFF	; 255
    3e46:	60 81       	ld	r22, Z
    3e48:	71 81       	ldd	r23, Z+1	; 0x01
    3e4a:	82 81       	ldd	r24, Z+2	; 0x02
    3e4c:	93 81       	ldd	r25, Z+3	; 0x03
    3e4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e52:	dc 01       	movw	r26, r24
    3e54:	cb 01       	movw	r24, r22
    3e56:	f8 01       	movw	r30, r16
    3e58:	91 83       	std	Z+1, r25	; 0x01
    3e5a:	80 83       	st	Z, r24
    3e5c:	de 01       	movw	r26, r28
    3e5e:	af 58       	subi	r26, 0x8F	; 143
    3e60:	bf 4f       	sbci	r27, 0xFF	; 255
    3e62:	fe 01       	movw	r30, r28
    3e64:	eb 58       	subi	r30, 0x8B	; 139
    3e66:	ff 4f       	sbci	r31, 0xFF	; 255
    3e68:	80 81       	ld	r24, Z
    3e6a:	91 81       	ldd	r25, Z+1	; 0x01
    3e6c:	8d 93       	st	X+, r24
    3e6e:	9c 93       	st	X, r25
    3e70:	fe 01       	movw	r30, r28
    3e72:	ef 58       	subi	r30, 0x8F	; 143
    3e74:	ff 4f       	sbci	r31, 0xFF	; 255
    3e76:	80 81       	ld	r24, Z
    3e78:	91 81       	ldd	r25, Z+1	; 0x01
    3e7a:	01 97       	sbiw	r24, 0x01	; 1
    3e7c:	f1 f7       	brne	.-4      	; 0x3e7a <main+0x267c>
    3e7e:	fe 01       	movw	r30, r28
    3e80:	ef 58       	subi	r30, 0x8F	; 143
    3e82:	ff 4f       	sbci	r31, 0xFF	; 255
    3e84:	91 83       	std	Z+1, r25	; 0x01
    3e86:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    3e88:	81 e0       	ldi	r24, 0x01	; 1
    3e8a:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,12);
    3e8e:	ce 01       	movw	r24, r28
    3e90:	87 5f       	subi	r24, 0xF7	; 247
    3e92:	9d 4f       	sbci	r25, 0xFD	; 253
    3e94:	60 e0       	ldi	r22, 0x00	; 0
    3e96:	41 e0       	ldi	r20, 0x01	; 1
    3e98:	2c e0       	ldi	r18, 0x0C	; 12
    3e9a:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,4);
    3e9e:	ce 01       	movw	r24, r28
    3ea0:	8f 5e       	subi	r24, 0xEF	; 239
    3ea2:	9d 4f       	sbci	r25, 0xFD	; 253
    3ea4:	61 e0       	ldi	r22, 0x01	; 1
    3ea6:	41 e0       	ldi	r20, 0x01	; 1
    3ea8:	24 e0       	ldi	r18, 0x04	; 4
    3eaa:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    3eae:	fe 01       	movw	r30, r28
    3eb0:	e3 59       	subi	r30, 0x93	; 147
    3eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb4:	80 e0       	ldi	r24, 0x00	; 0
    3eb6:	90 e0       	ldi	r25, 0x00	; 0
    3eb8:	a0 e2       	ldi	r26, 0x20	; 32
    3eba:	b1 e4       	ldi	r27, 0x41	; 65
    3ebc:	80 83       	st	Z, r24
    3ebe:	91 83       	std	Z+1, r25	; 0x01
    3ec0:	a2 83       	std	Z+2, r26	; 0x02
    3ec2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ec4:	8e 01       	movw	r16, r28
    3ec6:	07 59       	subi	r16, 0x97	; 151
    3ec8:	1f 4f       	sbci	r17, 0xFF	; 255
    3eca:	fe 01       	movw	r30, r28
    3ecc:	e3 59       	subi	r30, 0x93	; 147
    3ece:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed0:	60 81       	ld	r22, Z
    3ed2:	71 81       	ldd	r23, Z+1	; 0x01
    3ed4:	82 81       	ldd	r24, Z+2	; 0x02
    3ed6:	93 81       	ldd	r25, Z+3	; 0x03
    3ed8:	20 e0       	ldi	r18, 0x00	; 0
    3eda:	30 e0       	ldi	r19, 0x00	; 0
    3edc:	4a ef       	ldi	r20, 0xFA	; 250
    3ede:	54 e4       	ldi	r21, 0x44	; 68
    3ee0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ee4:	dc 01       	movw	r26, r24
    3ee6:	cb 01       	movw	r24, r22
    3ee8:	f8 01       	movw	r30, r16
    3eea:	80 83       	st	Z, r24
    3eec:	91 83       	std	Z+1, r25	; 0x01
    3eee:	a2 83       	std	Z+2, r26	; 0x02
    3ef0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3ef2:	fe 01       	movw	r30, r28
    3ef4:	e7 59       	subi	r30, 0x97	; 151
    3ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef8:	60 81       	ld	r22, Z
    3efa:	71 81       	ldd	r23, Z+1	; 0x01
    3efc:	82 81       	ldd	r24, Z+2	; 0x02
    3efe:	93 81       	ldd	r25, Z+3	; 0x03
    3f00:	20 e0       	ldi	r18, 0x00	; 0
    3f02:	30 e0       	ldi	r19, 0x00	; 0
    3f04:	40 e8       	ldi	r20, 0x80	; 128
    3f06:	5f e3       	ldi	r21, 0x3F	; 63
    3f08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f0c:	88 23       	and	r24, r24
    3f0e:	44 f4       	brge	.+16     	; 0x3f20 <main+0x2722>
		__ticks = 1;
    3f10:	fe 01       	movw	r30, r28
    3f12:	e9 59       	subi	r30, 0x99	; 153
    3f14:	ff 4f       	sbci	r31, 0xFF	; 255
    3f16:	81 e0       	ldi	r24, 0x01	; 1
    3f18:	90 e0       	ldi	r25, 0x00	; 0
    3f1a:	91 83       	std	Z+1, r25	; 0x01
    3f1c:	80 83       	st	Z, r24
    3f1e:	64 c0       	rjmp	.+200    	; 0x3fe8 <main+0x27ea>
	else if (__tmp > 65535)
    3f20:	fe 01       	movw	r30, r28
    3f22:	e7 59       	subi	r30, 0x97	; 151
    3f24:	ff 4f       	sbci	r31, 0xFF	; 255
    3f26:	60 81       	ld	r22, Z
    3f28:	71 81       	ldd	r23, Z+1	; 0x01
    3f2a:	82 81       	ldd	r24, Z+2	; 0x02
    3f2c:	93 81       	ldd	r25, Z+3	; 0x03
    3f2e:	20 e0       	ldi	r18, 0x00	; 0
    3f30:	3f ef       	ldi	r19, 0xFF	; 255
    3f32:	4f e7       	ldi	r20, 0x7F	; 127
    3f34:	57 e4       	ldi	r21, 0x47	; 71
    3f36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f3a:	18 16       	cp	r1, r24
    3f3c:	0c f0       	brlt	.+2      	; 0x3f40 <main+0x2742>
    3f3e:	43 c0       	rjmp	.+134    	; 0x3fc6 <main+0x27c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f40:	fe 01       	movw	r30, r28
    3f42:	e3 59       	subi	r30, 0x93	; 147
    3f44:	ff 4f       	sbci	r31, 0xFF	; 255
    3f46:	60 81       	ld	r22, Z
    3f48:	71 81       	ldd	r23, Z+1	; 0x01
    3f4a:	82 81       	ldd	r24, Z+2	; 0x02
    3f4c:	93 81       	ldd	r25, Z+3	; 0x03
    3f4e:	20 e0       	ldi	r18, 0x00	; 0
    3f50:	30 e0       	ldi	r19, 0x00	; 0
    3f52:	40 e2       	ldi	r20, 0x20	; 32
    3f54:	51 e4       	ldi	r21, 0x41	; 65
    3f56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f5a:	dc 01       	movw	r26, r24
    3f5c:	cb 01       	movw	r24, r22
    3f5e:	8e 01       	movw	r16, r28
    3f60:	09 59       	subi	r16, 0x99	; 153
    3f62:	1f 4f       	sbci	r17, 0xFF	; 255
    3f64:	bc 01       	movw	r22, r24
    3f66:	cd 01       	movw	r24, r26
    3f68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f6c:	dc 01       	movw	r26, r24
    3f6e:	cb 01       	movw	r24, r22
    3f70:	f8 01       	movw	r30, r16
    3f72:	91 83       	std	Z+1, r25	; 0x01
    3f74:	80 83       	st	Z, r24
    3f76:	1f c0       	rjmp	.+62     	; 0x3fb6 <main+0x27b8>
    3f78:	fe 01       	movw	r30, r28
    3f7a:	eb 59       	subi	r30, 0x9B	; 155
    3f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f7e:	88 ec       	ldi	r24, 0xC8	; 200
    3f80:	90 e0       	ldi	r25, 0x00	; 0
    3f82:	91 83       	std	Z+1, r25	; 0x01
    3f84:	80 83       	st	Z, r24
    3f86:	fe 01       	movw	r30, r28
    3f88:	eb 59       	subi	r30, 0x9B	; 155
    3f8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8c:	80 81       	ld	r24, Z
    3f8e:	91 81       	ldd	r25, Z+1	; 0x01
    3f90:	01 97       	sbiw	r24, 0x01	; 1
    3f92:	f1 f7       	brne	.-4      	; 0x3f90 <main+0x2792>
    3f94:	fe 01       	movw	r30, r28
    3f96:	eb 59       	subi	r30, 0x9B	; 155
    3f98:	ff 4f       	sbci	r31, 0xFF	; 255
    3f9a:	91 83       	std	Z+1, r25	; 0x01
    3f9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f9e:	de 01       	movw	r26, r28
    3fa0:	a9 59       	subi	r26, 0x99	; 153
    3fa2:	bf 4f       	sbci	r27, 0xFF	; 255
    3fa4:	fe 01       	movw	r30, r28
    3fa6:	e9 59       	subi	r30, 0x99	; 153
    3fa8:	ff 4f       	sbci	r31, 0xFF	; 255
    3faa:	80 81       	ld	r24, Z
    3fac:	91 81       	ldd	r25, Z+1	; 0x01
    3fae:	01 97       	sbiw	r24, 0x01	; 1
    3fb0:	11 96       	adiw	r26, 0x01	; 1
    3fb2:	9c 93       	st	X, r25
    3fb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	e9 59       	subi	r30, 0x99	; 153
    3fba:	ff 4f       	sbci	r31, 0xFF	; 255
    3fbc:	80 81       	ld	r24, Z
    3fbe:	91 81       	ldd	r25, Z+1	; 0x01
    3fc0:	00 97       	sbiw	r24, 0x00	; 0
    3fc2:	d1 f6       	brne	.-76     	; 0x3f78 <main+0x277a>
    3fc4:	27 c0       	rjmp	.+78     	; 0x4014 <main+0x2816>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fc6:	8e 01       	movw	r16, r28
    3fc8:	09 59       	subi	r16, 0x99	; 153
    3fca:	1f 4f       	sbci	r17, 0xFF	; 255
    3fcc:	fe 01       	movw	r30, r28
    3fce:	e7 59       	subi	r30, 0x97	; 151
    3fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd2:	60 81       	ld	r22, Z
    3fd4:	71 81       	ldd	r23, Z+1	; 0x01
    3fd6:	82 81       	ldd	r24, Z+2	; 0x02
    3fd8:	93 81       	ldd	r25, Z+3	; 0x03
    3fda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fde:	dc 01       	movw	r26, r24
    3fe0:	cb 01       	movw	r24, r22
    3fe2:	f8 01       	movw	r30, r16
    3fe4:	91 83       	std	Z+1, r25	; 0x01
    3fe6:	80 83       	st	Z, r24
    3fe8:	de 01       	movw	r26, r28
    3fea:	ad 59       	subi	r26, 0x9D	; 157
    3fec:	bf 4f       	sbci	r27, 0xFF	; 255
    3fee:	fe 01       	movw	r30, r28
    3ff0:	e9 59       	subi	r30, 0x99	; 153
    3ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff4:	80 81       	ld	r24, Z
    3ff6:	91 81       	ldd	r25, Z+1	; 0x01
    3ff8:	8d 93       	st	X+, r24
    3ffa:	9c 93       	st	X, r25
    3ffc:	fe 01       	movw	r30, r28
    3ffe:	ed 59       	subi	r30, 0x9D	; 157
    4000:	ff 4f       	sbci	r31, 0xFF	; 255
    4002:	80 81       	ld	r24, Z
    4004:	91 81       	ldd	r25, Z+1	; 0x01
    4006:	01 97       	sbiw	r24, 0x01	; 1
    4008:	f1 f7       	brne	.-4      	; 0x4006 <main+0x2808>
    400a:	fe 01       	movw	r30, r28
    400c:	ed 59       	subi	r30, 0x9D	; 157
    400e:	ff 4f       	sbci	r31, 0xFF	; 255
    4010:	91 83       	std	Z+1, r25	; 0x01
    4012:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    4014:	81 e0       	ldi	r24, 0x01	; 1
    4016:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,13);
    401a:	ce 01       	movw	r24, r28
    401c:	8f 51       	subi	r24, 0x1F	; 31
    401e:	9e 4f       	sbci	r25, 0xFE	; 254
    4020:	60 e0       	ldi	r22, 0x00	; 0
    4022:	41 e0       	ldi	r20, 0x01	; 1
    4024:	2d e0       	ldi	r18, 0x0D	; 13
    4026:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,3);
    402a:	ce 01       	movw	r24, r28
    402c:	8f 5e       	subi	r24, 0xEF	; 239
    402e:	9d 4f       	sbci	r25, 0xFD	; 253
    4030:	61 e0       	ldi	r22, 0x01	; 1
    4032:	41 e0       	ldi	r20, 0x01	; 1
    4034:	23 e0       	ldi	r18, 0x03	; 3
    4036:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    403a:	fe 01       	movw	r30, r28
    403c:	e1 5a       	subi	r30, 0xA1	; 161
    403e:	ff 4f       	sbci	r31, 0xFF	; 255
    4040:	80 e0       	ldi	r24, 0x00	; 0
    4042:	90 e0       	ldi	r25, 0x00	; 0
    4044:	a0 e2       	ldi	r26, 0x20	; 32
    4046:	b1 e4       	ldi	r27, 0x41	; 65
    4048:	80 83       	st	Z, r24
    404a:	91 83       	std	Z+1, r25	; 0x01
    404c:	a2 83       	std	Z+2, r26	; 0x02
    404e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4050:	8e 01       	movw	r16, r28
    4052:	05 5a       	subi	r16, 0xA5	; 165
    4054:	1f 4f       	sbci	r17, 0xFF	; 255
    4056:	fe 01       	movw	r30, r28
    4058:	e1 5a       	subi	r30, 0xA1	; 161
    405a:	ff 4f       	sbci	r31, 0xFF	; 255
    405c:	60 81       	ld	r22, Z
    405e:	71 81       	ldd	r23, Z+1	; 0x01
    4060:	82 81       	ldd	r24, Z+2	; 0x02
    4062:	93 81       	ldd	r25, Z+3	; 0x03
    4064:	20 e0       	ldi	r18, 0x00	; 0
    4066:	30 e0       	ldi	r19, 0x00	; 0
    4068:	4a ef       	ldi	r20, 0xFA	; 250
    406a:	54 e4       	ldi	r21, 0x44	; 68
    406c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4070:	dc 01       	movw	r26, r24
    4072:	cb 01       	movw	r24, r22
    4074:	f8 01       	movw	r30, r16
    4076:	80 83       	st	Z, r24
    4078:	91 83       	std	Z+1, r25	; 0x01
    407a:	a2 83       	std	Z+2, r26	; 0x02
    407c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    407e:	fe 01       	movw	r30, r28
    4080:	e5 5a       	subi	r30, 0xA5	; 165
    4082:	ff 4f       	sbci	r31, 0xFF	; 255
    4084:	60 81       	ld	r22, Z
    4086:	71 81       	ldd	r23, Z+1	; 0x01
    4088:	82 81       	ldd	r24, Z+2	; 0x02
    408a:	93 81       	ldd	r25, Z+3	; 0x03
    408c:	20 e0       	ldi	r18, 0x00	; 0
    408e:	30 e0       	ldi	r19, 0x00	; 0
    4090:	40 e8       	ldi	r20, 0x80	; 128
    4092:	5f e3       	ldi	r21, 0x3F	; 63
    4094:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4098:	88 23       	and	r24, r24
    409a:	44 f4       	brge	.+16     	; 0x40ac <main+0x28ae>
		__ticks = 1;
    409c:	fe 01       	movw	r30, r28
    409e:	e7 5a       	subi	r30, 0xA7	; 167
    40a0:	ff 4f       	sbci	r31, 0xFF	; 255
    40a2:	81 e0       	ldi	r24, 0x01	; 1
    40a4:	90 e0       	ldi	r25, 0x00	; 0
    40a6:	91 83       	std	Z+1, r25	; 0x01
    40a8:	80 83       	st	Z, r24
    40aa:	64 c0       	rjmp	.+200    	; 0x4174 <main+0x2976>
	else if (__tmp > 65535)
    40ac:	fe 01       	movw	r30, r28
    40ae:	e5 5a       	subi	r30, 0xA5	; 165
    40b0:	ff 4f       	sbci	r31, 0xFF	; 255
    40b2:	60 81       	ld	r22, Z
    40b4:	71 81       	ldd	r23, Z+1	; 0x01
    40b6:	82 81       	ldd	r24, Z+2	; 0x02
    40b8:	93 81       	ldd	r25, Z+3	; 0x03
    40ba:	20 e0       	ldi	r18, 0x00	; 0
    40bc:	3f ef       	ldi	r19, 0xFF	; 255
    40be:	4f e7       	ldi	r20, 0x7F	; 127
    40c0:	57 e4       	ldi	r21, 0x47	; 71
    40c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    40c6:	18 16       	cp	r1, r24
    40c8:	0c f0       	brlt	.+2      	; 0x40cc <main+0x28ce>
    40ca:	43 c0       	rjmp	.+134    	; 0x4152 <main+0x2954>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40cc:	fe 01       	movw	r30, r28
    40ce:	e1 5a       	subi	r30, 0xA1	; 161
    40d0:	ff 4f       	sbci	r31, 0xFF	; 255
    40d2:	60 81       	ld	r22, Z
    40d4:	71 81       	ldd	r23, Z+1	; 0x01
    40d6:	82 81       	ldd	r24, Z+2	; 0x02
    40d8:	93 81       	ldd	r25, Z+3	; 0x03
    40da:	20 e0       	ldi	r18, 0x00	; 0
    40dc:	30 e0       	ldi	r19, 0x00	; 0
    40de:	40 e2       	ldi	r20, 0x20	; 32
    40e0:	51 e4       	ldi	r21, 0x41	; 65
    40e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40e6:	dc 01       	movw	r26, r24
    40e8:	cb 01       	movw	r24, r22
    40ea:	8e 01       	movw	r16, r28
    40ec:	07 5a       	subi	r16, 0xA7	; 167
    40ee:	1f 4f       	sbci	r17, 0xFF	; 255
    40f0:	bc 01       	movw	r22, r24
    40f2:	cd 01       	movw	r24, r26
    40f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40f8:	dc 01       	movw	r26, r24
    40fa:	cb 01       	movw	r24, r22
    40fc:	f8 01       	movw	r30, r16
    40fe:	91 83       	std	Z+1, r25	; 0x01
    4100:	80 83       	st	Z, r24
    4102:	1f c0       	rjmp	.+62     	; 0x4142 <main+0x2944>
    4104:	fe 01       	movw	r30, r28
    4106:	e9 5a       	subi	r30, 0xA9	; 169
    4108:	ff 4f       	sbci	r31, 0xFF	; 255
    410a:	88 ec       	ldi	r24, 0xC8	; 200
    410c:	90 e0       	ldi	r25, 0x00	; 0
    410e:	91 83       	std	Z+1, r25	; 0x01
    4110:	80 83       	st	Z, r24
    4112:	fe 01       	movw	r30, r28
    4114:	e9 5a       	subi	r30, 0xA9	; 169
    4116:	ff 4f       	sbci	r31, 0xFF	; 255
    4118:	80 81       	ld	r24, Z
    411a:	91 81       	ldd	r25, Z+1	; 0x01
    411c:	01 97       	sbiw	r24, 0x01	; 1
    411e:	f1 f7       	brne	.-4      	; 0x411c <main+0x291e>
    4120:	fe 01       	movw	r30, r28
    4122:	e9 5a       	subi	r30, 0xA9	; 169
    4124:	ff 4f       	sbci	r31, 0xFF	; 255
    4126:	91 83       	std	Z+1, r25	; 0x01
    4128:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    412a:	de 01       	movw	r26, r28
    412c:	a7 5a       	subi	r26, 0xA7	; 167
    412e:	bf 4f       	sbci	r27, 0xFF	; 255
    4130:	fe 01       	movw	r30, r28
    4132:	e7 5a       	subi	r30, 0xA7	; 167
    4134:	ff 4f       	sbci	r31, 0xFF	; 255
    4136:	80 81       	ld	r24, Z
    4138:	91 81       	ldd	r25, Z+1	; 0x01
    413a:	01 97       	sbiw	r24, 0x01	; 1
    413c:	11 96       	adiw	r26, 0x01	; 1
    413e:	9c 93       	st	X, r25
    4140:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4142:	fe 01       	movw	r30, r28
    4144:	e7 5a       	subi	r30, 0xA7	; 167
    4146:	ff 4f       	sbci	r31, 0xFF	; 255
    4148:	80 81       	ld	r24, Z
    414a:	91 81       	ldd	r25, Z+1	; 0x01
    414c:	00 97       	sbiw	r24, 0x00	; 0
    414e:	d1 f6       	brne	.-76     	; 0x4104 <main+0x2906>
    4150:	27 c0       	rjmp	.+78     	; 0x41a0 <main+0x29a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4152:	8e 01       	movw	r16, r28
    4154:	07 5a       	subi	r16, 0xA7	; 167
    4156:	1f 4f       	sbci	r17, 0xFF	; 255
    4158:	fe 01       	movw	r30, r28
    415a:	e5 5a       	subi	r30, 0xA5	; 165
    415c:	ff 4f       	sbci	r31, 0xFF	; 255
    415e:	60 81       	ld	r22, Z
    4160:	71 81       	ldd	r23, Z+1	; 0x01
    4162:	82 81       	ldd	r24, Z+2	; 0x02
    4164:	93 81       	ldd	r25, Z+3	; 0x03
    4166:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    416a:	dc 01       	movw	r26, r24
    416c:	cb 01       	movw	r24, r22
    416e:	f8 01       	movw	r30, r16
    4170:	91 83       	std	Z+1, r25	; 0x01
    4172:	80 83       	st	Z, r24
    4174:	de 01       	movw	r26, r28
    4176:	ab 5a       	subi	r26, 0xAB	; 171
    4178:	bf 4f       	sbci	r27, 0xFF	; 255
    417a:	fe 01       	movw	r30, r28
    417c:	e7 5a       	subi	r30, 0xA7	; 167
    417e:	ff 4f       	sbci	r31, 0xFF	; 255
    4180:	80 81       	ld	r24, Z
    4182:	91 81       	ldd	r25, Z+1	; 0x01
    4184:	8d 93       	st	X+, r24
    4186:	9c 93       	st	X, r25
    4188:	fe 01       	movw	r30, r28
    418a:	eb 5a       	subi	r30, 0xAB	; 171
    418c:	ff 4f       	sbci	r31, 0xFF	; 255
    418e:	80 81       	ld	r24, Z
    4190:	91 81       	ldd	r25, Z+1	; 0x01
    4192:	01 97       	sbiw	r24, 0x01	; 1
    4194:	f1 f7       	brne	.-4      	; 0x4192 <main+0x2994>
    4196:	fe 01       	movw	r30, r28
    4198:	eb 5a       	subi	r30, 0xAB	; 171
    419a:	ff 4f       	sbci	r31, 0xFF	; 255
    419c:	91 83       	std	Z+1, r25	; 0x01
    419e:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    41a0:	81 e0       	ldi	r24, 0x01	; 1
    41a2:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern7,0,1,14);
    41a6:	ce 01       	movw	r24, r28
    41a8:	87 5f       	subi	r24, 0xF7	; 247
    41aa:	9d 4f       	sbci	r25, 0xFD	; 253
    41ac:	60 e0       	ldi	r22, 0x00	; 0
    41ae:	41 e0       	ldi	r20, 0x01	; 1
    41b0:	2e e0       	ldi	r18, 0x0E	; 14
    41b2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,2);
    41b6:	ce 01       	movw	r24, r28
    41b8:	8f 5e       	subi	r24, 0xEF	; 239
    41ba:	9d 4f       	sbci	r25, 0xFD	; 253
    41bc:	61 e0       	ldi	r22, 0x01	; 1
    41be:	41 e0       	ldi	r20, 0x01	; 1
    41c0:	22 e0       	ldi	r18, 0x02	; 2
    41c2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    41c6:	fe 01       	movw	r30, r28
    41c8:	ef 5a       	subi	r30, 0xAF	; 175
    41ca:	ff 4f       	sbci	r31, 0xFF	; 255
    41cc:	80 e0       	ldi	r24, 0x00	; 0
    41ce:	90 e0       	ldi	r25, 0x00	; 0
    41d0:	a0 e2       	ldi	r26, 0x20	; 32
    41d2:	b1 e4       	ldi	r27, 0x41	; 65
    41d4:	80 83       	st	Z, r24
    41d6:	91 83       	std	Z+1, r25	; 0x01
    41d8:	a2 83       	std	Z+2, r26	; 0x02
    41da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41dc:	8e 01       	movw	r16, r28
    41de:	03 5b       	subi	r16, 0xB3	; 179
    41e0:	1f 4f       	sbci	r17, 0xFF	; 255
    41e2:	fe 01       	movw	r30, r28
    41e4:	ef 5a       	subi	r30, 0xAF	; 175
    41e6:	ff 4f       	sbci	r31, 0xFF	; 255
    41e8:	60 81       	ld	r22, Z
    41ea:	71 81       	ldd	r23, Z+1	; 0x01
    41ec:	82 81       	ldd	r24, Z+2	; 0x02
    41ee:	93 81       	ldd	r25, Z+3	; 0x03
    41f0:	20 e0       	ldi	r18, 0x00	; 0
    41f2:	30 e0       	ldi	r19, 0x00	; 0
    41f4:	4a ef       	ldi	r20, 0xFA	; 250
    41f6:	54 e4       	ldi	r21, 0x44	; 68
    41f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41fc:	dc 01       	movw	r26, r24
    41fe:	cb 01       	movw	r24, r22
    4200:	f8 01       	movw	r30, r16
    4202:	80 83       	st	Z, r24
    4204:	91 83       	std	Z+1, r25	; 0x01
    4206:	a2 83       	std	Z+2, r26	; 0x02
    4208:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    420a:	fe 01       	movw	r30, r28
    420c:	e3 5b       	subi	r30, 0xB3	; 179
    420e:	ff 4f       	sbci	r31, 0xFF	; 255
    4210:	60 81       	ld	r22, Z
    4212:	71 81       	ldd	r23, Z+1	; 0x01
    4214:	82 81       	ldd	r24, Z+2	; 0x02
    4216:	93 81       	ldd	r25, Z+3	; 0x03
    4218:	20 e0       	ldi	r18, 0x00	; 0
    421a:	30 e0       	ldi	r19, 0x00	; 0
    421c:	40 e8       	ldi	r20, 0x80	; 128
    421e:	5f e3       	ldi	r21, 0x3F	; 63
    4220:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4224:	88 23       	and	r24, r24
    4226:	44 f4       	brge	.+16     	; 0x4238 <main+0x2a3a>
		__ticks = 1;
    4228:	fe 01       	movw	r30, r28
    422a:	e5 5b       	subi	r30, 0xB5	; 181
    422c:	ff 4f       	sbci	r31, 0xFF	; 255
    422e:	81 e0       	ldi	r24, 0x01	; 1
    4230:	90 e0       	ldi	r25, 0x00	; 0
    4232:	91 83       	std	Z+1, r25	; 0x01
    4234:	80 83       	st	Z, r24
    4236:	64 c0       	rjmp	.+200    	; 0x4300 <main+0x2b02>
	else if (__tmp > 65535)
    4238:	fe 01       	movw	r30, r28
    423a:	e3 5b       	subi	r30, 0xB3	; 179
    423c:	ff 4f       	sbci	r31, 0xFF	; 255
    423e:	60 81       	ld	r22, Z
    4240:	71 81       	ldd	r23, Z+1	; 0x01
    4242:	82 81       	ldd	r24, Z+2	; 0x02
    4244:	93 81       	ldd	r25, Z+3	; 0x03
    4246:	20 e0       	ldi	r18, 0x00	; 0
    4248:	3f ef       	ldi	r19, 0xFF	; 255
    424a:	4f e7       	ldi	r20, 0x7F	; 127
    424c:	57 e4       	ldi	r21, 0x47	; 71
    424e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4252:	18 16       	cp	r1, r24
    4254:	0c f0       	brlt	.+2      	; 0x4258 <main+0x2a5a>
    4256:	43 c0       	rjmp	.+134    	; 0x42de <main+0x2ae0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4258:	fe 01       	movw	r30, r28
    425a:	ef 5a       	subi	r30, 0xAF	; 175
    425c:	ff 4f       	sbci	r31, 0xFF	; 255
    425e:	60 81       	ld	r22, Z
    4260:	71 81       	ldd	r23, Z+1	; 0x01
    4262:	82 81       	ldd	r24, Z+2	; 0x02
    4264:	93 81       	ldd	r25, Z+3	; 0x03
    4266:	20 e0       	ldi	r18, 0x00	; 0
    4268:	30 e0       	ldi	r19, 0x00	; 0
    426a:	40 e2       	ldi	r20, 0x20	; 32
    426c:	51 e4       	ldi	r21, 0x41	; 65
    426e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4272:	dc 01       	movw	r26, r24
    4274:	cb 01       	movw	r24, r22
    4276:	8e 01       	movw	r16, r28
    4278:	05 5b       	subi	r16, 0xB5	; 181
    427a:	1f 4f       	sbci	r17, 0xFF	; 255
    427c:	bc 01       	movw	r22, r24
    427e:	cd 01       	movw	r24, r26
    4280:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4284:	dc 01       	movw	r26, r24
    4286:	cb 01       	movw	r24, r22
    4288:	f8 01       	movw	r30, r16
    428a:	91 83       	std	Z+1, r25	; 0x01
    428c:	80 83       	st	Z, r24
    428e:	1f c0       	rjmp	.+62     	; 0x42ce <main+0x2ad0>
    4290:	fe 01       	movw	r30, r28
    4292:	e7 5b       	subi	r30, 0xB7	; 183
    4294:	ff 4f       	sbci	r31, 0xFF	; 255
    4296:	88 ec       	ldi	r24, 0xC8	; 200
    4298:	90 e0       	ldi	r25, 0x00	; 0
    429a:	91 83       	std	Z+1, r25	; 0x01
    429c:	80 83       	st	Z, r24
    429e:	fe 01       	movw	r30, r28
    42a0:	e7 5b       	subi	r30, 0xB7	; 183
    42a2:	ff 4f       	sbci	r31, 0xFF	; 255
    42a4:	80 81       	ld	r24, Z
    42a6:	91 81       	ldd	r25, Z+1	; 0x01
    42a8:	01 97       	sbiw	r24, 0x01	; 1
    42aa:	f1 f7       	brne	.-4      	; 0x42a8 <main+0x2aaa>
    42ac:	fe 01       	movw	r30, r28
    42ae:	e7 5b       	subi	r30, 0xB7	; 183
    42b0:	ff 4f       	sbci	r31, 0xFF	; 255
    42b2:	91 83       	std	Z+1, r25	; 0x01
    42b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42b6:	de 01       	movw	r26, r28
    42b8:	a5 5b       	subi	r26, 0xB5	; 181
    42ba:	bf 4f       	sbci	r27, 0xFF	; 255
    42bc:	fe 01       	movw	r30, r28
    42be:	e5 5b       	subi	r30, 0xB5	; 181
    42c0:	ff 4f       	sbci	r31, 0xFF	; 255
    42c2:	80 81       	ld	r24, Z
    42c4:	91 81       	ldd	r25, Z+1	; 0x01
    42c6:	01 97       	sbiw	r24, 0x01	; 1
    42c8:	11 96       	adiw	r26, 0x01	; 1
    42ca:	9c 93       	st	X, r25
    42cc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42ce:	fe 01       	movw	r30, r28
    42d0:	e5 5b       	subi	r30, 0xB5	; 181
    42d2:	ff 4f       	sbci	r31, 0xFF	; 255
    42d4:	80 81       	ld	r24, Z
    42d6:	91 81       	ldd	r25, Z+1	; 0x01
    42d8:	00 97       	sbiw	r24, 0x00	; 0
    42da:	d1 f6       	brne	.-76     	; 0x4290 <main+0x2a92>
    42dc:	27 c0       	rjmp	.+78     	; 0x432c <main+0x2b2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42de:	8e 01       	movw	r16, r28
    42e0:	05 5b       	subi	r16, 0xB5	; 181
    42e2:	1f 4f       	sbci	r17, 0xFF	; 255
    42e4:	fe 01       	movw	r30, r28
    42e6:	e3 5b       	subi	r30, 0xB3	; 179
    42e8:	ff 4f       	sbci	r31, 0xFF	; 255
    42ea:	60 81       	ld	r22, Z
    42ec:	71 81       	ldd	r23, Z+1	; 0x01
    42ee:	82 81       	ldd	r24, Z+2	; 0x02
    42f0:	93 81       	ldd	r25, Z+3	; 0x03
    42f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42f6:	dc 01       	movw	r26, r24
    42f8:	cb 01       	movw	r24, r22
    42fa:	f8 01       	movw	r30, r16
    42fc:	91 83       	std	Z+1, r25	; 0x01
    42fe:	80 83       	st	Z, r24
    4300:	de 01       	movw	r26, r28
    4302:	a9 5b       	subi	r26, 0xB9	; 185
    4304:	bf 4f       	sbci	r27, 0xFF	; 255
    4306:	fe 01       	movw	r30, r28
    4308:	e5 5b       	subi	r30, 0xB5	; 181
    430a:	ff 4f       	sbci	r31, 0xFF	; 255
    430c:	80 81       	ld	r24, Z
    430e:	91 81       	ldd	r25, Z+1	; 0x01
    4310:	8d 93       	st	X+, r24
    4312:	9c 93       	st	X, r25
    4314:	fe 01       	movw	r30, r28
    4316:	e9 5b       	subi	r30, 0xB9	; 185
    4318:	ff 4f       	sbci	r31, 0xFF	; 255
    431a:	80 81       	ld	r24, Z
    431c:	91 81       	ldd	r25, Z+1	; 0x01
    431e:	01 97       	sbiw	r24, 0x01	; 1
    4320:	f1 f7       	brne	.-4      	; 0x431e <main+0x2b20>
    4322:	fe 01       	movw	r30, r28
    4324:	e9 5b       	subi	r30, 0xB9	; 185
    4326:	ff 4f       	sbci	r31, 0xFF	; 255
    4328:	91 83       	std	Z+1, r25	; 0x01
    432a:	80 83       	st	Z, r24
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    432c:	81 e0       	ldi	r24, 0x01	; 1
    432e:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

			CLCD_u8WriteSpecialCharacter(Pattern2,0,1,15);
    4332:	ce 01       	movw	r24, r28
    4334:	8f 51       	subi	r24, 0x1F	; 31
    4336:	9e 4f       	sbci	r25, 0xFE	; 254
    4338:	60 e0       	ldi	r22, 0x00	; 0
    433a:	41 e0       	ldi	r20, 0x01	; 1
    433c:	2f e0       	ldi	r18, 0x0F	; 15
    433e:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
			CLCD_u8WriteSpecialCharacter(Pattern8,1,1,1);
    4342:	ce 01       	movw	r24, r28
    4344:	8f 5e       	subi	r24, 0xEF	; 239
    4346:	9d 4f       	sbci	r25, 0xFD	; 253
    4348:	61 e0       	ldi	r22, 0x01	; 1
    434a:	41 e0       	ldi	r20, 0x01	; 1
    434c:	21 e0       	ldi	r18, 0x01	; 1
    434e:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4352:	fe 01       	movw	r30, r28
    4354:	ed 5b       	subi	r30, 0xBD	; 189
    4356:	ff 4f       	sbci	r31, 0xFF	; 255
    4358:	80 e0       	ldi	r24, 0x00	; 0
    435a:	90 e0       	ldi	r25, 0x00	; 0
    435c:	a0 e2       	ldi	r26, 0x20	; 32
    435e:	b1 e4       	ldi	r27, 0x41	; 65
    4360:	80 83       	st	Z, r24
    4362:	91 83       	std	Z+1, r25	; 0x01
    4364:	a2 83       	std	Z+2, r26	; 0x02
    4366:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4368:	8e 01       	movw	r16, r28
    436a:	01 5c       	subi	r16, 0xC1	; 193
    436c:	1f 4f       	sbci	r17, 0xFF	; 255
    436e:	fe 01       	movw	r30, r28
    4370:	ed 5b       	subi	r30, 0xBD	; 189
    4372:	ff 4f       	sbci	r31, 0xFF	; 255
    4374:	60 81       	ld	r22, Z
    4376:	71 81       	ldd	r23, Z+1	; 0x01
    4378:	82 81       	ldd	r24, Z+2	; 0x02
    437a:	93 81       	ldd	r25, Z+3	; 0x03
    437c:	20 e0       	ldi	r18, 0x00	; 0
    437e:	30 e0       	ldi	r19, 0x00	; 0
    4380:	4a ef       	ldi	r20, 0xFA	; 250
    4382:	54 e4       	ldi	r21, 0x44	; 68
    4384:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4388:	dc 01       	movw	r26, r24
    438a:	cb 01       	movw	r24, r22
    438c:	f8 01       	movw	r30, r16
    438e:	80 83       	st	Z, r24
    4390:	91 83       	std	Z+1, r25	; 0x01
    4392:	a2 83       	std	Z+2, r26	; 0x02
    4394:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4396:	fe 01       	movw	r30, r28
    4398:	ff 96       	adiw	r30, 0x3f	; 63
    439a:	60 81       	ld	r22, Z
    439c:	71 81       	ldd	r23, Z+1	; 0x01
    439e:	82 81       	ldd	r24, Z+2	; 0x02
    43a0:	93 81       	ldd	r25, Z+3	; 0x03
    43a2:	20 e0       	ldi	r18, 0x00	; 0
    43a4:	30 e0       	ldi	r19, 0x00	; 0
    43a6:	40 e8       	ldi	r20, 0x80	; 128
    43a8:	5f e3       	ldi	r21, 0x3F	; 63
    43aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    43ae:	88 23       	and	r24, r24
    43b0:	2c f4       	brge	.+10     	; 0x43bc <main+0x2bbe>
		__ticks = 1;
    43b2:	81 e0       	ldi	r24, 0x01	; 1
    43b4:	90 e0       	ldi	r25, 0x00	; 0
    43b6:	9e af       	std	Y+62, r25	; 0x3e
    43b8:	8d af       	std	Y+61, r24	; 0x3d
    43ba:	46 c0       	rjmp	.+140    	; 0x4448 <main+0x2c4a>
	else if (__tmp > 65535)
    43bc:	fe 01       	movw	r30, r28
    43be:	ff 96       	adiw	r30, 0x3f	; 63
    43c0:	60 81       	ld	r22, Z
    43c2:	71 81       	ldd	r23, Z+1	; 0x01
    43c4:	82 81       	ldd	r24, Z+2	; 0x02
    43c6:	93 81       	ldd	r25, Z+3	; 0x03
    43c8:	20 e0       	ldi	r18, 0x00	; 0
    43ca:	3f ef       	ldi	r19, 0xFF	; 255
    43cc:	4f e7       	ldi	r20, 0x7F	; 127
    43ce:	57 e4       	ldi	r21, 0x47	; 71
    43d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    43d4:	18 16       	cp	r1, r24
    43d6:	64 f5       	brge	.+88     	; 0x4430 <main+0x2c32>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43d8:	fe 01       	movw	r30, r28
    43da:	ed 5b       	subi	r30, 0xBD	; 189
    43dc:	ff 4f       	sbci	r31, 0xFF	; 255
    43de:	60 81       	ld	r22, Z
    43e0:	71 81       	ldd	r23, Z+1	; 0x01
    43e2:	82 81       	ldd	r24, Z+2	; 0x02
    43e4:	93 81       	ldd	r25, Z+3	; 0x03
    43e6:	20 e0       	ldi	r18, 0x00	; 0
    43e8:	30 e0       	ldi	r19, 0x00	; 0
    43ea:	40 e2       	ldi	r20, 0x20	; 32
    43ec:	51 e4       	ldi	r21, 0x41	; 65
    43ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43f2:	dc 01       	movw	r26, r24
    43f4:	cb 01       	movw	r24, r22
    43f6:	bc 01       	movw	r22, r24
    43f8:	cd 01       	movw	r24, r26
    43fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43fe:	dc 01       	movw	r26, r24
    4400:	cb 01       	movw	r24, r22
    4402:	9e af       	std	Y+62, r25	; 0x3e
    4404:	8d af       	std	Y+61, r24	; 0x3d
    4406:	0f c0       	rjmp	.+30     	; 0x4426 <main+0x2c28>
    4408:	88 ec       	ldi	r24, 0xC8	; 200
    440a:	90 e0       	ldi	r25, 0x00	; 0
    440c:	9c af       	std	Y+60, r25	; 0x3c
    440e:	8b af       	std	Y+59, r24	; 0x3b
    4410:	8b ad       	ldd	r24, Y+59	; 0x3b
    4412:	9c ad       	ldd	r25, Y+60	; 0x3c
    4414:	01 97       	sbiw	r24, 0x01	; 1
    4416:	f1 f7       	brne	.-4      	; 0x4414 <main+0x2c16>
    4418:	9c af       	std	Y+60, r25	; 0x3c
    441a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    441c:	8d ad       	ldd	r24, Y+61	; 0x3d
    441e:	9e ad       	ldd	r25, Y+62	; 0x3e
    4420:	01 97       	sbiw	r24, 0x01	; 1
    4422:	9e af       	std	Y+62, r25	; 0x3e
    4424:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4426:	8d ad       	ldd	r24, Y+61	; 0x3d
    4428:	9e ad       	ldd	r25, Y+62	; 0x3e
    442a:	00 97       	sbiw	r24, 0x00	; 0
    442c:	69 f7       	brne	.-38     	; 0x4408 <main+0x2c0a>
    442e:	16 c0       	rjmp	.+44     	; 0x445c <main+0x2c5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4430:	fe 01       	movw	r30, r28
    4432:	ff 96       	adiw	r30, 0x3f	; 63
    4434:	60 81       	ld	r22, Z
    4436:	71 81       	ldd	r23, Z+1	; 0x01
    4438:	82 81       	ldd	r24, Z+2	; 0x02
    443a:	93 81       	ldd	r25, Z+3	; 0x03
    443c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4440:	dc 01       	movw	r26, r24
    4442:	cb 01       	movw	r24, r22
    4444:	9e af       	std	Y+62, r25	; 0x3e
    4446:	8d af       	std	Y+61, r24	; 0x3d
    4448:	8d ad       	ldd	r24, Y+61	; 0x3d
    444a:	9e ad       	ldd	r25, Y+62	; 0x3e
    444c:	9a af       	std	Y+58, r25	; 0x3a
    444e:	89 af       	std	Y+57, r24	; 0x39
    4450:	89 ad       	ldd	r24, Y+57	; 0x39
    4452:	9a ad       	ldd	r25, Y+58	; 0x3a
    4454:	01 97       	sbiw	r24, 0x01	; 1
    4456:	f1 f7       	brne	.-4      	; 0x4454 <main+0x2c56>
    4458:	9a af       	std	Y+58, r25	; 0x3a
    445a:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
    445c:	81 e0       	ldi	r24, 0x01	; 1
    445e:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>





		for(Local_u8Iterator3=0;Local_u8Iterator3<2;Local_u8Iterator3++)
    4462:	de 01       	movw	r26, r28
    4464:	a5 58       	subi	r26, 0x85	; 133
    4466:	be 4f       	sbci	r27, 0xFE	; 254
    4468:	fe 01       	movw	r30, r28
    446a:	e5 58       	subi	r30, 0x85	; 133
    446c:	fe 4f       	sbci	r31, 0xFE	; 254
    446e:	80 81       	ld	r24, Z
    4470:	8f 5f       	subi	r24, 0xFF	; 255
    4472:	8c 93       	st	X, r24
    4474:	fe 01       	movw	r30, r28
    4476:	e5 58       	subi	r30, 0x85	; 133
    4478:	fe 4f       	sbci	r31, 0xFE	; 254
    447a:	80 81       	ld	r24, Z
    447c:	82 30       	cpi	r24, 0x02	; 2
    447e:	10 f4       	brcc	.+4      	; 0x4484 <main+0x2c86>
    4480:	0c 94 ff 15 	jmp	0x2bfe	; 0x2bfe <main+0x1400>
			_delay_ms(10);
			CLCD_u8SendCommand(0b00000001);
		}


		CLCD_u8WriteSpecialCharacter(Pattern,1,1,15);
    4484:	ce 01       	movw	r24, r28
    4486:	87 52       	subi	r24, 0x27	; 39
    4488:	9e 4f       	sbci	r25, 0xFE	; 254
    448a:	61 e0       	ldi	r22, 0x01	; 1
    448c:	41 e0       	ldi	r20, 0x01	; 1
    448e:	2f e0       	ldi	r18, 0x0F	; 15
    4490:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
		CLCD_u8GoToXY(0,2);
    4494:	80 e0       	ldi	r24, 0x00	; 0
    4496:	62 e0       	ldi	r22, 0x02	; 2
    4498:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(kill);
    449c:	ce 01       	movw	r24, r28
    449e:	8f 53       	subi	r24, 0x3F	; 63
    44a0:	9e 4f       	sbci	r25, 0xFE	; 254
    44a2:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
		CLCD_u8WriteSpecialCharacter(Pattern9,0,1,0);
    44a6:	ce 01       	movw	r24, r28
    44a8:	87 5e       	subi	r24, 0xE7	; 231
    44aa:	9d 4f       	sbci	r25, 0xFD	; 253
    44ac:	60 e0       	ldi	r22, 0x00	; 0
    44ae:	41 e0       	ldi	r20, 0x01	; 1
    44b0:	20 e0       	ldi	r18, 0x00	; 0
    44b2:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>

		for(Local_u8Iterator=1;Local_u8Iterator<=14;Local_u8Iterator++)
    44b6:	fe 01       	movw	r30, r28
    44b8:	e2 58       	subi	r30, 0x82	; 130
    44ba:	fe 4f       	sbci	r31, 0xFE	; 254
    44bc:	81 e0       	ldi	r24, 0x01	; 1
    44be:	80 83       	st	Z, r24
    44c0:	90 c0       	rjmp	.+288    	; 0x45e2 <main+0x2de4>
		{

			CLCD_u8WriteSpecialCharacter(Pattern10,2,1,Local_u8Iterator);
    44c2:	ce 01       	movw	r24, r28
    44c4:	8f 5d       	subi	r24, 0xDF	; 223
    44c6:	9d 4f       	sbci	r25, 0xFD	; 253
    44c8:	fe 01       	movw	r30, r28
    44ca:	e2 58       	subi	r30, 0x82	; 130
    44cc:	fe 4f       	sbci	r31, 0xFE	; 254
    44ce:	62 e0       	ldi	r22, 0x02	; 2
    44d0:	41 e0       	ldi	r20, 0x01	; 1
    44d2:	20 81       	ld	r18, Z
    44d4:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    44d8:	80 e0       	ldi	r24, 0x00	; 0
    44da:	90 e0       	ldi	r25, 0x00	; 0
    44dc:	a0 e2       	ldi	r26, 0x20	; 32
    44de:	b1 e4       	ldi	r27, 0x41	; 65
    44e0:	8d ab       	std	Y+53, r24	; 0x35
    44e2:	9e ab       	std	Y+54, r25	; 0x36
    44e4:	af ab       	std	Y+55, r26	; 0x37
    44e6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44e8:	6d a9       	ldd	r22, Y+53	; 0x35
    44ea:	7e a9       	ldd	r23, Y+54	; 0x36
    44ec:	8f a9       	ldd	r24, Y+55	; 0x37
    44ee:	98 ad       	ldd	r25, Y+56	; 0x38
    44f0:	20 e0       	ldi	r18, 0x00	; 0
    44f2:	30 e0       	ldi	r19, 0x00	; 0
    44f4:	4a ef       	ldi	r20, 0xFA	; 250
    44f6:	54 e4       	ldi	r21, 0x44	; 68
    44f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44fc:	dc 01       	movw	r26, r24
    44fe:	cb 01       	movw	r24, r22
    4500:	89 ab       	std	Y+49, r24	; 0x31
    4502:	9a ab       	std	Y+50, r25	; 0x32
    4504:	ab ab       	std	Y+51, r26	; 0x33
    4506:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4508:	69 a9       	ldd	r22, Y+49	; 0x31
    450a:	7a a9       	ldd	r23, Y+50	; 0x32
    450c:	8b a9       	ldd	r24, Y+51	; 0x33
    450e:	9c a9       	ldd	r25, Y+52	; 0x34
    4510:	20 e0       	ldi	r18, 0x00	; 0
    4512:	30 e0       	ldi	r19, 0x00	; 0
    4514:	40 e8       	ldi	r20, 0x80	; 128
    4516:	5f e3       	ldi	r21, 0x3F	; 63
    4518:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    451c:	88 23       	and	r24, r24
    451e:	2c f4       	brge	.+10     	; 0x452a <main+0x2d2c>
		__ticks = 1;
    4520:	81 e0       	ldi	r24, 0x01	; 1
    4522:	90 e0       	ldi	r25, 0x00	; 0
    4524:	98 ab       	std	Y+48, r25	; 0x30
    4526:	8f a7       	std	Y+47, r24	; 0x2f
    4528:	3f c0       	rjmp	.+126    	; 0x45a8 <main+0x2daa>
	else if (__tmp > 65535)
    452a:	69 a9       	ldd	r22, Y+49	; 0x31
    452c:	7a a9       	ldd	r23, Y+50	; 0x32
    452e:	8b a9       	ldd	r24, Y+51	; 0x33
    4530:	9c a9       	ldd	r25, Y+52	; 0x34
    4532:	20 e0       	ldi	r18, 0x00	; 0
    4534:	3f ef       	ldi	r19, 0xFF	; 255
    4536:	4f e7       	ldi	r20, 0x7F	; 127
    4538:	57 e4       	ldi	r21, 0x47	; 71
    453a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    453e:	18 16       	cp	r1, r24
    4540:	4c f5       	brge	.+82     	; 0x4594 <main+0x2d96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4542:	6d a9       	ldd	r22, Y+53	; 0x35
    4544:	7e a9       	ldd	r23, Y+54	; 0x36
    4546:	8f a9       	ldd	r24, Y+55	; 0x37
    4548:	98 ad       	ldd	r25, Y+56	; 0x38
    454a:	20 e0       	ldi	r18, 0x00	; 0
    454c:	30 e0       	ldi	r19, 0x00	; 0
    454e:	40 e2       	ldi	r20, 0x20	; 32
    4550:	51 e4       	ldi	r21, 0x41	; 65
    4552:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4556:	dc 01       	movw	r26, r24
    4558:	cb 01       	movw	r24, r22
    455a:	bc 01       	movw	r22, r24
    455c:	cd 01       	movw	r24, r26
    455e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4562:	dc 01       	movw	r26, r24
    4564:	cb 01       	movw	r24, r22
    4566:	98 ab       	std	Y+48, r25	; 0x30
    4568:	8f a7       	std	Y+47, r24	; 0x2f
    456a:	0f c0       	rjmp	.+30     	; 0x458a <main+0x2d8c>
    456c:	88 ec       	ldi	r24, 0xC8	; 200
    456e:	90 e0       	ldi	r25, 0x00	; 0
    4570:	9e a7       	std	Y+46, r25	; 0x2e
    4572:	8d a7       	std	Y+45, r24	; 0x2d
    4574:	8d a5       	ldd	r24, Y+45	; 0x2d
    4576:	9e a5       	ldd	r25, Y+46	; 0x2e
    4578:	01 97       	sbiw	r24, 0x01	; 1
    457a:	f1 f7       	brne	.-4      	; 0x4578 <main+0x2d7a>
    457c:	9e a7       	std	Y+46, r25	; 0x2e
    457e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4580:	8f a5       	ldd	r24, Y+47	; 0x2f
    4582:	98 a9       	ldd	r25, Y+48	; 0x30
    4584:	01 97       	sbiw	r24, 0x01	; 1
    4586:	98 ab       	std	Y+48, r25	; 0x30
    4588:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    458a:	8f a5       	ldd	r24, Y+47	; 0x2f
    458c:	98 a9       	ldd	r25, Y+48	; 0x30
    458e:	00 97       	sbiw	r24, 0x00	; 0
    4590:	69 f7       	brne	.-38     	; 0x456c <main+0x2d6e>
    4592:	14 c0       	rjmp	.+40     	; 0x45bc <main+0x2dbe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4594:	69 a9       	ldd	r22, Y+49	; 0x31
    4596:	7a a9       	ldd	r23, Y+50	; 0x32
    4598:	8b a9       	ldd	r24, Y+51	; 0x33
    459a:	9c a9       	ldd	r25, Y+52	; 0x34
    459c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    45a0:	dc 01       	movw	r26, r24
    45a2:	cb 01       	movw	r24, r22
    45a4:	98 ab       	std	Y+48, r25	; 0x30
    45a6:	8f a7       	std	Y+47, r24	; 0x2f
    45a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    45aa:	98 a9       	ldd	r25, Y+48	; 0x30
    45ac:	9c a7       	std	Y+44, r25	; 0x2c
    45ae:	8b a7       	std	Y+43, r24	; 0x2b
    45b0:	8b a5       	ldd	r24, Y+43	; 0x2b
    45b2:	9c a5       	ldd	r25, Y+44	; 0x2c
    45b4:	01 97       	sbiw	r24, 0x01	; 1
    45b6:	f1 f7       	brne	.-4      	; 0x45b4 <main+0x2db6>
    45b8:	9c a7       	std	Y+44, r25	; 0x2c
    45ba:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(10);
			CLCD_u8GoToXY(1,Local_u8Iterator);
    45bc:	fe 01       	movw	r30, r28
    45be:	e2 58       	subi	r30, 0x82	; 130
    45c0:	fe 4f       	sbci	r31, 0xFE	; 254
    45c2:	81 e0       	ldi	r24, 0x01	; 1
    45c4:	60 81       	ld	r22, Z
    45c6:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
			CLCD_u8SendData(' ');
    45ca:	80 e2       	ldi	r24, 0x20	; 32
    45cc:	0e 94 3b 06 	call	0xc76	; 0xc76 <CLCD_u8SendData>
		CLCD_u8WriteSpecialCharacter(Pattern,1,1,15);
		CLCD_u8GoToXY(0,2);
		CLCD_u8SendString(kill);
		CLCD_u8WriteSpecialCharacter(Pattern9,0,1,0);

		for(Local_u8Iterator=1;Local_u8Iterator<=14;Local_u8Iterator++)
    45d0:	de 01       	movw	r26, r28
    45d2:	a2 58       	subi	r26, 0x82	; 130
    45d4:	be 4f       	sbci	r27, 0xFE	; 254
    45d6:	fe 01       	movw	r30, r28
    45d8:	e2 58       	subi	r30, 0x82	; 130
    45da:	fe 4f       	sbci	r31, 0xFE	; 254
    45dc:	80 81       	ld	r24, Z
    45de:	8f 5f       	subi	r24, 0xFF	; 255
    45e0:	8c 93       	st	X, r24
    45e2:	fe 01       	movw	r30, r28
    45e4:	e2 58       	subi	r30, 0x82	; 130
    45e6:	fe 4f       	sbci	r31, 0xFE	; 254
    45e8:	80 81       	ld	r24, Z
    45ea:	8f 30       	cpi	r24, 0x0F	; 15
    45ec:	08 f4       	brcc	.+2      	; 0x45f0 <main+0x2df2>
    45ee:	69 cf       	rjmp	.-302    	; 0x44c2 <main+0x2cc4>
			CLCD_u8GoToXY(1,Local_u8Iterator);
			CLCD_u8SendData(' ');

		}

		CLCD_u8WriteSpecialCharacter(Pattern11,3,1,15);
    45f0:	ce 01       	movw	r24, r28
    45f2:	87 5d       	subi	r24, 0xD7	; 215
    45f4:	9d 4f       	sbci	r25, 0xFD	; 253
    45f6:	63 e0       	ldi	r22, 0x03	; 3
    45f8:	41 e0       	ldi	r20, 0x01	; 1
    45fa:	2f e0       	ldi	r18, 0x0F	; 15
    45fc:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    4600:	80 e0       	ldi	r24, 0x00	; 0
    4602:	90 e0       	ldi	r25, 0x00	; 0
    4604:	a8 ec       	ldi	r26, 0xC8	; 200
    4606:	b2 e4       	ldi	r27, 0x42	; 66
    4608:	8f a3       	std	Y+39, r24	; 0x27
    460a:	98 a7       	std	Y+40, r25	; 0x28
    460c:	a9 a7       	std	Y+41, r26	; 0x29
    460e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4610:	6f a1       	ldd	r22, Y+39	; 0x27
    4612:	78 a5       	ldd	r23, Y+40	; 0x28
    4614:	89 a5       	ldd	r24, Y+41	; 0x29
    4616:	9a a5       	ldd	r25, Y+42	; 0x2a
    4618:	20 e0       	ldi	r18, 0x00	; 0
    461a:	30 e0       	ldi	r19, 0x00	; 0
    461c:	4a ef       	ldi	r20, 0xFA	; 250
    461e:	54 e4       	ldi	r21, 0x44	; 68
    4620:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4624:	dc 01       	movw	r26, r24
    4626:	cb 01       	movw	r24, r22
    4628:	8b a3       	std	Y+35, r24	; 0x23
    462a:	9c a3       	std	Y+36, r25	; 0x24
    462c:	ad a3       	std	Y+37, r26	; 0x25
    462e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4630:	6b a1       	ldd	r22, Y+35	; 0x23
    4632:	7c a1       	ldd	r23, Y+36	; 0x24
    4634:	8d a1       	ldd	r24, Y+37	; 0x25
    4636:	9e a1       	ldd	r25, Y+38	; 0x26
    4638:	20 e0       	ldi	r18, 0x00	; 0
    463a:	30 e0       	ldi	r19, 0x00	; 0
    463c:	40 e8       	ldi	r20, 0x80	; 128
    463e:	5f e3       	ldi	r21, 0x3F	; 63
    4640:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4644:	88 23       	and	r24, r24
    4646:	2c f4       	brge	.+10     	; 0x4652 <main+0x2e54>
		__ticks = 1;
    4648:	81 e0       	ldi	r24, 0x01	; 1
    464a:	90 e0       	ldi	r25, 0x00	; 0
    464c:	9a a3       	std	Y+34, r25	; 0x22
    464e:	89 a3       	std	Y+33, r24	; 0x21
    4650:	3f c0       	rjmp	.+126    	; 0x46d0 <main+0x2ed2>
	else if (__tmp > 65535)
    4652:	6b a1       	ldd	r22, Y+35	; 0x23
    4654:	7c a1       	ldd	r23, Y+36	; 0x24
    4656:	8d a1       	ldd	r24, Y+37	; 0x25
    4658:	9e a1       	ldd	r25, Y+38	; 0x26
    465a:	20 e0       	ldi	r18, 0x00	; 0
    465c:	3f ef       	ldi	r19, 0xFF	; 255
    465e:	4f e7       	ldi	r20, 0x7F	; 127
    4660:	57 e4       	ldi	r21, 0x47	; 71
    4662:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4666:	18 16       	cp	r1, r24
    4668:	4c f5       	brge	.+82     	; 0x46bc <main+0x2ebe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    466a:	6f a1       	ldd	r22, Y+39	; 0x27
    466c:	78 a5       	ldd	r23, Y+40	; 0x28
    466e:	89 a5       	ldd	r24, Y+41	; 0x29
    4670:	9a a5       	ldd	r25, Y+42	; 0x2a
    4672:	20 e0       	ldi	r18, 0x00	; 0
    4674:	30 e0       	ldi	r19, 0x00	; 0
    4676:	40 e2       	ldi	r20, 0x20	; 32
    4678:	51 e4       	ldi	r21, 0x41	; 65
    467a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    467e:	dc 01       	movw	r26, r24
    4680:	cb 01       	movw	r24, r22
    4682:	bc 01       	movw	r22, r24
    4684:	cd 01       	movw	r24, r26
    4686:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    468a:	dc 01       	movw	r26, r24
    468c:	cb 01       	movw	r24, r22
    468e:	9a a3       	std	Y+34, r25	; 0x22
    4690:	89 a3       	std	Y+33, r24	; 0x21
    4692:	0f c0       	rjmp	.+30     	; 0x46b2 <main+0x2eb4>
    4694:	88 ec       	ldi	r24, 0xC8	; 200
    4696:	90 e0       	ldi	r25, 0x00	; 0
    4698:	98 a3       	std	Y+32, r25	; 0x20
    469a:	8f 8f       	std	Y+31, r24	; 0x1f
    469c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    469e:	98 a1       	ldd	r25, Y+32	; 0x20
    46a0:	01 97       	sbiw	r24, 0x01	; 1
    46a2:	f1 f7       	brne	.-4      	; 0x46a0 <main+0x2ea2>
    46a4:	98 a3       	std	Y+32, r25	; 0x20
    46a6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46a8:	89 a1       	ldd	r24, Y+33	; 0x21
    46aa:	9a a1       	ldd	r25, Y+34	; 0x22
    46ac:	01 97       	sbiw	r24, 0x01	; 1
    46ae:	9a a3       	std	Y+34, r25	; 0x22
    46b0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46b2:	89 a1       	ldd	r24, Y+33	; 0x21
    46b4:	9a a1       	ldd	r25, Y+34	; 0x22
    46b6:	00 97       	sbiw	r24, 0x00	; 0
    46b8:	69 f7       	brne	.-38     	; 0x4694 <main+0x2e96>
    46ba:	14 c0       	rjmp	.+40     	; 0x46e4 <main+0x2ee6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46bc:	6b a1       	ldd	r22, Y+35	; 0x23
    46be:	7c a1       	ldd	r23, Y+36	; 0x24
    46c0:	8d a1       	ldd	r24, Y+37	; 0x25
    46c2:	9e a1       	ldd	r25, Y+38	; 0x26
    46c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    46c8:	dc 01       	movw	r26, r24
    46ca:	cb 01       	movw	r24, r22
    46cc:	9a a3       	std	Y+34, r25	; 0x22
    46ce:	89 a3       	std	Y+33, r24	; 0x21
    46d0:	89 a1       	ldd	r24, Y+33	; 0x21
    46d2:	9a a1       	ldd	r25, Y+34	; 0x22
    46d4:	9e 8f       	std	Y+30, r25	; 0x1e
    46d6:	8d 8f       	std	Y+29, r24	; 0x1d
    46d8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46da:	9e 8d       	ldd	r25, Y+30	; 0x1e
    46dc:	01 97       	sbiw	r24, 0x01	; 1
    46de:	f1 f7       	brne	.-4      	; 0x46dc <main+0x2ede>
    46e0:	9e 8f       	std	Y+30, r25	; 0x1e
    46e2:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(100);

		CLCD_u8WriteSpecialCharacter(Pattern12,4,1,15);
    46e4:	ce 01       	movw	r24, r28
    46e6:	8f 5c       	subi	r24, 0xCF	; 207
    46e8:	9d 4f       	sbci	r25, 0xFD	; 253
    46ea:	64 e0       	ldi	r22, 0x04	; 4
    46ec:	41 e0       	ldi	r20, 0x01	; 1
    46ee:	2f e0       	ldi	r18, 0x0F	; 15
    46f0:	0e 94 2b 07 	call	0xe56	; 0xe56 <CLCD_u8WriteSpecialCharacter>
    46f4:	80 e0       	ldi	r24, 0x00	; 0
    46f6:	90 e0       	ldi	r25, 0x00	; 0
    46f8:	a8 ec       	ldi	r26, 0xC8	; 200
    46fa:	b2 e4       	ldi	r27, 0x42	; 66
    46fc:	89 8f       	std	Y+25, r24	; 0x19
    46fe:	9a 8f       	std	Y+26, r25	; 0x1a
    4700:	ab 8f       	std	Y+27, r26	; 0x1b
    4702:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4704:	69 8d       	ldd	r22, Y+25	; 0x19
    4706:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4708:	8b 8d       	ldd	r24, Y+27	; 0x1b
    470a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    470c:	20 e0       	ldi	r18, 0x00	; 0
    470e:	30 e0       	ldi	r19, 0x00	; 0
    4710:	4a ef       	ldi	r20, 0xFA	; 250
    4712:	54 e4       	ldi	r21, 0x44	; 68
    4714:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4718:	dc 01       	movw	r26, r24
    471a:	cb 01       	movw	r24, r22
    471c:	8d 8b       	std	Y+21, r24	; 0x15
    471e:	9e 8b       	std	Y+22, r25	; 0x16
    4720:	af 8b       	std	Y+23, r26	; 0x17
    4722:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4724:	6d 89       	ldd	r22, Y+21	; 0x15
    4726:	7e 89       	ldd	r23, Y+22	; 0x16
    4728:	8f 89       	ldd	r24, Y+23	; 0x17
    472a:	98 8d       	ldd	r25, Y+24	; 0x18
    472c:	20 e0       	ldi	r18, 0x00	; 0
    472e:	30 e0       	ldi	r19, 0x00	; 0
    4730:	40 e8       	ldi	r20, 0x80	; 128
    4732:	5f e3       	ldi	r21, 0x3F	; 63
    4734:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4738:	88 23       	and	r24, r24
    473a:	2c f4       	brge	.+10     	; 0x4746 <main+0x2f48>
		__ticks = 1;
    473c:	81 e0       	ldi	r24, 0x01	; 1
    473e:	90 e0       	ldi	r25, 0x00	; 0
    4740:	9c 8b       	std	Y+20, r25	; 0x14
    4742:	8b 8b       	std	Y+19, r24	; 0x13
    4744:	3f c0       	rjmp	.+126    	; 0x47c4 <main+0x2fc6>
	else if (__tmp > 65535)
    4746:	6d 89       	ldd	r22, Y+21	; 0x15
    4748:	7e 89       	ldd	r23, Y+22	; 0x16
    474a:	8f 89       	ldd	r24, Y+23	; 0x17
    474c:	98 8d       	ldd	r25, Y+24	; 0x18
    474e:	20 e0       	ldi	r18, 0x00	; 0
    4750:	3f ef       	ldi	r19, 0xFF	; 255
    4752:	4f e7       	ldi	r20, 0x7F	; 127
    4754:	57 e4       	ldi	r21, 0x47	; 71
    4756:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    475a:	18 16       	cp	r1, r24
    475c:	4c f5       	brge	.+82     	; 0x47b0 <main+0x2fb2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    475e:	69 8d       	ldd	r22, Y+25	; 0x19
    4760:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4762:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4764:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4766:	20 e0       	ldi	r18, 0x00	; 0
    4768:	30 e0       	ldi	r19, 0x00	; 0
    476a:	40 e2       	ldi	r20, 0x20	; 32
    476c:	51 e4       	ldi	r21, 0x41	; 65
    476e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4772:	dc 01       	movw	r26, r24
    4774:	cb 01       	movw	r24, r22
    4776:	bc 01       	movw	r22, r24
    4778:	cd 01       	movw	r24, r26
    477a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    477e:	dc 01       	movw	r26, r24
    4780:	cb 01       	movw	r24, r22
    4782:	9c 8b       	std	Y+20, r25	; 0x14
    4784:	8b 8b       	std	Y+19, r24	; 0x13
    4786:	0f c0       	rjmp	.+30     	; 0x47a6 <main+0x2fa8>
    4788:	88 ec       	ldi	r24, 0xC8	; 200
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	9a 8b       	std	Y+18, r25	; 0x12
    478e:	89 8b       	std	Y+17, r24	; 0x11
    4790:	89 89       	ldd	r24, Y+17	; 0x11
    4792:	9a 89       	ldd	r25, Y+18	; 0x12
    4794:	01 97       	sbiw	r24, 0x01	; 1
    4796:	f1 f7       	brne	.-4      	; 0x4794 <main+0x2f96>
    4798:	9a 8b       	std	Y+18, r25	; 0x12
    479a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    479c:	8b 89       	ldd	r24, Y+19	; 0x13
    479e:	9c 89       	ldd	r25, Y+20	; 0x14
    47a0:	01 97       	sbiw	r24, 0x01	; 1
    47a2:	9c 8b       	std	Y+20, r25	; 0x14
    47a4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47a6:	8b 89       	ldd	r24, Y+19	; 0x13
    47a8:	9c 89       	ldd	r25, Y+20	; 0x14
    47aa:	00 97       	sbiw	r24, 0x00	; 0
    47ac:	69 f7       	brne	.-38     	; 0x4788 <main+0x2f8a>
    47ae:	14 c0       	rjmp	.+40     	; 0x47d8 <main+0x2fda>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47b0:	6d 89       	ldd	r22, Y+21	; 0x15
    47b2:	7e 89       	ldd	r23, Y+22	; 0x16
    47b4:	8f 89       	ldd	r24, Y+23	; 0x17
    47b6:	98 8d       	ldd	r25, Y+24	; 0x18
    47b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47bc:	dc 01       	movw	r26, r24
    47be:	cb 01       	movw	r24, r22
    47c0:	9c 8b       	std	Y+20, r25	; 0x14
    47c2:	8b 8b       	std	Y+19, r24	; 0x13
    47c4:	8b 89       	ldd	r24, Y+19	; 0x13
    47c6:	9c 89       	ldd	r25, Y+20	; 0x14
    47c8:	98 8b       	std	Y+16, r25	; 0x10
    47ca:	8f 87       	std	Y+15, r24	; 0x0f
    47cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    47ce:	98 89       	ldd	r25, Y+16	; 0x10
    47d0:	01 97       	sbiw	r24, 0x01	; 1
    47d2:	f1 f7       	brne	.-4      	; 0x47d0 <main+0x2fd2>
    47d4:	98 8b       	std	Y+16, r25	; 0x10
    47d6:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(100);

		CLCD_u8SendCommand(0b00000001);
    47d8:	81 e0       	ldi	r24, 0x01	; 1
    47da:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>

		CLCD_u8GoToXY(0,3);
    47de:	80 e0       	ldi	r24, 0x00	; 0
    47e0:	63 e0       	ldi	r22, 0x03	; 3
    47e2:	0e 94 07 07 	call	0xe0e	; 0xe0e <CLCD_u8GoToXY>
		CLCD_u8SendString(RIP);
    47e6:	ce 01       	movw	r24, r28
    47e8:	81 53       	subi	r24, 0x31	; 49
    47ea:	9e 4f       	sbci	r25, 0xFE	; 254
    47ec:	0e 94 db 06 	call	0xdb6	; 0xdb6 <CLCD_u8SendString>
    47f0:	80 e0       	ldi	r24, 0x00	; 0
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	aa e7       	ldi	r26, 0x7A	; 122
    47f6:	b3 e4       	ldi	r27, 0x43	; 67
    47f8:	8b 87       	std	Y+11, r24	; 0x0b
    47fa:	9c 87       	std	Y+12, r25	; 0x0c
    47fc:	ad 87       	std	Y+13, r26	; 0x0d
    47fe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4800:	6b 85       	ldd	r22, Y+11	; 0x0b
    4802:	7c 85       	ldd	r23, Y+12	; 0x0c
    4804:	8d 85       	ldd	r24, Y+13	; 0x0d
    4806:	9e 85       	ldd	r25, Y+14	; 0x0e
    4808:	20 e0       	ldi	r18, 0x00	; 0
    480a:	30 e0       	ldi	r19, 0x00	; 0
    480c:	4a ef       	ldi	r20, 0xFA	; 250
    480e:	54 e4       	ldi	r21, 0x44	; 68
    4810:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4814:	dc 01       	movw	r26, r24
    4816:	cb 01       	movw	r24, r22
    4818:	8f 83       	std	Y+7, r24	; 0x07
    481a:	98 87       	std	Y+8, r25	; 0x08
    481c:	a9 87       	std	Y+9, r26	; 0x09
    481e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4820:	6f 81       	ldd	r22, Y+7	; 0x07
    4822:	78 85       	ldd	r23, Y+8	; 0x08
    4824:	89 85       	ldd	r24, Y+9	; 0x09
    4826:	9a 85       	ldd	r25, Y+10	; 0x0a
    4828:	20 e0       	ldi	r18, 0x00	; 0
    482a:	30 e0       	ldi	r19, 0x00	; 0
    482c:	40 e8       	ldi	r20, 0x80	; 128
    482e:	5f e3       	ldi	r21, 0x3F	; 63
    4830:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4834:	88 23       	and	r24, r24
    4836:	2c f4       	brge	.+10     	; 0x4842 <main+0x3044>
		__ticks = 1;
    4838:	81 e0       	ldi	r24, 0x01	; 1
    483a:	90 e0       	ldi	r25, 0x00	; 0
    483c:	9e 83       	std	Y+6, r25	; 0x06
    483e:	8d 83       	std	Y+5, r24	; 0x05
    4840:	3f c0       	rjmp	.+126    	; 0x48c0 <main+0x30c2>
	else if (__tmp > 65535)
    4842:	6f 81       	ldd	r22, Y+7	; 0x07
    4844:	78 85       	ldd	r23, Y+8	; 0x08
    4846:	89 85       	ldd	r24, Y+9	; 0x09
    4848:	9a 85       	ldd	r25, Y+10	; 0x0a
    484a:	20 e0       	ldi	r18, 0x00	; 0
    484c:	3f ef       	ldi	r19, 0xFF	; 255
    484e:	4f e7       	ldi	r20, 0x7F	; 127
    4850:	57 e4       	ldi	r21, 0x47	; 71
    4852:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4856:	18 16       	cp	r1, r24
    4858:	4c f5       	brge	.+82     	; 0x48ac <main+0x30ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    485a:	6b 85       	ldd	r22, Y+11	; 0x0b
    485c:	7c 85       	ldd	r23, Y+12	; 0x0c
    485e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4860:	9e 85       	ldd	r25, Y+14	; 0x0e
    4862:	20 e0       	ldi	r18, 0x00	; 0
    4864:	30 e0       	ldi	r19, 0x00	; 0
    4866:	40 e2       	ldi	r20, 0x20	; 32
    4868:	51 e4       	ldi	r21, 0x41	; 65
    486a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    486e:	dc 01       	movw	r26, r24
    4870:	cb 01       	movw	r24, r22
    4872:	bc 01       	movw	r22, r24
    4874:	cd 01       	movw	r24, r26
    4876:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    487a:	dc 01       	movw	r26, r24
    487c:	cb 01       	movw	r24, r22
    487e:	9e 83       	std	Y+6, r25	; 0x06
    4880:	8d 83       	std	Y+5, r24	; 0x05
    4882:	0f c0       	rjmp	.+30     	; 0x48a2 <main+0x30a4>
    4884:	88 ec       	ldi	r24, 0xC8	; 200
    4886:	90 e0       	ldi	r25, 0x00	; 0
    4888:	9c 83       	std	Y+4, r25	; 0x04
    488a:	8b 83       	std	Y+3, r24	; 0x03
    488c:	8b 81       	ldd	r24, Y+3	; 0x03
    488e:	9c 81       	ldd	r25, Y+4	; 0x04
    4890:	01 97       	sbiw	r24, 0x01	; 1
    4892:	f1 f7       	brne	.-4      	; 0x4890 <main+0x3092>
    4894:	9c 83       	std	Y+4, r25	; 0x04
    4896:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4898:	8d 81       	ldd	r24, Y+5	; 0x05
    489a:	9e 81       	ldd	r25, Y+6	; 0x06
    489c:	01 97       	sbiw	r24, 0x01	; 1
    489e:	9e 83       	std	Y+6, r25	; 0x06
    48a0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48a2:	8d 81       	ldd	r24, Y+5	; 0x05
    48a4:	9e 81       	ldd	r25, Y+6	; 0x06
    48a6:	00 97       	sbiw	r24, 0x00	; 0
    48a8:	69 f7       	brne	.-38     	; 0x4884 <main+0x3086>
    48aa:	14 c0       	rjmp	.+40     	; 0x48d4 <main+0x30d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48ac:	6f 81       	ldd	r22, Y+7	; 0x07
    48ae:	78 85       	ldd	r23, Y+8	; 0x08
    48b0:	89 85       	ldd	r24, Y+9	; 0x09
    48b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    48b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48b8:	dc 01       	movw	r26, r24
    48ba:	cb 01       	movw	r24, r22
    48bc:	9e 83       	std	Y+6, r25	; 0x06
    48be:	8d 83       	std	Y+5, r24	; 0x05
    48c0:	8d 81       	ldd	r24, Y+5	; 0x05
    48c2:	9e 81       	ldd	r25, Y+6	; 0x06
    48c4:	9a 83       	std	Y+2, r25	; 0x02
    48c6:	89 83       	std	Y+1, r24	; 0x01
    48c8:	89 81       	ldd	r24, Y+1	; 0x01
    48ca:	9a 81       	ldd	r25, Y+2	; 0x02
    48cc:	01 97       	sbiw	r24, 0x01	; 1
    48ce:	f1 f7       	brne	.-4      	; 0x48cc <main+0x30ce>
    48d0:	9a 83       	std	Y+2, r25	; 0x02
    48d2:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(250);

		CLCD_u8SendCommand(0b00000001);
    48d4:	81 e0       	ldi	r24, 0x01	; 1
    48d6:	0e 94 9b 05 	call	0xb36	; 0xb36 <CLCD_u8SendCommand>
    48da:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <main+0x8e8>

000048de <__udivmodsi4>:
    48de:	a1 e2       	ldi	r26, 0x21	; 33
    48e0:	1a 2e       	mov	r1, r26
    48e2:	aa 1b       	sub	r26, r26
    48e4:	bb 1b       	sub	r27, r27
    48e6:	fd 01       	movw	r30, r26
    48e8:	0d c0       	rjmp	.+26     	; 0x4904 <__udivmodsi4_ep>

000048ea <__udivmodsi4_loop>:
    48ea:	aa 1f       	adc	r26, r26
    48ec:	bb 1f       	adc	r27, r27
    48ee:	ee 1f       	adc	r30, r30
    48f0:	ff 1f       	adc	r31, r31
    48f2:	a2 17       	cp	r26, r18
    48f4:	b3 07       	cpc	r27, r19
    48f6:	e4 07       	cpc	r30, r20
    48f8:	f5 07       	cpc	r31, r21
    48fa:	20 f0       	brcs	.+8      	; 0x4904 <__udivmodsi4_ep>
    48fc:	a2 1b       	sub	r26, r18
    48fe:	b3 0b       	sbc	r27, r19
    4900:	e4 0b       	sbc	r30, r20
    4902:	f5 0b       	sbc	r31, r21

00004904 <__udivmodsi4_ep>:
    4904:	66 1f       	adc	r22, r22
    4906:	77 1f       	adc	r23, r23
    4908:	88 1f       	adc	r24, r24
    490a:	99 1f       	adc	r25, r25
    490c:	1a 94       	dec	r1
    490e:	69 f7       	brne	.-38     	; 0x48ea <__udivmodsi4_loop>
    4910:	60 95       	com	r22
    4912:	70 95       	com	r23
    4914:	80 95       	com	r24
    4916:	90 95       	com	r25
    4918:	9b 01       	movw	r18, r22
    491a:	ac 01       	movw	r20, r24
    491c:	bd 01       	movw	r22, r26
    491e:	cf 01       	movw	r24, r30
    4920:	08 95       	ret

00004922 <__prologue_saves__>:
    4922:	2f 92       	push	r2
    4924:	3f 92       	push	r3
    4926:	4f 92       	push	r4
    4928:	5f 92       	push	r5
    492a:	6f 92       	push	r6
    492c:	7f 92       	push	r7
    492e:	8f 92       	push	r8
    4930:	9f 92       	push	r9
    4932:	af 92       	push	r10
    4934:	bf 92       	push	r11
    4936:	cf 92       	push	r12
    4938:	df 92       	push	r13
    493a:	ef 92       	push	r14
    493c:	ff 92       	push	r15
    493e:	0f 93       	push	r16
    4940:	1f 93       	push	r17
    4942:	cf 93       	push	r28
    4944:	df 93       	push	r29
    4946:	cd b7       	in	r28, 0x3d	; 61
    4948:	de b7       	in	r29, 0x3e	; 62
    494a:	ca 1b       	sub	r28, r26
    494c:	db 0b       	sbc	r29, r27
    494e:	0f b6       	in	r0, 0x3f	; 63
    4950:	f8 94       	cli
    4952:	de bf       	out	0x3e, r29	; 62
    4954:	0f be       	out	0x3f, r0	; 63
    4956:	cd bf       	out	0x3d, r28	; 61
    4958:	09 94       	ijmp

0000495a <__epilogue_restores__>:
    495a:	2a 88       	ldd	r2, Y+18	; 0x12
    495c:	39 88       	ldd	r3, Y+17	; 0x11
    495e:	48 88       	ldd	r4, Y+16	; 0x10
    4960:	5f 84       	ldd	r5, Y+15	; 0x0f
    4962:	6e 84       	ldd	r6, Y+14	; 0x0e
    4964:	7d 84       	ldd	r7, Y+13	; 0x0d
    4966:	8c 84       	ldd	r8, Y+12	; 0x0c
    4968:	9b 84       	ldd	r9, Y+11	; 0x0b
    496a:	aa 84       	ldd	r10, Y+10	; 0x0a
    496c:	b9 84       	ldd	r11, Y+9	; 0x09
    496e:	c8 84       	ldd	r12, Y+8	; 0x08
    4970:	df 80       	ldd	r13, Y+7	; 0x07
    4972:	ee 80       	ldd	r14, Y+6	; 0x06
    4974:	fd 80       	ldd	r15, Y+5	; 0x05
    4976:	0c 81       	ldd	r16, Y+4	; 0x04
    4978:	1b 81       	ldd	r17, Y+3	; 0x03
    497a:	aa 81       	ldd	r26, Y+2	; 0x02
    497c:	b9 81       	ldd	r27, Y+1	; 0x01
    497e:	ce 0f       	add	r28, r30
    4980:	d1 1d       	adc	r29, r1
    4982:	0f b6       	in	r0, 0x3f	; 63
    4984:	f8 94       	cli
    4986:	de bf       	out	0x3e, r29	; 62
    4988:	0f be       	out	0x3f, r0	; 63
    498a:	cd bf       	out	0x3d, r28	; 61
    498c:	ed 01       	movw	r28, r26
    498e:	08 95       	ret

00004990 <_exit>:
    4990:	f8 94       	cli

00004992 <__stop_program>:
    4992:	ff cf       	rjmp	.-2      	; 0x4992 <__stop_program>
